{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amina\\\\VScode\\\\FQW_new\\\\src\\\\components\\\\AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react'; // Добавляем useMemo\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminPanel.css';\n// Возможно, понадобится компонент для иконок сортировки\n// import { FaSort, FaSortUp, FaSortDown } from 'react-icons/fa';\n\n// --- Компонент для отображения иконок сортировки (опционально) ---\n// const SortIcon = ({ direction }) => {\n//   if (!direction) return <FaSort />;\n//   return direction === 'ascending' ? <FaSortUp /> : <FaSortDown />;\n// };\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  // ... (предыдущие состояния: activeTab, programs, organizations, kks, loading, error, editingItem) ...\n  const [users, setUsers] = useState([]); // Состояние для пользователей (добавим позже)\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'ascending'\n  }); // Состояние для сортировки\n\n  // --- Используем useMemo для кэширования отпарсенного user ---\n  const user = useMemo(() => {\n    const storedUser = localStorage.getItem('user');\n    try {\n      return storedUser ? JSON.parse(storedUser) : null;\n    } catch (e) {\n      console.error(\"Failed to parse user from localStorage\", e);\n      return null;\n    }\n  }, []);\n  const navigate = useNavigate();\n  const apiUrl = process.env.REACT_APP_API_URL;\n\n  // --- Функция запроса сортировки ---\n  const requestSort = key => {\n    let direction = 'ascending';\n    if (sortConfig.key === key && sortConfig.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n  };\n\n  // --- Функция получения ключа ID для текущей вкладки ---\n  const getIdKeyForTab = tab => {\n    switch (tab) {\n      case 'programs':\n        return 'ID_ProgDPO';\n      case 'organizations':\n        return 'ID_Org';\n      case 'kks':\n        return 'ID_KKS';\n      case 'users':\n        return 'ID_User';\n      // Для будущей вкладки\n      default:\n        return null;\n    }\n  };\n\n  // --- Устанавливаем сортировку по ID по умолчанию при смене вкладки ---\n  useEffect(() => {\n    const idKey = getIdKeyForTab(activeTab);\n    if (idKey) {\n      setSortConfig({\n        key: idKey,\n        direction: 'ascending'\n      });\n    } else {\n      setSortConfig({\n        key: null,\n        direction: 'ascending'\n      }); // Сброс для неизвестных вкладок\n    }\n    // fetchData будет вызван следующим useEffect\n  }, [activeTab]); // Зависимость только от activeTab\n\n  // --- useEffect для загрузки данных (основной) ---\n  useEffect(() => {\n    if (!user || user.role !== 1) {\n      navigate('/login');\n      return;\n    }\n    fetchData();\n  }, [activeTab, user, navigate]); // Зависимости как и были\n\n  const fetchData = async () => {\n    // ... (логика fetchData остается почти такой же, просто добавим case 'users' позже)\n    if (!user || user.role !== 1) {\n      console.warn(\"fetchData called without admin user, aborting.\");\n      setLoading(false);\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      let response;\n      let endpoint; // Объявим endpoint здесь\n      switch (activeTab) {\n        case 'programs':\n          endpoint = `${apiUrl}/api/programs`;\n          break;\n        case 'organizations':\n          endpoint = `${apiUrl}/api/organizations`;\n          break;\n        case 'kks':\n          endpoint = `${apiUrl}/api/kks`;\n          break;\n        case 'users':\n          endpoint = `${apiUrl}/api/users`;\n          break;\n        // Для будущей вкладки\n        default:\n          console.warn(`Unknown activeTab: ${activeTab}`);\n          setLoading(false);\n          return;\n      }\n      console.log(`Attempting to fetch ${endpoint}...`);\n      response = await axios.get(endpoint);\n      console.log(`Received response from ${endpoint}`, response.status);\n\n      // Устанавливаем соответствующие данные\n      switch (activeTab) {\n        case 'programs':\n          setPrograms(response.data);\n          break;\n        case 'organizations':\n          setOrganizations(response.data);\n          break;\n        case 'kks':\n          setKks(response.data);\n          break;\n        case 'users':\n          setUsers(response.data);\n          break;\n        // Для будущей вкладки\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(`Error fetching ${activeTab}:`, err.response || err.message || err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || `Ошибка при загрузке данных для ${activeTab}`);\n    } finally {\n      console.log(`Setting loading to false for ${activeTab}.`);\n      setLoading(false);\n    }\n  };\n\n  // --- Мемоизированные отсортированные данные ---\n  const sortedPrograms = useMemo(() => {\n    let sortableItems = [...programs];\n    if (sortConfig.key) {\n      sortableItems.sort((a, b) => {\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === 'ascending' ? 1 : -1;\n        }\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [programs, sortConfig]);\n  const sortedOrganizations = useMemo(() => {\n    // ... аналогично для organizations ...\n    let sortableItems = [...organizations];\n    if (sortConfig.key) {\n      sortableItems.sort((a, b) => {\n        // Проверка на число (для ID) или строку\n        const valA = a[sortConfig.key];\n        const valB = b[sortConfig.key];\n        const compareResult = typeof valA === 'number' && typeof valB === 'number' ? valA - valB : String(valA).localeCompare(String(valB));\n        return sortConfig.direction === 'ascending' ? compareResult : -compareResult;\n      });\n    }\n    return sortableItems;\n  }, [organizations, sortConfig]);\n  const sortedKks = useMemo(() => {\n    // ... аналогично для kks ...\n    let sortableItems = [...kks];\n    if (sortConfig.key) {\n      sortableItems.sort((a, b) => {\n        const valA = a[sortConfig.key];\n        const valB = b[sortConfig.key];\n        const compareResult = typeof valA === 'number' && typeof valB === 'number' ? valA - valB : String(valA).localeCompare(String(valB));\n        return sortConfig.direction === 'ascending' ? compareResult : -compareResult;\n      });\n    }\n    return sortableItems;\n  }, [kks, sortConfig]);\n  const sortedUsers = useMemo(() => {\n    // Для будущей вкладки\n    // ... аналогично для users ...\n    let sortableItems = [...users];\n    if (sortConfig.key) {\n      sortableItems.sort((a, b) => {\n        const valA = a[sortConfig.key];\n        const valB = b[sortConfig.key];\n        // Пример обработки роли как числа\n        if (sortConfig.key === 'Role' && typeof valA === 'number' && typeof valB === 'number') {\n          const compareResult = valA - valB;\n          return sortConfig.direction === 'ascending' ? compareResult : -compareResult;\n        }\n        // Стандартное сравнение для остальных полей\n        const compareResult = String(valA !== null && valA !== void 0 ? valA : '').localeCompare(String(valB !== null && valB !== void 0 ? valB : '')); // Добавим ?? '' для null/undefined\n        return sortConfig.direction === 'ascending' ? compareResult : -compareResult;\n      });\n    }\n    return sortableItems;\n  }, [users, sortConfig]);\n\n  // ... (handleEdit, handleSave, handleCancel, handleChange, handleLogout) ...\n  // Добавим обработчики для Add/Delete позже\n\n  // --- JSX ---\n  if (!user && loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 34\n  }, this);\n  if (!user) return null;\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 23\n  }, this);\n\n  // Функция для рендеринга заголовков таблицы с сортировкой\n  const renderSortableHeader = (label, key) => /*#__PURE__*/_jsxDEV(\"th\", {\n    onClick: () => requestSort(key),\n    className: \"sortable-header\",\n    children: [label, sortConfig.key === key ? sortConfig.direction === 'ascending' ? ' ▲' : ' ▼' : ' ↕']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'programs' ? 'active' : ''}`,\n        onClick: () => setActiveTab('programs'),\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'organizations' ? 'active' : ''}`,\n        onClick: () => setActiveTab('organizations'),\n        children: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'kks' ? 'active' : ''}`,\n        onClick: () => setActiveTab('kks'),\n        children: \"\\u041A\\u041A\\u0421\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content\",\n      children: [activeTab === 'programs' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"admin-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [renderSortableHeader('ID', 'ID_ProgDPO'), renderSortableHeader('Название', 'Name_ProgDPO'), renderSortableHeader('Тип', 'Name_Type'), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sortedPrograms.map(program => {\n              var _editingItem;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: ((_editingItem = editingItem) === null || _editingItem === void 0 ? void 0 : _editingItem.ID_ProgDPO) === program.ID_ProgDPO ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: program.ID_ProgDPO\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: editingItem.Name_ProgDPO,\n                      onChange: e => handleChange('Name_ProgDPO', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 52\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 48\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: editingItem.Name_Type // Отображаем имя, но сохранять нужно ID_Type\n                      ,\n                      onChange: e => handleChange('Name_Type', e.target.value)\n                      // Лучше использовать <select> со списком типов, если нужно менять тип\n                      ,\n                      readOnly: true // Временно делаем readOnly, т.к. сохранение Name_Type не реализовано правильно\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 52\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 48\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleSave,\n                      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 52\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleCancel,\n                      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 52\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 48\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: program.ID_ProgDPO\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: program.Name_ProgDPO\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: program.Name_Type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEdit(program),\n                      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true)\n              }, program.ID_ProgDPO, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), activeTab === 'organizations' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"admin-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [renderSortableHeader('ID', 'ID_Org'), renderSortableHeader('Полное название', 'FName'), renderSortableHeader('Краткое название', 'SName'), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sortedOrganizations.map(org => {\n              var _editingItem2;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: ((_editingItem2 = editingItem) === null || _editingItem2 === void 0 ? void 0 : _editingItem2.ID_Org) === org.ID_Org ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: org.ID_Org\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 48\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: editingItem.FName,\n                      onChange: e => handleChange('FName', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 52\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 48\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: editingItem.SName,\n                      onChange: e => handleChange('SName', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 52\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 48\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleSave,\n                      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 52\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleCancel,\n                      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 52\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 48\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: org.ID_Org\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: org.FName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: org.SName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEdit(org),\n                      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true)\n              }, org.ID_Org, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 38\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), activeTab === 'kks' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"admin-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [renderSortableHeader('ID', 'ID_KKS'), renderSortableHeader('Название', 'Name_KKS'), renderSortableHeader('Краткое обозначение', 'SName_KKS'), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sortedKks.map(kksItem => {\n              var _editingItem3;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: ((_editingItem3 = editingItem) === null || _editingItem3 === void 0 ? void 0 : _editingItem3.ID_KKS) === kksItem.ID_KKS ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: kksItem.ID_KKS\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: editingItem.Name_KKS,\n                      onChange: e => handleChange('Name_KKS', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: editingItem.SName_KKS,\n                      onChange: e => handleChange('SName_KKS', e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleSave,\n                      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 401,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: handleCancel,\n                      children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: kksItem.ID_KKS\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: kksItem.Name_KKS\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: kksItem.SName_KKS\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleEdit(kksItem),\n                      children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true)\n              }, kksItem.ID_KKS, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 36\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPanel, \"6/+95ugGPtGp8sTCaDHSaeQ7gQE=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPanel","_s","users","setUsers","sortConfig","setSortConfig","key","direction","user","storedUser","localStorage","getItem","JSON","parse","e","console","error","navigate","apiUrl","process","env","REACT_APP_API_URL","requestSort","getIdKeyForTab","tab","idKey","activeTab","role","fetchData","warn","setLoading","setError","response","endpoint","log","get","status","setPrograms","data","setOrganizations","setKks","err","_err$response","_err$response$data","message","sortedPrograms","sortableItems","programs","sort","a","b","sortedOrganizations","organizations","valA","valB","compareResult","String","localeCompare","sortedKks","kks","sortedUsers","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderSortableHeader","label","onClick","handleLogout","setActiveTab","map","program","_editingItem","editingItem","ID_ProgDPO","type","value","Name_ProgDPO","onChange","handleChange","target","Name_Type","readOnly","handleSave","handleCancel","handleEdit","org","_editingItem2","ID_Org","FName","SName","kksItem","_editingItem3","ID_KKS","Name_KKS","SName_KKS","_c","$RefreshReg$"],"sources":["D:/Amina/VScode/FQW_new/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react'; // Добавляем useMemo\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminPanel.css';\r\n// Возможно, понадобится компонент для иконок сортировки\r\n// import { FaSort, FaSortUp, FaSortDown } from 'react-icons/fa';\r\n\r\n// --- Компонент для отображения иконок сортировки (опционально) ---\r\n// const SortIcon = ({ direction }) => {\r\n//   if (!direction) return <FaSort />;\r\n//   return direction === 'ascending' ? <FaSortUp /> : <FaSortDown />;\r\n// };\r\n\r\nfunction AdminPanel() {\r\n    // ... (предыдущие состояния: activeTab, programs, organizations, kks, loading, error, editingItem) ...\r\n    const [users, setUsers] = useState([]); // Состояние для пользователей (добавим позже)\r\n    const [sortConfig, setSortConfig] = useState({ key: null, direction: 'ascending' }); // Состояние для сортировки\r\n\r\n    // --- Используем useMemo для кэширования отпарсенного user ---\r\n    const user = useMemo(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        try {\r\n            return storedUser ? JSON.parse(storedUser) : null;\r\n        } catch (e) {\r\n            console.error(\"Failed to parse user from localStorage\", e);\r\n            return null;\r\n        }\r\n    }, []);\r\n\r\n    const navigate = useNavigate();\r\n    const apiUrl = process.env.REACT_APP_API_URL;\r\n\r\n    // --- Функция запроса сортировки ---\r\n    const requestSort = (key) => {\r\n        let direction = 'ascending';\r\n        if (sortConfig.key === key && sortConfig.direction === 'ascending') {\r\n            direction = 'descending';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    };\r\n\r\n    // --- Функция получения ключа ID для текущей вкладки ---\r\n    const getIdKeyForTab = (tab) => {\r\n        switch (tab) {\r\n            case 'programs': return 'ID_ProgDPO';\r\n            case 'organizations': return 'ID_Org';\r\n            case 'kks': return 'ID_KKS';\r\n            case 'users': return 'ID_User'; // Для будущей вкладки\r\n            default: return null;\r\n        }\r\n    };\r\n\r\n    // --- Устанавливаем сортировку по ID по умолчанию при смене вкладки ---\r\n    useEffect(() => {\r\n        const idKey = getIdKeyForTab(activeTab);\r\n        if (idKey) {\r\n            setSortConfig({ key: idKey, direction: 'ascending' });\r\n        } else {\r\n            setSortConfig({ key: null, direction: 'ascending' }); // Сброс для неизвестных вкладок\r\n        }\r\n        // fetchData будет вызван следующим useEffect\r\n    }, [activeTab]); // Зависимость только от activeTab\r\n\r\n    // --- useEffect для загрузки данных (основной) ---\r\n    useEffect(() => {\r\n        if (!user || user.role !== 1) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n        fetchData();\r\n    }, [activeTab, user, navigate]); // Зависимости как и были\r\n\r\n    const fetchData = async () => {\r\n        // ... (логика fetchData остается почти такой же, просто добавим case 'users' позже)\r\n        if (!user || user.role !== 1) {\r\n            console.warn(\"fetchData called without admin user, aborting.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setError('');\r\n        try {\r\n            let response;\r\n            let endpoint; // Объявим endpoint здесь\r\n            switch (activeTab) {\r\n                case 'programs': endpoint = `${apiUrl}/api/programs`; break;\r\n                case 'organizations': endpoint = `${apiUrl}/api/organizations`; break;\r\n                case 'kks': endpoint = `${apiUrl}/api/kks`; break;\r\n                case 'users': endpoint = `${apiUrl}/api/users`; break; // Для будущей вкладки\r\n                default:\r\n                    console.warn(`Unknown activeTab: ${activeTab}`);\r\n                    setLoading(false);\r\n                    return;\r\n            }\r\n\r\n            console.log(`Attempting to fetch ${endpoint}...`);\r\n            response = await axios.get(endpoint);\r\n            console.log(`Received response from ${endpoint}`, response.status);\r\n\r\n            // Устанавливаем соответствующие данные\r\n            switch (activeTab) {\r\n                case 'programs': setPrograms(response.data); break;\r\n                case 'organizations': setOrganizations(response.data); break;\r\n                case 'kks': setKks(response.data); break;\r\n                case 'users': setUsers(response.data); break; // Для будущей вкладки\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error(`Error fetching ${activeTab}:`, err.response || err.message || err);\r\n            setError(err.response?.data?.error || `Ошибка при загрузке данных для ${activeTab}`);\r\n        } finally {\r\n            console.log(`Setting loading to false for ${activeTab}.`);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // --- Мемоизированные отсортированные данные ---\r\n    const sortedPrograms = useMemo(() => {\r\n        let sortableItems = [...programs];\r\n        if (sortConfig.key) {\r\n            sortableItems.sort((a, b) => {\r\n                if (a[sortConfig.key] < b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? -1 : 1;\r\n                }\r\n                if (a[sortConfig.key] > b[sortConfig.key]) {\r\n                    return sortConfig.direction === 'ascending' ? 1 : -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n        return sortableItems;\r\n    }, [programs, sortConfig]);\r\n\r\n    const sortedOrganizations = useMemo(() => {\r\n        // ... аналогично для organizations ...\r\n        let sortableItems = [...organizations];\r\n        if (sortConfig.key) {\r\n             sortableItems.sort((a, b) => {\r\n                // Проверка на число (для ID) или строку\r\n                const valA = a[sortConfig.key];\r\n                const valB = b[sortConfig.key];\r\n                const compareResult = typeof valA === 'number' && typeof valB === 'number'\r\n                    ? valA - valB\r\n                    : String(valA).localeCompare(String(valB));\r\n\r\n                return sortConfig.direction === 'ascending' ? compareResult : -compareResult;\r\n            });\r\n        }\r\n        return sortableItems;\r\n    }, [organizations, sortConfig]);\r\n\r\n    const sortedKks = useMemo(() => {\r\n        // ... аналогично для kks ...\r\n         let sortableItems = [...kks];\r\n        if (sortConfig.key) {\r\n             sortableItems.sort((a, b) => {\r\n                const valA = a[sortConfig.key];\r\n                const valB = b[sortConfig.key];\r\n                const compareResult = typeof valA === 'number' && typeof valB === 'number'\r\n                    ? valA - valB\r\n                    : String(valA).localeCompare(String(valB));\r\n                return sortConfig.direction === 'ascending' ? compareResult : -compareResult;\r\n            });\r\n        }\r\n        return sortableItems;\r\n    }, [kks, sortConfig]);\r\n\r\n     const sortedUsers = useMemo(() => { // Для будущей вкладки\r\n        // ... аналогично для users ...\r\n         let sortableItems = [...users];\r\n        if (sortConfig.key) {\r\n             sortableItems.sort((a, b) => {\r\n                const valA = a[sortConfig.key];\r\n                const valB = b[sortConfig.key];\r\n                 // Пример обработки роли как числа\r\n                 if (sortConfig.key === 'Role' && typeof valA === 'number' && typeof valB === 'number') {\r\n                    const compareResult = valA - valB;\r\n                     return sortConfig.direction === 'ascending' ? compareResult : -compareResult;\r\n                 }\r\n                 // Стандартное сравнение для остальных полей\r\n                const compareResult = String(valA ?? '').localeCompare(String(valB ?? '')); // Добавим ?? '' для null/undefined\r\n                return sortConfig.direction === 'ascending' ? compareResult : -compareResult;\r\n            });\r\n        }\r\n        return sortableItems;\r\n    }, [users, sortConfig]);\r\n\r\n\r\n    // ... (handleEdit, handleSave, handleCancel, handleChange, handleLogout) ...\r\n    // Добавим обработчики для Add/Delete позже\r\n\r\n    // --- JSX ---\r\n    if (!user && loading) return <div className=\"loading\">Проверка авторизации...</div>;\r\n    if (!user) return null;\r\n    if (loading) return <div className=\"loading\">Загрузка...</div>;\r\n    if (error) return <div className=\"error\">{error}</div>;\r\n\r\n    // Функция для рендеринга заголовков таблицы с сортировкой\r\n    const renderSortableHeader = (label, key) => (\r\n        <th onClick={() => requestSort(key)} className=\"sortable-header\">\r\n            {label}\r\n            {/* Отображение иконки сортировки (если используете react-icons) */}\r\n            {/* {sortConfig.key === key ? <SortIcon direction={sortConfig.direction} /> : <FaSort />} */}\r\n            {/* Просто текстом: */}\r\n            {sortConfig.key === key ? (sortConfig.direction === 'ascending' ? ' ▲' : ' ▼') : ' ↕'}\r\n        </th>\r\n    );\r\n\r\n    return (\r\n        <div className=\"admin-panel\">\r\n            <div className=\"admin-header\">\r\n                <h1>Панель администратора</h1>\r\n                <button onClick={handleLogout} className=\"logout-button\">Выйти</button>\r\n            </div>\r\n\r\n            <div className=\"admin-tabs\">\r\n                {/* ... кнопки вкладок ... */}\r\n                 <button\r\n                    className={`tab-button ${activeTab === 'programs' ? 'active' : ''}`}\r\n                    onClick={() => setActiveTab('programs')}\r\n                >\r\n                    Программы\r\n                </button>\r\n                <button\r\n                    className={`tab-button ${activeTab === 'organizations' ? 'active' : ''}`}\r\n                    onClick={() => setActiveTab('organizations')}\r\n                >\r\n                    Организации\r\n                </button>\r\n                <button\r\n                    className={`tab-button ${activeTab === 'kks' ? 'active' : ''}`}\r\n                    onClick={() => setActiveTab('kks')}\r\n                >\r\n                    ККС\r\n                </button>\r\n                 {/* Добавим кнопку для пользователей позже */}\r\n                 {/*<button\r\n                    className={`tab-button ${activeTab === 'users' ? 'active' : ''}`}\r\n                    onClick={() => setActiveTab('users')}\r\n                >\r\n                    Пользователи\r\n                </button>*/}\r\n            </div>\r\n\r\n            <div className=\"admin-content\">\r\n                {/* --- Таблица Программ --- */}\r\n                {activeTab === 'programs' && (\r\n                    <>\r\n                        {/* Кнопка Добавить будет здесь */}\r\n                        <table className=\"admin-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {renderSortableHeader('ID', 'ID_ProgDPO')}\r\n                                    {renderSortableHeader('Название', 'Name_ProgDPO')}\r\n                                    {renderSortableHeader('Тип', 'Name_Type')}\r\n                                    <th>Действия</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {/* Используем sortedPrograms */}\r\n                                {sortedPrograms.map(program => (\r\n                                    <tr key={program.ID_ProgDPO}>\r\n                                        {/* ... логика редактирования остается той же, но использует program из sortedPrograms ... */}\r\n                                        {editingItem?.ID_ProgDPO === program.ID_ProgDPO ? (\r\n                                            <>\r\n                                              <td>{program.ID_ProgDPO}</td>\r\n                                               <td>\r\n                                                   <input\r\n                                                       type=\"text\"\r\n                                                       value={editingItem.Name_ProgDPO}\r\n                                                       onChange={(e) => handleChange('Name_ProgDPO', e.target.value)}\r\n                                                   />\r\n                                               </td>\r\n                                               <td>\r\n                                                   {/* Важно: Редактирование Name_Type может потребовать dropdown или поиска ID */}\r\n                                                   <input\r\n                                                       type=\"text\"\r\n                                                       value={editingItem.Name_Type} // Отображаем имя, но сохранять нужно ID_Type\r\n                                                       onChange={(e) => handleChange('Name_Type', e.target.value)}\r\n                                                        // Лучше использовать <select> со списком типов, если нужно менять тип\r\n                                                        readOnly // Временно делаем readOnly, т.к. сохранение Name_Type не реализовано правильно\r\n                                                   />\r\n                                               </td>\r\n                                               <td>\r\n                                                   <button onClick={handleSave}>Сохранить</button>\r\n                                                   <button onClick={handleCancel}>Отмена</button>\r\n                                               </td>\r\n                                           </>\r\n                                        ) : (\r\n                                             <>\r\n                                                <td>{program.ID_ProgDPO}</td>\r\n                                                <td>{program.Name_ProgDPO}</td>\r\n                                                <td>{program.Name_Type}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => handleEdit(program)}>Редактировать</button>\r\n                                                    {/* Кнопка Удалить будет здесь */}\r\n                                                </td>\r\n                                            </>\r\n                                        )}\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </>\r\n                )}\r\n\r\n                {/* --- Таблица Организаций --- */}\r\n                 {activeTab === 'organizations' && (\r\n                    <>\r\n                        {/* Кнопка Добавить будет здесь */}\r\n                        <table className=\"admin-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {renderSortableHeader('ID', 'ID_Org')}\r\n                                    {renderSortableHeader('Полное название', 'FName')}\r\n                                    {renderSortableHeader('Краткое название', 'SName')}\r\n                                    <th>Действия</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {/* Используем sortedOrganizations */}\r\n                                {sortedOrganizations.map(org => (\r\n                                     <tr key={org.ID_Org}>\r\n                                        {/* ... логика редактирования ... */}\r\n                                         {editingItem?.ID_Org === org.ID_Org ? (\r\n                                            <>\r\n                                               <td>{org.ID_Org}</td>\r\n                                               <td>\r\n                                                   <input\r\n                                                       type=\"text\"\r\n                                                       value={editingItem.FName}\r\n                                                       onChange={(e) => handleChange('FName', e.target.value)}\r\n                                                   />\r\n                                               </td>\r\n                                               <td>\r\n                                                   <input\r\n                                                       type=\"text\"\r\n                                                       value={editingItem.SName}\r\n                                                       onChange={(e) => handleChange('SName', e.target.value)}\r\n                                                   />\r\n                                               </td>\r\n                                               <td>\r\n                                                   <button onClick={handleSave}>Сохранить</button>\r\n                                                   <button onClick={handleCancel}>Отмена</button>\r\n                                               </td>\r\n                                           </>\r\n                                        ) : (\r\n                                             <>\r\n                                                <td>{org.ID_Org}</td>\r\n                                                <td>{org.FName}</td>\r\n                                                <td>{org.SName}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => handleEdit(org)}>Редактировать</button>\r\n                                                     {/* Кнопка Удалить будет здесь */}\r\n                                                </td>\r\n                                            </>\r\n                                        )}\r\n                                     </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </>\r\n                )}\r\n\r\n                 {/* --- Таблица ККС --- */}\r\n                 {activeTab === 'kks' && (\r\n                    <>\r\n                         {/* Кнопка Добавить будет здесь */}\r\n                        <table className=\"admin-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    {renderSortableHeader('ID', 'ID_KKS')}\r\n                                    {renderSortableHeader('Название', 'Name_KKS')}\r\n                                    {renderSortableHeader('Краткое обозначение', 'SName_KKS')}\r\n                                    <th>Действия</th>\r\n                                </tr>\r\n                            </thead>\r\n                             <tbody>\r\n                                {/* Используем sortedKks */}\r\n                                {sortedKks.map(kksItem => (\r\n                                   <tr key={kksItem.ID_KKS}>\r\n                                        {/* ... логика редактирования ... */}\r\n                                         {editingItem?.ID_KKS === kksItem.ID_KKS ? (\r\n                                            <>\r\n                                                <td>{kksItem.ID_KKS}</td>\r\n                                                <td>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={editingItem.Name_KKS}\r\n                                                        onChange={(e) => handleChange('Name_KKS', e.target.value)}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={editingItem.SName_KKS}\r\n                                                        onChange={(e) => handleChange('SName_KKS', e.target.value)}\r\n                                                    />\r\n                                                </td>\r\n                                                <td>\r\n                                                    <button onClick={handleSave}>Сохранить</button>\r\n                                                    <button onClick={handleCancel}>Отмена</button>\r\n                                                </td>\r\n                                            </>\r\n                                        ) : (\r\n                                            <>\r\n                                                <td>{kksItem.ID_KKS}</td>\r\n                                                <td>{kksItem.Name_KKS}</td>\r\n                                                <td>{kksItem.SName_KKS}</td>\r\n                                                <td>\r\n                                                    <button onClick={() => handleEdit(kksItem)}>Редактировать</button>\r\n                                                     {/* Кнопка Удалить будет здесь */}\r\n                                                </td>\r\n                                            </>\r\n                                        )}\r\n                                   </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </>\r\n                )}\r\n\r\n                 {/* --- Таблица Пользователей (Будет добавлена позже) --- */}\r\n                 {/* {activeTab === 'users' && ( ... )} */}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
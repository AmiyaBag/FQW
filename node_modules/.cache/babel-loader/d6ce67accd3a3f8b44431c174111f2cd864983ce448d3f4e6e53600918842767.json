{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amina\\\\VScode\\\\FQW_new\\\\src\\\\context\\\\DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport function DataProvider({\n  children\n}) {\n  _s();\n  const [programs, setPrograms] = useState([]);\n  const [organizations, setOrganizations] = useState([]);\n  const [kks, setKks] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Загрузка всех данных при инициализации\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n\n        // Загрузка программ\n        const programsResponse = await axios.get('http://localhost:5000/api/programs');\n        setPrograms(programsResponse.data);\n\n        // Загрузка организаций\n        const organizationsResponse = await axios.get('http://localhost:5000/api/organizations');\n        setOrganizations(organizationsResponse.data);\n\n        // Загрузка ККС\n        const kksResponse = await axios.get('http://localhost:5000/api/kks');\n        setKks(kksResponse.data);\n        setError(null);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Ошибка при загрузке данных');\n        console.error('Ошибка при загрузке данных:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n\n  // Функция для загрузки документов конкретного пользователя\n  const fetchUserDocuments = async userId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/documents`, {\n        params: {\n          userId\n        }\n      });\n      setDocuments(response.data);\n      return response.data;\n    } catch (err) {\n      console.error('Ошибка при загрузке документов:', err);\n      throw err;\n    }\n  };\n\n  // Функция для получения деталей программы\n  const fetchProgramDetails = async (programId, workerId) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/program-details/${programId}`, {\n        params: {\n          workerId\n        }\n      });\n      return response.data;\n    } catch (err) {\n      console.error('Ошибка при загрузке деталей программы:', err);\n      throw err;\n    }\n  };\n  const value = {\n    programs,\n    organizations,\n    kks,\n    documents,\n    loading,\n    error,\n    fetchUserDocuments,\n    fetchProgramDetails\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n// Хук для использования контекста\n_s(DataProvider, \"d+wPWvB6gIsk2DZz3J9LWT8v2C8=\");\n_c = DataProvider;\nexport function useData() {\n  _s2();\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData должен использоваться внутри DataProvider');\n  }\n  return context;\n}\n_s2(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","programs","setPrograms","organizations","setOrganizations","kks","setKks","documents","setDocuments","loading","setLoading","error","setError","fetchAllData","programsResponse","get","data","organizationsResponse","kksResponse","err","_err$response","_err$response$data","response","console","fetchUserDocuments","userId","params","fetchProgramDetails","programId","workerId","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useData","_s2","context","Error","$RefreshReg$"],"sources":["D:/Amina/VScode/FQW_new/src/context/DataContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DataContext = createContext();\r\n\r\nexport function DataProvider({ children }) {\r\n  const [programs, setPrograms] = useState([]);\r\n  const [organizations, setOrganizations] = useState([]);\r\n  const [kks, setKks] = useState([]);\r\n  const [documents, setDocuments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Загрузка всех данных при инициализации\r\n  useEffect(() => {\r\n    const fetchAllData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Загрузка программ\r\n        const programsResponse = await axios.get('http://localhost:5000/api/programs');\r\n        setPrograms(programsResponse.data);\r\n\r\n        // Загрузка организаций\r\n        const organizationsResponse = await axios.get('http://localhost:5000/api/organizations');\r\n        setOrganizations(organizationsResponse.data);\r\n\r\n        // Загрузка ККС\r\n        const kksResponse = await axios.get('http://localhost:5000/api/kks');\r\n        setKks(kksResponse.data);\r\n\r\n        setError(null);\r\n      } catch (err) {\r\n        setError(err.response?.data?.error || 'Ошибка при загрузке данных');\r\n        console.error('Ошибка при загрузке данных:', err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAllData();\r\n  }, []);\r\n\r\n  // Функция для загрузки документов конкретного пользователя\r\n  const fetchUserDocuments = async (userId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/documents`, {\r\n        params: { userId }\r\n      });\r\n      setDocuments(response.data);\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Ошибка при загрузке документов:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Функция для получения деталей программы\r\n  const fetchProgramDetails = async (programId, workerId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/program-details/${programId}`, {\r\n        params: { workerId }\r\n      });\r\n      return response.data;\r\n    } catch (err) {\r\n      console.error('Ошибка при загрузке деталей программы:', err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    programs,\r\n    organizations,\r\n    kks,\r\n    documents,\r\n    loading,\r\n    error,\r\n    fetchUserDocuments,\r\n    fetchProgramDetails\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider value={value}>\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n\r\n// Хук для использования контекста\r\nexport function useData() {\r\n  const context = useContext(DataContext);\r\n  if (!context) {\r\n    throw new Error('useData должен использоваться внутри DataProvider');\r\n  }\r\n  return context;\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
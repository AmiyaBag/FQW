{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amina\\\\VScode\\\\FQW_new\\\\src\\\\components\\\\DocumentAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './DocumentAnalysis.css';\n\n// Регистрируем компоненты Chart.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction DocumentAnalysis() {\n  _s();\n  const [documents, setDocuments] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [selectedWorker, setSelectedWorker] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [viewMode, setViewMode] = useState('analysis');\n  const [selectedDocument, setSelectedDocument] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [programDetails, setProgramDetails] = useState(null);\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('user'));\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        // Загрузка документов\n        const documentsResponse = await axios.get(`http://localhost:5000/api/documents`, {\n          params: {\n            userId: user.id,\n            role: user.role\n          }\n        });\n        if (!Array.isArray(documentsResponse.data)) {\n          console.error('Ожидался массив документов, получено:', documentsResponse.data);\n          setDocuments([]);\n        } else {\n          setDocuments(documentsResponse.data);\n        }\n        if (documentsResponse.data && documentsResponse.data.length > 0) {\n          var _documentsResponse$da;\n          console.log(\"Sample KKS_Names in first fetched document:\", (_documentsResponse$da = documentsResponse.data[0]) === null || _documentsResponse$da === void 0 ? void 0 : _documentsResponse$da.KKS_Names);\n        }\n        setDocuments(documentsResponse.data || []);\n\n        // Если пользователь - работник ЦДО, загружаем список работников\n        if (user.role === 1) {\n          const workersResponse = await axios.get('http://localhost:5000/api/workers');\n          setWorkers(workersResponse.data);\n          if (workersResponse.data.length > 0) {\n            setSelectedWorker(prevWorker => prevWorker !== null && prevWorker !== void 0 ? prevWorker : workersResponse.data[0].ID_Worker);\n          } else {\n            setSelectedWorker(null);\n          }\n        } else {\n          setSelectedWorker(null);\n        }\n        setLoading(false);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Ошибка при загрузке данных:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Ошибка при загрузке данных');\n        setLoading(false);\n      }\n    };\n    if (user !== null && user !== void 0 && user.id) {\n      fetchData();\n    } else {\n      setError(\"Пользователь не найден. Пожалуйста, войдите снова.\");\n      setLoading(false);\n    }\n  }, [user === null || user === void 0 ? void 0 : user.id, user === null || user === void 0 ? void 0 : user.role]);\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const handleBack = () => {\n    navigate(user.role === 1 ? '/admin' : '/user');\n  };\n  const handleWorkerChange = event => {\n    const workerId = parseInt(event.target.value, 10);\n    setSelectedWorker(workerId);\n  };\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n  };\n  const fetchModalProgramDetails = async progId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/program-details/${progId}`);\n      console.log('Полученные детали программы для модального окна:', response.data);\n      return response.data;\n    } catch (err) {\n      var _err$response2;\n      console.error('Ошибка при загрузке деталей программы для модального окна:', err);\n      console.error('Детали ошибки:', ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n      return null;\n    }\n  };\n  const handleShowDetails = async document => {\n    if (!document || !document.ID_ProgDPO) {\n      console.error('Ошибка: отсутствует ID_ProgDPO у документа', document);\n      return;\n    }\n    setSelectedDocument(document);\n    const details = await fetchModalProgramDetails(document.ID_ProgDPO);\n    setProgramDetails(details);\n    setShowModal(true);\n    console.log('Модальное окно открыто:', {\n      showModal: true,\n      selectedDocument: document,\n      programDetails: details\n    });\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedDocument(null);\n    setProgramDetails(null);\n  };\n\n  // Фильтрация документов по выбранному работнику (или все для пользователя)\n  const filteredDocuments = React.useMemo(() => {\n    if (loading) return [];\n    if (user.role === 1) {\n      if (selectedWorker === null && workers.length > 0) {\n        return documents.filter(doc => {\n          var _workers$;\n          return doc.ID_Worker === ((_workers$ = workers[0]) === null || _workers$ === void 0 ? void 0 : _workers$.ID_Worker);\n        });\n      }\n      return documents.filter(doc => doc.ID_Worker === selectedWorker);\n    } else {\n      return documents;\n    }\n  }, [documents, selectedWorker, user.role, loading, workers]);\n\n  // 1. График по годам и нарастающий график\n  const prepareYearlyChartData = docs => {\n    const documentsByYear = docs.reduce((acc, doc) => {\n      try {\n        const date = new Date(doc.DateIssue);\n        if (!isNaN(date.getTime())) {\n          const year = date.getFullYear();\n          acc[year] = (acc[year] || 0) + 1;\n        } else {\n          console.warn(\"Invalid DateIssue found for document:\", doc.ID_Document);\n        }\n      } catch (e) {\n        console.warn(\"Error parsing DateIssue for document:\", doc.ID_Document, e);\n      }\n      return acc;\n    }, {});\n    const years = Object.keys(documentsByYear).map(Number).sort((a, b) => a - b);\n    const minYear = years.length > 0 ? Math.min(...years) : new Date().getFullYear();\n    const maxYear = years.length > 0 ? Math.max(...years) : new Date().getFullYear();\n    const currentYear = new Date().getFullYear();\n    const endYear = Math.max(maxYear, currentYear);\n    const allYears = [];\n    if (minYear <= endYear) {\n      for (let year = minYear; year <= endYear; year++) {\n        allYears.push(year);\n      }\n    } else if (years.length === 0) {\n      allYears.push(currentYear);\n    }\n    const counts = allYears.map(year => documentsByYear[year] || 0);\n    const cumulativeCounts = counts.reduce((acc, count, index) => {\n      acc.push(index === 0 ? count : (acc[index - 1] || 0) + count); // Ensure acc[index-1] exists\n      return acc;\n    }, []);\n    return {\n      years: allYears,\n      counts,\n      cumulativeCounts\n    };\n  };\n\n  // 2. График по критериям ККС\n  const prepareKKSChartData = docs => {\n    const kksCounts = docs.reduce((acc, doc) => {\n      const kksString = doc.KKS_Names; // Assumes this field exists from the API\n      console.log(`Processing Doc ID: ${doc.ID_Document}, KKS_Names received: '${kksString}' (Type: ${typeof kksString})`);\n      if (kksString && typeof kksString === 'string') {\n        const criteria = kksString.split(',') // Split by comma\n        .map(kks => kks.trim()) // Trim whitespace\n        .filter(kks => kks !== ''); // Remove empty strings\n\n        criteria.forEach(criterion => {\n          acc[criterion] = (acc[criterion] || 0) + 1;\n        });\n      } else if (kksString) {\n        console.warn(\"KKS_Names is not a string for document:\", doc.ID_Document, \"Value:\", kksString);\n      }\n      // If KKS_Names is null, undefined or empty, skip this document for KKS chart.\n\n      return acc;\n    }, {});\n    const sortedCriteria = Object.keys(kksCounts).sort(); // Sort criteria names alphabetically\n    const counts = sortedCriteria.map(criterion => kksCounts[criterion]);\n    return {\n      criteria: sortedCriteria,\n      counts\n    };\n  };\n\n  /*\r\n   const prepareKKSChartData = (docs) => {\r\n     const kksCounts = docs.reduce((acc, doc) => {\r\n       const kksString = doc.KKS_Names;\r\n       \r\n       if (!kksString || typeof kksString !== 'string' || kksString.trim() === '') {\r\n         return acc;\r\n       }\r\n   \r\n       const criteria = kksString.split(', ') // Используем явный разделитель\r\n                          .map(kks => kks.trim())\r\n                          .filter(kks => kks !== '');\r\n   \r\n       criteria.forEach(criterion => {\r\n         acc[criterion] = (acc[criterion] || 0) + 1;\r\n       });\r\n   \r\n       return acc;\r\n     }, {});\r\n   \r\n     const sortedCriteria = Object.keys(kksCounts).sort();\r\n     const counts = sortedCriteria.map(criterion => kksCounts[criterion]);\r\n   \r\n     return {\r\n       criteria: sortedCriteria,\r\n       counts\r\n     };\r\n   }; \r\n  */\n  // Вычисляем данные для графиков на основе отфильтрованных документов\n  const yearlyChartResult = prepareYearlyChartData(filteredDocuments);\n  const kksChartResult = prepareKKSChartData(filteredDocuments);\n\n  // --- Настройки для графиков ---\n\n  const getWorkerName = () => {\n    if (user.role !== 1 || !selectedWorker) return '';\n    const worker = workers.find(w => w.ID_Worker === selectedWorker);\n    return worker ? worker.FName_Worker : `ID ${selectedWorker}`; // Fallback to ID if name not found\n  };\n  const yearlyData = {\n    labels: yearlyChartResult.years,\n    datasets: [{\n      label: user.role === 1 ? `Документы (по годам) - ${getWorkerName()}` : 'Мои документы (по годам)',\n      data: yearlyChartResult.counts,\n      backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 1\n    }]\n  };\n  const cumulativeData = {\n    labels: yearlyChartResult.years,\n    datasets: [{\n      label: user.role === 1 ? `Нарастающий график - ${getWorkerName()}` : 'Мой нарастающий график',\n      data: yearlyChartResult.cumulativeCounts,\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  const kksData = {\n    labels: kksChartResult.criteria,\n    datasets: [{\n      label: user.role === 1 ? `Документы по критериям ККС - ${getWorkerName()}` : 'Мои документы по критериям ККС',\n      data: kksChartResult.counts,\n      backgroundColor: 'rgba(255, 159, 64, 0.6)',\n      // Orange color\n      borderColor: 'rgba(255, 159, 64, 1)',\n      borderWidth: 1\n    }]\n  };\n  const commonOptions = titleText => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    // Allow chart to shrink vertically if needed\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: titleText // Dynamic title passed as argument\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: titleText.includes('годам') ? 'Год' : titleText.includes('ККС') ? 'Критерий ККС' : '' // Dynamic X-axis label\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Количество документов'\n        },\n        ticks: {\n          // Ensure only whole numbers are shown on Y-axis for counts\n          stepSize: 1,\n          precision: 0\n        }\n      }\n    }\n  });\n  const yearlyOptions = commonOptions(user.role === 1 ? `Количество документов по годам (${getWorkerName()})` : 'Мои документы по годам');\n  const cumulativeOptions = commonOptions(user.role === 1 ? `Нарастающий итог документов по годам (${getWorkerName()})` : 'Мой нарастающий итог документов по годам');\n  const kksOptions = commonOptions(user.role === 1 ? `Распределение документов по критериям ККС (${getWorkerName()})` : 'Мое распределение документов по критериям ККС');\n\n  // --- Рендеринг ---\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 54\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      className: \"back-button\",\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 90\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 21\n  }, this); // Show back button with error\n\n  // Show message if admin selected a worker with no documents\n  const noDocumentsForSelectedWorker = user.role === 1 && selectedWorker !== null && filteredDocuments.length === 0 && documents.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analysis-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBack,\n          className: \"back-button\",\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), user.role === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: [workers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"worker-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"worker-select\",\n          children: \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"worker-select\",\n          value: selectedWorker !== null && selectedWorker !== void 0 ? selectedWorker : '' // Handle null case for value\n          ,\n          onChange: handleWorkerChange,\n          className: \"worker-select\",\n          disabled: loading // Disable while loading\n          ,\n          children: workers.map(worker => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: worker.ID_Worker,\n            children: [worker.FName_Worker, \" \"]\n          }, worker.ID_Worker, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0440\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D \\u0438\\u043B\\u0438 \\u043F\\u0443\\u0441\\u0442.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 18\n      }, this), selectedWorker !== null &&\n      /*#__PURE__*/\n      // Only show view mode if a worker is selected\n      _jsxDEV(\"div\", {\n        className: \"view-mode-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-mode-button ${viewMode === 'analysis' ? 'active' : ''}`,\n          onClick: () => handleViewModeChange('analysis'),\n          children: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-mode-button ${viewMode === 'documents' ? 'active' : ''}`,\n          onClick: () => handleViewModeChange('documents'),\n          children: \"\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this), viewMode === 'analysis' ?\n    /*#__PURE__*/\n    // --- Analysis View (Charts) ---\n    _jsxDEV(\"div\", {\n      className: \"charts-grid\",\n      children: filteredDocuments.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: yearlyOptions,\n            data: yearlyData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            options: cumulativeOptions,\n            data: cumulativeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-wrapper kks-chart-wrapper\",\n          children: kksChartResult.criteria.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n            options: kksOptions,\n            data: kksData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u043A\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u044F\\u043C \\u041A\\u041A\\u0421 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      // Message when no documents match the filter\n      _jsxDEV(\"div\", {\n        className: \"no-data-message full-width-message\",\n        children: user.role === 1 ? selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра анализа.\" : `Нет документов для выбранного работника (${getWorkerName()}).` : \"У вас пока нет загруженных документов для анализа.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // --- Documents View (Table) ---\n    _jsxDEV(\"div\", {\n      className: \"documents-list\",\n      children: filteredDocuments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"documents-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430 \\u0432\\u044B\\u0434\\u0430\\u0447\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredDocuments.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: doc.ProgramName || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doc.SName || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doc.DateIssue ? new Date(doc.DateIssue).toLocaleDateString() : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"details-button\",\n                onClick: () => handleShowDetails(doc),\n                disabled: !doc.ID_ProgDPO // Disable if no program ID\n                ,\n                children: \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\\u0441\\u0442\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 21\n            }, this)]\n          }, doc.ID_Document, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 13\n      }, this) :\n      /*#__PURE__*/\n      // Message when no documents match the filter in table view\n      _jsxDEV(\"div\", {\n        className: \"no-data-message\",\n        children: user.role === 1 ? selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра документов.\" : `Нет документов для выбранного работника (${getWorkerName()}).` : \"У вас пока нет загруженных документов.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n}\n\n/* Displaying Org info again seems redundant if already in main section */\n/* <div className=\"detail-group\">\r\n    <h3>Информация об организации</h3>\r\n    <p><strong>Полное название организации:</strong> {programDetails.FName || '-'}</p>\r\n    <p><strong>Краткое название организации:</strong> {programDetails.SName || '-'}</p>\r\n    <p><strong>Место проведения программы:</strong> {programDetails.FName || '-'}</p>\r\n</div> */\n_s(DocumentAnalysis, \"Ej9MmOiEwGwfUtsnDa5U1btzSKo=\", false, function () {\n  return [useNavigate];\n});\n_c = DocumentAnalysis;\nexport default DocumentAnalysis;\nvar _c;\n$RefreshReg$(_c, \"DocumentAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","Fragment","_Fragment","register","DocumentAnalysis","_s","documents","setDocuments","workers","setWorkers","selectedWorker","setSelectedWorker","loading","setLoading","error","setError","viewMode","setViewMode","selectedDocument","setSelectedDocument","showModal","setShowModal","programDetails","setProgramDetails","navigate","user","JSON","parse","localStorage","getItem","fetchData","documentsResponse","get","params","userId","id","role","Array","isArray","data","console","length","_documentsResponse$da","log","KKS_Names","workersResponse","prevWorker","ID_Worker","err","_err$response","_err$response$data","response","handleLogout","removeItem","handleBack","handleWorkerChange","event","workerId","parseInt","target","value","handleViewModeChange","mode","fetchModalProgramDetails","progId","_err$response2","message","handleShowDetails","document","ID_ProgDPO","details","handleCloseModal","filteredDocuments","useMemo","filter","doc","_workers$","prepareYearlyChartData","docs","documentsByYear","reduce","acc","date","Date","DateIssue","isNaN","getTime","year","getFullYear","warn","ID_Document","e","years","Object","keys","map","Number","sort","a","b","minYear","Math","min","maxYear","max","currentYear","endYear","allYears","push","counts","cumulativeCounts","count","index","prepareKKSChartData","kksCounts","kksString","criteria","split","kks","trim","forEach","criterion","sortedCriteria","yearlyChartResult","kksChartResult","getWorkerName","worker","find","w","FName_Worker","yearlyData","labels","datasets","label","backgroundColor","borderColor","borderWidth","cumulativeData","kksData","commonOptions","titleText","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","tooltip","intersect","scales","x","includes","y","beginAtZero","ticks","stepSize","precision","yearlyOptions","cumulativeOptions","kksOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","noDocumentsForSelectedWorker","htmlFor","onChange","disabled","options","ProgramName","SName","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/Amina/VScode/FQW_new/src/components/DocumentAnalysis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport './DocumentAnalysis.css';\r\n\r\n// Регистрируем компоненты Chart.js\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nfunction DocumentAnalysis() {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [workers, setWorkers] = useState([]);\r\n  const [selectedWorker, setSelectedWorker] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [viewMode, setViewMode] = useState('analysis');\r\n  const [selectedDocument, setSelectedDocument] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [programDetails, setProgramDetails] = useState(null);\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n        // Загрузка документов\r\n        const documentsResponse = await axios.get(`http://localhost:5000/api/documents`, {\r\n          params: {\r\n            userId: user.id,\r\n            role: user.role\r\n          }\r\n        });\r\n        \r\n        if (!Array.isArray(documentsResponse.data)) {\r\n          console.error('Ожидался массив документов, получено:', documentsResponse.data);\r\n          setDocuments([]);\r\n        } else {\r\n          setDocuments(documentsResponse.data);\r\n        }\r\n        \r\n        if (documentsResponse.data && documentsResponse.data.length > 0) {\r\n          console.log(\"Sample KKS_Names in first fetched document:\", documentsResponse.data[0]?.KKS_Names);\r\n        }\r\n        setDocuments(documentsResponse.data || []);\r\n        \r\n        // Если пользователь - работник ЦДО, загружаем список работников\r\n        if (user.role === 1) {\r\n          const workersResponse = await axios.get('http://localhost:5000/api/workers');\r\n          setWorkers(workersResponse.data);\r\n          if (workersResponse.data.length > 0) {\r\n            setSelectedWorker(prevWorker => prevWorker ?? workersResponse.data[0].ID_Worker);\r\n          } else {\r\n             setSelectedWorker(null);\r\n          }\r\n        } else {\r\n            setSelectedWorker(null);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Ошибка при загрузке данных:', err);\r\n        setError(err.response?.data?.error || 'Ошибка при загрузке данных');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (user?.id) {\r\n        fetchData();\r\n    } else {\r\n        setError(\"Пользователь не найден. Пожалуйста, войдите снова.\");\r\n        setLoading(false);\r\n\r\n    }\r\n  }, [user?.id, user?.role]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('user');\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(user.role === 1 ? '/admin' : '/user');\r\n  };\r\n\r\n  const handleWorkerChange = (event) => {\r\n    const workerId = parseInt(event.target.value, 10);\r\n    setSelectedWorker(workerId);\r\n  };\r\n\r\n  const handleViewModeChange = (mode) => {\r\n    setViewMode(mode);\r\n  };\r\n\r\n  const fetchModalProgramDetails = async (progId) => {\r\n      try {\r\n          const response = await axios.get(`http://localhost:5000/api/program-details/${progId}`);\r\n          console.log('Полученные детали программы для модального окна:', response.data);\r\n          return response.data;\r\n      } catch (err) {\r\n          console.error('Ошибка при загрузке деталей программы для модального окна:', err);\r\n          console.error('Детали ошибки:', err.response?.data || err.message);\r\n          return null;\r\n      }\r\n  }\r\n\r\n  const handleShowDetails = async (document) => {\r\n    if (!document || !document.ID_ProgDPO) {\r\n      console.error('Ошибка: отсутствует ID_ProgDPO у документа', document);\r\n      return;\r\n    }\r\n    setSelectedDocument(document);\r\n\r\n    const details = await fetchModalProgramDetails(document.ID_ProgDPO);\r\n    setProgramDetails(details);\r\n\r\n    setShowModal(true);\r\n    console.log('Модальное окно открыто:', { showModal: true, selectedDocument: document, programDetails: details });\r\n  };\r\n\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n    setSelectedDocument(null);\r\n    setProgramDetails(null);\r\n  };\r\n\r\n  // Фильтрация документов по выбранному работнику (или все для пользователя)\r\n  const filteredDocuments = React.useMemo(() => {\r\n      if (loading) return [];\r\n      if (user.role === 1) {\r\n          if (selectedWorker === null && workers.length > 0) {\r\n               return documents.filter(doc => doc.ID_Worker === workers[0]?.ID_Worker);\r\n          }\r\n          return documents.filter(doc => doc.ID_Worker === selectedWorker);\r\n      } else {\r\n          return documents;\r\n      }\r\n  }, [documents, selectedWorker, user.role, loading, workers]);\r\n\r\n\r\n  // 1. График по годам и нарастающий график\r\n  const prepareYearlyChartData = (docs) => {\r\n    const documentsByYear = docs.reduce((acc, doc) => {\r\n        \r\n        try {\r\n            const date = new Date(doc.DateIssue);\r\n            if (!isNaN(date.getTime())) { \r\n                const year = date.getFullYear();\r\n                acc[year] = (acc[year] || 0) + 1;\r\n            } else {\r\n                 console.warn(\"Invalid DateIssue found for document:\", doc.ID_Document);\r\n            }\r\n        } catch (e) {\r\n            console.warn(\"Error parsing DateIssue for document:\", doc.ID_Document, e);\r\n        }\r\n      return acc;\r\n    }, {});\r\n\r\n    const years = Object.keys(documentsByYear).map(Number).sort((a, b) => a - b);\r\n    const minYear = years.length > 0 ? Math.min(...years) : new Date().getFullYear();\r\n    const maxYear = years.length > 0 ? Math.max(...years) : new Date().getFullYear();\r\n    const currentYear = new Date().getFullYear();\r\n    const endYear = Math.max(maxYear, currentYear); \r\n\r\n    const allYears = [];\r\n     if (minYear <= endYear) {\r\n        for (let year = minYear; year <= endYear; year++) {\r\n            allYears.push(year);\r\n        }\r\n     } else if (years.length === 0) {\r\n         allYears.push(currentYear);\r\n     }\r\n\r\n\r\n    const counts = allYears.map(year => documentsByYear[year] || 0);\r\n\r\n    const cumulativeCounts = counts.reduce((acc, count, index) => {\r\n      acc.push(index === 0 ? count : (acc[index - 1] || 0) + count); // Ensure acc[index-1] exists\r\n      return acc;\r\n    }, []);\r\n\r\n    return {\r\n      years: allYears,\r\n      counts,\r\n      cumulativeCounts\r\n    };\r\n  };\r\n\r\n  \r\n  // 2. График по критериям ККС\r\n  const prepareKKSChartData = (docs) => {\r\n    const kksCounts = docs.reduce((acc, doc) => {\r\n      const kksString = doc.KKS_Names; // Assumes this field exists from the API\r\n      console.log(`Processing Doc ID: ${doc.ID_Document}, KKS_Names received: '${kksString}' (Type: ${typeof kksString})`);\r\n      if (kksString && typeof kksString === 'string') {\r\n        const criteria = kksString.split(',') // Split by comma\r\n                           .map(kks => kks.trim()) // Trim whitespace\r\n                           .filter(kks => kks !== ''); // Remove empty strings\r\n\r\n        criteria.forEach(criterion => {\r\n          acc[criterion] = (acc[criterion] || 0) + 1;\r\n        });\r\n      } else if (kksString) {\r\n          console.warn(\"KKS_Names is not a string for document:\", doc.ID_Document, \"Value:\", kksString);\r\n      }\r\n      // If KKS_Names is null, undefined or empty, skip this document for KKS chart.\r\n\r\n      return acc;\r\n    }, {});\r\n\r\n    const sortedCriteria = Object.keys(kksCounts).sort(); // Sort criteria names alphabetically\r\n    const counts = sortedCriteria.map(criterion => kksCounts[criterion]);\r\n\r\n    return {\r\n      criteria: sortedCriteria,\r\n      counts\r\n    };\r\n  };\r\n  \r\n /*\r\n  const prepareKKSChartData = (docs) => {\r\n    const kksCounts = docs.reduce((acc, doc) => {\r\n      const kksString = doc.KKS_Names;\r\n      \r\n      if (!kksString || typeof kksString !== 'string' || kksString.trim() === '') {\r\n        return acc;\r\n      }\r\n  \r\n      const criteria = kksString.split(', ') // Используем явный разделитель\r\n                         .map(kks => kks.trim())\r\n                         .filter(kks => kks !== '');\r\n  \r\n      criteria.forEach(criterion => {\r\n        acc[criterion] = (acc[criterion] || 0) + 1;\r\n      });\r\n  \r\n      return acc;\r\n    }, {});\r\n  \r\n    const sortedCriteria = Object.keys(kksCounts).sort();\r\n    const counts = sortedCriteria.map(criterion => kksCounts[criterion]);\r\n  \r\n    return {\r\n      criteria: sortedCriteria,\r\n      counts\r\n    };\r\n  }; \r\n*/\r\n  // Вычисляем данные для графиков на основе отфильтрованных документов\r\n  const yearlyChartResult = prepareYearlyChartData(filteredDocuments);\r\n  const kksChartResult = prepareKKSChartData(filteredDocuments);\r\n\r\n  // --- Настройки для графиков ---\r\n\r\n  const getWorkerName = () => {\r\n      if (user.role !== 1 || !selectedWorker) return '';\r\n      const worker = workers.find(w => w.ID_Worker === selectedWorker);\r\n      return worker ? worker.FName_Worker : `ID ${selectedWorker}`; // Fallback to ID if name not found\r\n  }\r\n\r\n  const yearlyData = {\r\n    labels: yearlyChartResult.years,\r\n    datasets: [\r\n      {\r\n        label: user.role === 1\r\n          ? `Документы (по годам) - ${getWorkerName()}`\r\n          : 'Мои документы (по годам)',\r\n        data: yearlyChartResult.counts,\r\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n        borderColor: 'rgba(54, 162, 235, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const cumulativeData = {\r\n    labels: yearlyChartResult.years,\r\n    datasets: [\r\n      {\r\n        label: user.role === 1\r\n          ? `Нарастающий график - ${getWorkerName()}`\r\n          : 'Мой нарастающий график',\r\n        data: yearlyChartResult.cumulativeCounts,\r\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const kksData = {\r\n    labels: kksChartResult.criteria,\r\n    datasets: [\r\n      {\r\n        label: user.role === 1\r\n          ? `Документы по критериям ККС - ${getWorkerName()}`\r\n          : 'Мои документы по критериям ККС',\r\n        data: kksChartResult.counts,\r\n        backgroundColor: 'rgba(255, 159, 64, 0.6)', // Orange color\r\n        borderColor: 'rgba(255, 159, 64, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const commonOptions = (titleText) => ({\r\n    responsive: true,\r\n    maintainAspectRatio: false, // Allow chart to shrink vertically if needed\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: titleText, // Dynamic title passed as argument\r\n      },\r\n      tooltip: {\r\n          mode: 'index',\r\n          intersect: false,\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n          title: {\r\n              display: true,\r\n              text: titleText.includes('годам') ? 'Год' : (titleText.includes('ККС') ? 'Критерий ККС' : ''), // Dynamic X-axis label\r\n          }\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n            display: true,\r\n            text: 'Количество документов',\r\n        },\r\n        ticks: {\r\n             // Ensure only whole numbers are shown on Y-axis for counts\r\n            stepSize: 1,\r\n            precision: 0\r\n        }\r\n      },\r\n    },\r\n  });\r\n\r\n  const yearlyOptions = commonOptions(\r\n    user.role === 1\r\n      ? `Количество документов по годам (${getWorkerName()})`\r\n      : 'Мои документы по годам'\r\n  );\r\n  const cumulativeOptions = commonOptions(\r\n    user.role === 1\r\n      ? `Нарастающий итог документов по годам (${getWorkerName()})`\r\n      : 'Мой нарастающий итог документов по годам'\r\n  );\r\n   const kksOptions = commonOptions(\r\n    user.role === 1\r\n      ? `Распределение документов по критериям ККС (${getWorkerName()})`\r\n      : 'Мое распределение документов по критериям ККС'\r\n  );\r\n\r\n  // --- Рендеринг ---\r\n\r\n  if (loading) return <div className=\"loading\">Загрузка данных...</div>;\r\n  if (error) return <div className=\"error-container\"><div className=\"error\">{error}</div><button onClick={handleBack} className=\"back-button\">Назад</button></div>; // Show back button with error\r\n\r\n\r\n  // Show message if admin selected a worker with no documents\r\n   const noDocumentsForSelectedWorker = user.role === 1 && selectedWorker !== null && filteredDocuments.length === 0 && documents.length > 0;\r\n\r\n\r\n  return (\r\n    <div className=\"analysis-container\">\r\n      <div className=\"analysis-header\">\r\n        <h1>Анализ документов</h1>\r\n        <div className=\"header-buttons\">\r\n          <button onClick={handleBack} className=\"back-button\">Назад</button>\r\n          <button onClick={handleLogout} className=\"logout-button\">Выйти</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Worker Selector and View Mode Toggle (Only for Admin) */}\r\n      {user.role === 1 && (\r\n        <div className=\"controls-container\">\r\n             {workers.length > 0 ? (\r\n                 <div className=\"worker-selector\">\r\n                    <label htmlFor=\"worker-select\">Работник:</label>\r\n                    <select\r\n                        id=\"worker-select\"\r\n                        value={selectedWorker ?? ''} // Handle null case for value\r\n                        onChange={handleWorkerChange}\r\n                        className=\"worker-select\"\r\n                        disabled={loading} // Disable while loading\r\n                    >\r\n                        {/* Optional: Add a default \"Select Worker\" option if needed */}\r\n                        {/* <option value=\"\" disabled>-- Выберите работника --</option> */}\r\n                        {workers.map(worker => (\r\n                        <option key={worker.ID_Worker} value={worker.ID_Worker}>\r\n                            {worker.FName_Worker} {/* Assuming FName_Worker exists */}\r\n                        </option>\r\n                        ))}\r\n                    </select>\r\n                 </div>\r\n             ) : (\r\n                 <p>Список работников не загружен или пуст.</p>\r\n             )}\r\n\r\n             {selectedWorker !== null && ( // Only show view mode if a worker is selected\r\n                <div className=\"view-mode-buttons\">\r\n                    <button\r\n                        className={`view-mode-button ${viewMode === 'analysis' ? 'active' : ''}`}\r\n                        onClick={() => handleViewModeChange('analysis')}\r\n                    >\r\n                        Анализ\r\n                    </button>\r\n                    <button\r\n                        className={`view-mode-button ${viewMode === 'documents' ? 'active' : ''}`}\r\n                        onClick={() => handleViewModeChange('documents')}\r\n                    >\r\n                        Документы\r\n                    </button>\r\n                </div>\r\n             )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Content Area: Charts or Document List */}\r\n      {viewMode === 'analysis' ? (\r\n        // --- Analysis View (Charts) ---\r\n        <div className=\"charts-grid\">\r\n          {filteredDocuments.length > 0 ? (\r\n            <>\r\n              {/* Chart 1: Yearly Count */}\r\n              <div className=\"chart-wrapper\">\r\n                <Bar options={yearlyOptions} data={yearlyData} />\r\n              </div>\r\n\r\n              {/* Chart 2: Cumulative Count */}\r\n              <div className=\"chart-wrapper\">\r\n                <Bar options={cumulativeOptions} data={cumulativeData} />\r\n              </div>\r\n\r\n              {/* Chart 3: KKS Criteria */}\r\n              <div className=\"chart-wrapper kks-chart-wrapper\">\r\n                {kksChartResult.criteria.length > 0 ? (\r\n                     <Bar options={kksOptions} data={kksData} />\r\n                 ) : (\r\n                     <p className=\"no-data-message\">Нет данных по критериям ККС для отображения.</p>\r\n                 )}\r\n              </div>\r\n             </>\r\n          ) : (\r\n             // Message when no documents match the filter\r\n            <div className=\"no-data-message full-width-message\">\r\n                {user.role === 1 ?\r\n                    (selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра анализа.\" : `Нет документов для выбранного работника (${getWorkerName()}).`) :\r\n                    \"У вас пока нет загруженных документов для анализа.\"\r\n                }\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        // --- Documents View (Table) ---\r\n        <div className=\"documents-list\">\r\n          {filteredDocuments.length > 0 ? (\r\n            <table className=\"documents-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Программа</th>\r\n                  <th>Организация</th>\r\n                  <th>Дата выдачи</th>\r\n                  <th>Действия</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredDocuments.map((doc) => (\r\n                  <tr key={doc.ID_Document}>\r\n                    <td>{doc.ProgramName || 'N/A'}</td>\r\n                    <td>{doc.SName || 'N/A'}</td> {/* Assuming SName comes from documents API */}\r\n                    <td>\r\n                        {doc.DateIssue ? new Date(doc.DateIssue).toLocaleDateString() : 'N/A'}\r\n                    </td>\r\n                    <td>\r\n                      <button\r\n                        className=\"details-button\"\r\n                        onClick={() => handleShowDetails(doc)}\r\n                        disabled={!doc.ID_ProgDPO} // Disable if no program ID\r\n                      >\r\n                        Подробности\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            // Message when no documents match the filter in table view\r\n            <div className=\"no-data-message\">\r\n              {user.role === 1 ?\r\n                 (selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра документов.\" : `Нет документов для выбранного работника (${getWorkerName()}).`) :\r\n                 \"У вас пока нет загруженных документов.\"\r\n              }\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n/* Displaying Org info again seems redundant if already in main section */\r\n                    /* <div className=\"detail-group\">\r\n                        <h3>Информация об организации</h3>\r\n                        <p><strong>Полное название организации:</strong> {programDetails.FName || '-'}</p>\r\n                        <p><strong>Краткое название организации:</strong> {programDetails.SName || '-'}</p>\r\n                        <p><strong>Место проведения программы:</strong> {programDetails.FName || '-'}</p>\r\n                    </div> */\r\n\r\nexport default DocumentAnalysis;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,wBAAwB;;AAE/B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACAX,OAAO,CAACY,QAAQ,CACdX,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,SAASO,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,UAAU,CAAC;EACpD,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoC,cAAc,EAAEC,iBAAiB,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMsC,QAAQ,GAAGnC,WAAW,CAAC,CAAC;EAC9B,MAAMoC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EAErD1C,SAAS,CAAC,MAAM;IACd,MAAM2C,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5BjB,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;MACZ,IAAI;QACF;QACA,MAAMgB,iBAAiB,GAAG,MAAM3C,KAAK,CAAC4C,GAAG,CAAC,qCAAqC,EAAE;UAC/EC,MAAM,EAAE;YACNC,MAAM,EAAET,IAAI,CAACU,EAAE;YACfC,IAAI,EAAEX,IAAI,CAACW;UACb;QACF,CAAC,CAAC;QAEF,IAAI,CAACC,KAAK,CAACC,OAAO,CAACP,iBAAiB,CAACQ,IAAI,CAAC,EAAE;UAC1CC,OAAO,CAAC1B,KAAK,CAAC,uCAAuC,EAAEiB,iBAAiB,CAACQ,IAAI,CAAC;UAC9EhC,YAAY,CAAC,EAAE,CAAC;QAClB,CAAC,MAAM;UACLA,YAAY,CAACwB,iBAAiB,CAACQ,IAAI,CAAC;QACtC;QAEA,IAAIR,iBAAiB,CAACQ,IAAI,IAAIR,iBAAiB,CAACQ,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;UAAA,IAAAC,qBAAA;UAC/DF,OAAO,CAACG,GAAG,CAAC,6CAA6C,GAAAD,qBAAA,GAAEX,iBAAiB,CAACQ,IAAI,CAAC,CAAC,CAAC,cAAAG,qBAAA,uBAAzBA,qBAAA,CAA2BE,SAAS,CAAC;QAClG;QACArC,YAAY,CAACwB,iBAAiB,CAACQ,IAAI,IAAI,EAAE,CAAC;;QAE1C;QACA,IAAId,IAAI,CAACW,IAAI,KAAK,CAAC,EAAE;UACnB,MAAMS,eAAe,GAAG,MAAMzD,KAAK,CAAC4C,GAAG,CAAC,mCAAmC,CAAC;UAC5EvB,UAAU,CAACoC,eAAe,CAACN,IAAI,CAAC;UAChC,IAAIM,eAAe,CAACN,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;YACnC9B,iBAAiB,CAACmC,UAAU,IAAIA,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAID,eAAe,CAACN,IAAI,CAAC,CAAC,CAAC,CAACQ,SAAS,CAAC;UAClF,CAAC,MAAM;YACJpC,iBAAiB,CAAC,IAAI,CAAC;UAC1B;QACF,CAAC,MAAM;UACHA,iBAAiB,CAAC,IAAI,CAAC;QAC3B;QAEAE,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOmC,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZV,OAAO,CAAC1B,KAAK,CAAC,6BAA6B,EAAEkC,GAAG,CAAC;QACjDjC,QAAQ,CAAC,EAAAkC,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcV,IAAI,cAAAW,kBAAA,uBAAlBA,kBAAA,CAAoBpC,KAAK,KAAI,4BAA4B,CAAC;QACnED,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAIY,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEU,EAAE,EAAE;MACVL,SAAS,CAAC,CAAC;IACf,CAAC,MAAM;MACHf,QAAQ,CAAC,oDAAoD,CAAC;MAC9DF,UAAU,CAAC,KAAK,CAAC;IAErB;EACF,CAAC,EAAE,CAACY,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,EAAE,EAAEV,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,IAAI,CAAC,CAAC;EAE1B,MAAMgB,YAAY,GAAGA,CAAA,KAAM;IACzBxB,YAAY,CAACyB,UAAU,CAAC,MAAM,CAAC;IAC/B7B,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAM8B,UAAU,GAAGA,CAAA,KAAM;IACvB9B,QAAQ,CAACC,IAAI,CAACW,IAAI,KAAK,CAAC,GAAG,QAAQ,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,MAAMmB,kBAAkB,GAAIC,KAAK,IAAK;IACpC,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC;IACjDjD,iBAAiB,CAAC8C,QAAQ,CAAC;EAC7B,CAAC;EAED,MAAMI,oBAAoB,GAAIC,IAAI,IAAK;IACrC7C,WAAW,CAAC6C,IAAI,CAAC;EACnB,CAAC;EAED,MAAMC,wBAAwB,GAAG,MAAOC,MAAM,IAAK;IAC/C,IAAI;MACA,MAAMb,QAAQ,GAAG,MAAM/D,KAAK,CAAC4C,GAAG,CAAC,6CAA6CgC,MAAM,EAAE,CAAC;MACvFxB,OAAO,CAACG,GAAG,CAAC,kDAAkD,EAAEQ,QAAQ,CAACZ,IAAI,CAAC;MAC9E,OAAOY,QAAQ,CAACZ,IAAI;IACxB,CAAC,CAAC,OAAOS,GAAG,EAAE;MAAA,IAAAiB,cAAA;MACVzB,OAAO,CAAC1B,KAAK,CAAC,4DAA4D,EAAEkC,GAAG,CAAC;MAChFR,OAAO,CAAC1B,KAAK,CAAC,gBAAgB,EAAE,EAAAmD,cAAA,GAAAjB,GAAG,CAACG,QAAQ,cAAAc,cAAA,uBAAZA,cAAA,CAAc1B,IAAI,KAAIS,GAAG,CAACkB,OAAO,CAAC;MAClE,OAAO,IAAI;IACf;EACJ,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;IAC5C,IAAI,CAACA,QAAQ,IAAI,CAACA,QAAQ,CAACC,UAAU,EAAE;MACrC7B,OAAO,CAAC1B,KAAK,CAAC,4CAA4C,EAAEsD,QAAQ,CAAC;MACrE;IACF;IACAjD,mBAAmB,CAACiD,QAAQ,CAAC;IAE7B,MAAME,OAAO,GAAG,MAAMP,wBAAwB,CAACK,QAAQ,CAACC,UAAU,CAAC;IACnE9C,iBAAiB,CAAC+C,OAAO,CAAC;IAE1BjD,YAAY,CAAC,IAAI,CAAC;IAClBmB,OAAO,CAACG,GAAG,CAAC,yBAAyB,EAAE;MAAEvB,SAAS,EAAE,IAAI;MAAEF,gBAAgB,EAAEkD,QAAQ;MAAE9C,cAAc,EAAEgD;IAAQ,CAAC,CAAC;EAClH,CAAC;EAGD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BlD,YAAY,CAAC,KAAK,CAAC;IACnBF,mBAAmB,CAAC,IAAI,CAAC;IACzBI,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,MAAMiD,iBAAiB,GAAGvF,KAAK,CAACwF,OAAO,CAAC,MAAM;IAC1C,IAAI7D,OAAO,EAAE,OAAO,EAAE;IACtB,IAAIa,IAAI,CAACW,IAAI,KAAK,CAAC,EAAE;MACjB,IAAI1B,cAAc,KAAK,IAAI,IAAIF,OAAO,CAACiC,MAAM,GAAG,CAAC,EAAE;QAC9C,OAAOnC,SAAS,CAACoE,MAAM,CAACC,GAAG;UAAA,IAAAC,SAAA;UAAA,OAAID,GAAG,CAAC5B,SAAS,OAAA6B,SAAA,GAAKpE,OAAO,CAAC,CAAC,CAAC,cAAAoE,SAAA,uBAAVA,SAAA,CAAY7B,SAAS;QAAA,EAAC;MAC5E;MACA,OAAOzC,SAAS,CAACoE,MAAM,CAACC,GAAG,IAAIA,GAAG,CAAC5B,SAAS,KAAKrC,cAAc,CAAC;IACpE,CAAC,MAAM;MACH,OAAOJ,SAAS;IACpB;EACJ,CAAC,EAAE,CAACA,SAAS,EAAEI,cAAc,EAAEe,IAAI,CAACW,IAAI,EAAExB,OAAO,EAAEJ,OAAO,CAAC,CAAC;;EAG5D;EACA,MAAMqE,sBAAsB,GAAIC,IAAI,IAAK;IACvC,MAAMC,eAAe,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAK;MAE9C,IAAI;QACA,MAAMO,IAAI,GAAG,IAAIC,IAAI,CAACR,GAAG,CAACS,SAAS,CAAC;QACpC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE;UACxB,MAAMC,IAAI,GAAGL,IAAI,CAACM,WAAW,CAAC,CAAC;UAC/BP,GAAG,CAACM,IAAI,CAAC,GAAG,CAACN,GAAG,CAACM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACpC,CAAC,MAAM;UACF/C,OAAO,CAACiD,IAAI,CAAC,uCAAuC,EAAEd,GAAG,CAACe,WAAW,CAAC;QAC3E;MACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;QACRnD,OAAO,CAACiD,IAAI,CAAC,uCAAuC,EAAEd,GAAG,CAACe,WAAW,EAAEC,CAAC,CAAC;MAC7E;MACF,OAAOV,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,MAAMW,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACf,eAAe,CAAC,CAACgB,GAAG,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;IAC5E,MAAMC,OAAO,GAAGR,KAAK,CAACnD,MAAM,GAAG,CAAC,GAAG4D,IAAI,CAACC,GAAG,CAAC,GAAGV,KAAK,CAAC,GAAG,IAAIT,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;IAChF,MAAMe,OAAO,GAAGX,KAAK,CAACnD,MAAM,GAAG,CAAC,GAAG4D,IAAI,CAACG,GAAG,CAAC,GAAGZ,KAAK,CAAC,GAAG,IAAIT,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;IAChF,MAAMiB,WAAW,GAAG,IAAItB,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;IAC5C,MAAMkB,OAAO,GAAGL,IAAI,CAACG,GAAG,CAACD,OAAO,EAAEE,WAAW,CAAC;IAE9C,MAAME,QAAQ,GAAG,EAAE;IAClB,IAAIP,OAAO,IAAIM,OAAO,EAAE;MACrB,KAAK,IAAInB,IAAI,GAAGa,OAAO,EAAEb,IAAI,IAAImB,OAAO,EAAEnB,IAAI,EAAE,EAAE;QAC9CoB,QAAQ,CAACC,IAAI,CAACrB,IAAI,CAAC;MACvB;IACH,CAAC,MAAM,IAAIK,KAAK,CAACnD,MAAM,KAAK,CAAC,EAAE;MAC3BkE,QAAQ,CAACC,IAAI,CAACH,WAAW,CAAC;IAC9B;IAGD,MAAMI,MAAM,GAAGF,QAAQ,CAACZ,GAAG,CAACR,IAAI,IAAIR,eAAe,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;IAE/D,MAAMuB,gBAAgB,GAAGD,MAAM,CAAC7B,MAAM,CAAC,CAACC,GAAG,EAAE8B,KAAK,EAAEC,KAAK,KAAK;MAC5D/B,GAAG,CAAC2B,IAAI,CAACI,KAAK,KAAK,CAAC,GAAGD,KAAK,GAAG,CAAC9B,GAAG,CAAC+B,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAID,KAAK,CAAC,CAAC,CAAC;MAC/D,OAAO9B,GAAG;IACZ,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO;MACLW,KAAK,EAAEe,QAAQ;MACfE,MAAM;MACNC;IACF,CAAC;EACH,CAAC;;EAGD;EACA,MAAMG,mBAAmB,GAAInC,IAAI,IAAK;IACpC,MAAMoC,SAAS,GAAGpC,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEN,GAAG,KAAK;MAC1C,MAAMwC,SAAS,GAAGxC,GAAG,CAAC/B,SAAS,CAAC,CAAC;MACjCJ,OAAO,CAACG,GAAG,CAAC,sBAAsBgC,GAAG,CAACe,WAAW,0BAA0ByB,SAAS,YAAY,OAAOA,SAAS,GAAG,CAAC;MACpH,IAAIA,SAAS,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;QAC9C,MAAMC,QAAQ,GAAGD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC;QAAA,CAClBtB,GAAG,CAACuB,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;QAAA,CACvB7C,MAAM,CAAC4C,GAAG,IAAIA,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC;;QAE/CF,QAAQ,CAACI,OAAO,CAACC,SAAS,IAAI;UAC5BxC,GAAG,CAACwC,SAAS,CAAC,GAAG,CAACxC,GAAG,CAACwC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;QAC5C,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIN,SAAS,EAAE;QAClB3E,OAAO,CAACiD,IAAI,CAAC,yCAAyC,EAAEd,GAAG,CAACe,WAAW,EAAE,QAAQ,EAAEyB,SAAS,CAAC;MACjG;MACA;;MAEA,OAAOlC,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,MAAMyC,cAAc,GAAG7B,MAAM,CAACC,IAAI,CAACoB,SAAS,CAAC,CAACjB,IAAI,CAAC,CAAC,CAAC,CAAC;IACtD,MAAMY,MAAM,GAAGa,cAAc,CAAC3B,GAAG,CAAC0B,SAAS,IAAIP,SAAS,CAACO,SAAS,CAAC,CAAC;IAEpE,OAAO;MACLL,QAAQ,EAAEM,cAAc;MACxBb;IACF,CAAC;EACH,CAAC;;EAEF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;EACA,MAAMc,iBAAiB,GAAG9C,sBAAsB,CAACL,iBAAiB,CAAC;EACnE,MAAMoD,cAAc,GAAGX,mBAAmB,CAACzC,iBAAiB,CAAC;;EAE7D;;EAEA,MAAMqD,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIpG,IAAI,CAACW,IAAI,KAAK,CAAC,IAAI,CAAC1B,cAAc,EAAE,OAAO,EAAE;IACjD,MAAMoH,MAAM,GAAGtH,OAAO,CAACuH,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACjF,SAAS,KAAKrC,cAAc,CAAC;IAChE,OAAOoH,MAAM,GAAGA,MAAM,CAACG,YAAY,GAAG,MAAMvH,cAAc,EAAE,CAAC,CAAC;EAClE,CAAC;EAED,MAAMwH,UAAU,GAAG;IACjBC,MAAM,EAAER,iBAAiB,CAAC/B,KAAK;IAC/BwC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE5G,IAAI,CAACW,IAAI,KAAK,CAAC,GAClB,0BAA0ByF,aAAa,CAAC,CAAC,EAAE,GAC3C,0BAA0B;MAC9BtF,IAAI,EAAEoF,iBAAiB,CAACd,MAAM;MAC9ByB,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,cAAc,GAAG;IACrBN,MAAM,EAAER,iBAAiB,CAAC/B,KAAK;IAC/BwC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE5G,IAAI,CAACW,IAAI,KAAK,CAAC,GAClB,wBAAwByF,aAAa,CAAC,CAAC,EAAE,GACzC,wBAAwB;MAC5BtF,IAAI,EAAEoF,iBAAiB,CAACb,gBAAgB;MACxCwB,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAME,OAAO,GAAG;IACdP,MAAM,EAAEP,cAAc,CAACR,QAAQ;IAC/BgB,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE5G,IAAI,CAACW,IAAI,KAAK,CAAC,GAClB,gCAAgCyF,aAAa,CAAC,CAAC,EAAE,GACjD,gCAAgC;MACpCtF,IAAI,EAAEqF,cAAc,CAACf,MAAM;MAC3ByB,eAAe,EAAE,yBAAyB;MAAE;MAC5CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMG,aAAa,GAAIC,SAAS,KAAM;IACpCC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAAE;IAC5BC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAER,SAAS,CAAE;MACnB,CAAC;MACDS,OAAO,EAAE;QACLvF,IAAI,EAAE,OAAO;QACbwF,SAAS,EAAE;MACf;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACCN,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAER,SAAS,CAACa,QAAQ,CAAC,OAAO,CAAC,GAAG,KAAK,GAAIb,SAAS,CAACa,QAAQ,CAAC,KAAK,CAAC,GAAG,cAAc,GAAG,EAAG,CAAE;QACnG;MACJ,CAAC;MACDC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBT,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACV,CAAC;QACDQ,KAAK,EAAE;UACF;UACDC,QAAQ,EAAE,CAAC;UACXC,SAAS,EAAE;QACf;MACF;IACF;EACF,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAGpB,aAAa,CACjClH,IAAI,CAACW,IAAI,KAAK,CAAC,GACX,mCAAmCyF,aAAa,CAAC,CAAC,GAAG,GACrD,wBACN,CAAC;EACD,MAAMmC,iBAAiB,GAAGrB,aAAa,CACrClH,IAAI,CAACW,IAAI,KAAK,CAAC,GACX,yCAAyCyF,aAAa,CAAC,CAAC,GAAG,GAC3D,0CACN,CAAC;EACA,MAAMoC,UAAU,GAAGtB,aAAa,CAC/BlH,IAAI,CAACW,IAAI,KAAK,CAAC,GACX,8CAA8CyF,aAAa,CAAC,CAAC,GAAG,GAChE,+CACN,CAAC;;EAED;;EAEA,IAAIjH,OAAO,EAAE,oBAAOZ,OAAA;IAAKkK,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACrE,IAAIzJ,KAAK,EAAE,oBAAOd,OAAA;IAAKkK,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAACnK,OAAA;MAAKkK,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAErJ;IAAK;MAAAsJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAAAvK,OAAA;MAAQwK,OAAO,EAAElH,UAAW;MAAC4G,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,CAAC;;EAGlK;EACC,MAAME,4BAA4B,GAAGhJ,IAAI,CAACW,IAAI,KAAK,CAAC,IAAI1B,cAAc,KAAK,IAAI,IAAI8D,iBAAiB,CAAC/B,MAAM,KAAK,CAAC,IAAInC,SAAS,CAACmC,MAAM,GAAG,CAAC;EAG1I,oBACEzC,OAAA;IAAKkK,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCnK,OAAA;MAAKkK,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BnK,OAAA;QAAAmK,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BvK,OAAA;QAAKkK,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BnK,OAAA;UAAQwK,OAAO,EAAElH,UAAW;UAAC4G,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnEvK,OAAA;UAAQwK,OAAO,EAAEpH,YAAa;UAAC8G,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGL9I,IAAI,CAACW,IAAI,KAAK,CAAC,iBACdpC,OAAA;MAAKkK,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAC7B3J,OAAO,CAACiC,MAAM,GAAG,CAAC,gBACfzC,OAAA;QAAKkK,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC7BnK,OAAA;UAAO0K,OAAO,EAAC,eAAe;UAAAP,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChDvK,OAAA;UACImC,EAAE,EAAC,eAAe;UAClByB,KAAK,EAAElD,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAI,EAAG,CAAC;UAAA;UAC7BiK,QAAQ,EAAEpH,kBAAmB;UAC7B2G,SAAS,EAAC,eAAe;UACzBU,QAAQ,EAAEhK,OAAQ,CAAC;UAAA;UAAAuJ,QAAA,EAIlB3J,OAAO,CAACuF,GAAG,CAAC+B,MAAM,iBACnB9H,OAAA;YAA+B4D,KAAK,EAAEkE,MAAM,CAAC/E,SAAU;YAAAoH,QAAA,GAClDrC,MAAM,CAACG,YAAY,EAAC,GAAC;UAAA,GADbH,MAAM,CAAC/E,SAAS;YAAAqH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAErB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,gBAENvK,OAAA;QAAAmK,QAAA,EAAG;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChD,EAEA7J,cAAc,KAAK,IAAI;MAAA;MAAM;MAC3BV,OAAA;QAAKkK,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9BnK,OAAA;UACIkK,SAAS,EAAE,oBAAoBlJ,QAAQ,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;UACzEwJ,OAAO,EAAEA,CAAA,KAAM3G,oBAAoB,CAAC,UAAU,CAAE;UAAAsG,QAAA,EACnD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTvK,OAAA;UACIkK,SAAS,EAAE,oBAAoBlJ,QAAQ,KAAK,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC1EwJ,OAAO,EAAEA,CAAA,KAAM3G,oBAAoB,CAAC,WAAW,CAAE;UAAAsG,QAAA,EACpD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,EAGAvJ,QAAQ,KAAK,UAAU;IAAA;IACtB;IACAhB,OAAA;MAAKkK,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzB3F,iBAAiB,CAAC/B,MAAM,GAAG,CAAC,gBAC3BzC,OAAA,CAAAE,SAAA;QAAAiK,QAAA,gBAEEnK,OAAA;UAAKkK,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BnK,OAAA,CAACF,GAAG;YAAC+K,OAAO,EAAEd,aAAc;YAACxH,IAAI,EAAE2F;UAAW;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eAGNvK,OAAA;UAAKkK,SAAS,EAAC,eAAe;UAAAC,QAAA,eAC5BnK,OAAA,CAACF,GAAG;YAAC+K,OAAO,EAAEb,iBAAkB;YAACzH,IAAI,EAAEkG;UAAe;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,eAGNvK,OAAA;UAAKkK,SAAS,EAAC,iCAAiC;UAAAC,QAAA,EAC7CvC,cAAc,CAACR,QAAQ,CAAC3E,MAAM,GAAG,CAAC,gBAC9BzC,OAAA,CAACF,GAAG;YAAC+K,OAAO,EAAEZ,UAAW;YAAC1H,IAAI,EAAEmG;UAAQ;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAE3CvK,OAAA;YAAGkK,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAA4C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QACjF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACL,CAAC;MAAA;MAEH;MACDvK,OAAA;QAAKkK,SAAS,EAAC,oCAAoC;QAAAC,QAAA,EAC9C1I,IAAI,CAACW,IAAI,KAAK,CAAC,GACX1B,cAAc,KAAK,IAAI,GAAG,uDAAuD,GAAG,4CAA4CmH,aAAa,CAAC,CAAC,IAAI,GACpJ;MAAoD;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvD;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;IAAA;IAEN;IACAvK,OAAA;MAAKkK,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5B3F,iBAAiB,CAAC/B,MAAM,GAAG,CAAC,gBAC3BzC,OAAA;QAAOkK,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAChCnK,OAAA;UAAAmK,QAAA,eACEnK,OAAA;YAAAmK,QAAA,gBACEnK,OAAA;cAAAmK,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBvK,OAAA;cAAAmK,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBvK,OAAA;cAAAmK,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBvK,OAAA;cAAAmK,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRvK,OAAA;UAAAmK,QAAA,EACG3F,iBAAiB,CAACuB,GAAG,CAAEpB,GAAG,iBACzB3E,OAAA;YAAAmK,QAAA,gBACEnK,OAAA;cAAAmK,QAAA,EAAKxF,GAAG,CAACmG,WAAW,IAAI;YAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnCvK,OAAA;cAAAmK,QAAA,EAAKxF,GAAG,CAACoG,KAAK,IAAI;YAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,KAAC,eAC9BvK,OAAA;cAAAmK,QAAA,EACKxF,GAAG,CAACS,SAAS,GAAG,IAAID,IAAI,CAACR,GAAG,CAACS,SAAS,CAAC,CAAC4F,kBAAkB,CAAC,CAAC,GAAG;YAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC,eACLvK,OAAA;cAAAmK,QAAA,eACEnK,OAAA;gBACEkK,SAAS,EAAC,gBAAgB;gBAC1BM,OAAO,EAAEA,CAAA,KAAMrG,iBAAiB,CAACQ,GAAG,CAAE;gBACtCiG,QAAQ,EAAE,CAACjG,GAAG,CAACN,UAAW,CAAC;gBAAA;gBAAA8F,QAAA,EAC5B;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAdE5F,GAAG,CAACe,WAAW;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAepB,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;MAAA;MAER;MACAvK,OAAA;QAAKkK,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7B1I,IAAI,CAACW,IAAI,KAAK,CAAC,GACZ1B,cAAc,KAAK,IAAI,GAAG,0DAA0D,GAAG,4CAA4CmH,aAAa,CAAC,CAAC,IAAI,GACvJ;MAAwC;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExC;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;;AAGA;AACoB;AACpB;AACA;AACA;AACA;AACA;AALoBlK,EAAA,CAvfXD,gBAAgB;EAAA,QAUNf,WAAW;AAAA;AAAA4L,EAAA,GAVrB7K,gBAAgB;AA8fzB,eAAeA,gBAAgB;AAAC,IAAA6K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amina\\\\VScode\\\\FQW_new\\\\src\\\\components\\\\DocumentAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './DocumentAnalysis.css'; // Make sure this CSS file exists and is styled appropriately\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.REACT_APP_API_URL;\n\n// Set the app element for react-modal accessibility\nModal.setAppElement('#root'); // Adjust '#root' if your app's root element has a different ID\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction DocumentAnalysis() {\n  _s();\n  // State Variables\n  const [documents, setDocuments] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [selectedWorker, setSelectedWorker] = useState(null); // Store worker ID\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [viewMode, setViewMode] = useState('analysis'); // 'analysis' or 'documents'\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDocumentForModal, setSelectedDocumentForModal] = useState(null);\n\n  // Hooks\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('user')); // Assuming user info is stored here\n\n  // --- Helper Function: Get Worker Name (Memoized) ---\n  const getWorkerName = useCallback(() => {\n    // Ensure workers is an array before using find\n    if ((user === null || user === void 0 ? void 0 : user.role) !== 1 || !selectedWorker || !Array.isArray(workers)) return '';\n    const worker = workers.find(w => w.ID_Worker === selectedWorker);\n    return worker ? worker.FName_Worker : `ID ${selectedWorker}`; // Use FName_Worker or adjust as needed\n  }, [user === null || user === void 0 ? void 0 : user.role, selectedWorker, workers]); // Dependencies for getWorkerName\n\n  // --- useEffect for Data Fetching ---\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        // Fetch documents based on user ID and role\n        const documentsResponse = await axios.get(`${apiUrl}/api/documents`, {\n          params: {\n            userId: user.workerId,\n            role: user.role\n          }\n        });\n\n        // Validate documents response\n        if (!Array.isArray(documentsResponse.data)) {\n          console.error('Documents API did not return an array:', documentsResponse.data);\n          throw new Error('Неверный формат данных документов');\n        }\n        setDocuments(documentsResponse.data);\n        console.log(\"Frontend: Documents received:\", documentsResponse.data.length);\n        if (documentsResponse.data.length > 0) {\n          var _documentsResponse$da;\n          // Log the structure of KKS_Data for the first doc for verification\n          console.log(\"Frontend: Sample KKS_Data in first doc:\", (_documentsResponse$da = documentsResponse.data[0]) === null || _documentsResponse$da === void 0 ? void 0 : _documentsResponse$da.KKS_Data);\n        }\n\n        // Fetch workers list if the user is an admin (role === 1)\n        if (user.role === 1) {\n          const workersResponse = await axios.get(`${apiUrl}/api/workers`);\n\n          // Validate workers response\n          if (!Array.isArray(workersResponse.data)) {\n            console.error(\"Workers API did not return an array:\", workersResponse.data);\n            setWorkers([]); // Set empty array on error\n          } else {\n            setWorkers(workersResponse.data);\n            // Set the initial selected worker ONLY if workers exist and NO worker is currently selected\n            // This prevents resetting selection if the component re-renders for other reasons\n            if (workersResponse.data.length > 0 && selectedWorker === null) {\n              setSelectedWorker(workersResponse.data[0].ID_Worker);\n            } else if (workersResponse.data.length === 0) {\n              setSelectedWorker(null); // No workers available\n            }\n          }\n        } else {\n          // Not an admin, clear workers and selection\n          setWorkers([]);\n          setSelectedWorker(null);\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Ошибка при загрузке данных:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message || 'Не удалось загрузить данные');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user !== null && user !== void 0 && user.workerId) {\n      fetchData();\n    } else {\n      setError(\"Пользователь не найден. Пожалуйста, войдите снова.\");\n      setLoading(false);\n      // Optional: Redirect to login\n      // navigate('/login');\n    }\n    // Dependency array includes user info and selectedWorker (to potentially refetch if admin changes worker, though filtering handles display)\n    // Note: Adding selectedWorker here caused a re-fetch loop in v1 - be careful. Let's keep it based on user info for initial load.\n    // Re-filtering happens via useMemo when selectedWorker changes.\n  }, [user === null || user === void 0 ? void 0 : user.workerId, user === null || user === void 0 ? void 0 : user.role]); // Re-run effect if user ID or role changes\n\n  // --- Event Handlers ---\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const handleBack = () => {\n    // Navigate back based on user role\n    navigate((user === null || user === void 0 ? void 0 : user.role) === 1 ? '/admin' : '/user'); // Navigate to admin or user dashboard\n  };\n  const handleWorkerChange = event => {\n    const workerIdValue = event.target.value;\n    // Parse to integer, handle potential empty string value from a \"--Select--\" option\n    const workerId = workerIdValue ? parseInt(workerIdValue, 10) : null;\n    setSelectedWorker(workerId);\n  };\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n  };\n\n  // --- Modal Handlers ---\n  const openModal = doc => {\n    console.log(\"Opening modal for doc:\", doc);\n    setSelectedDocumentForModal(doc);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedDocumentForModal(null); // Clear selected doc when closing\n  };\n\n  // --- Filtered Documents (Memoized) ---\n  const filteredDocuments = useMemo(() => {\n    if (loading || !Array.isArray(documents)) return []; // Return empty if loading or documents not an array\n\n    if ((user === null || user === void 0 ? void 0 : user.role) === 1) {\n      // Admin view: filter by selectedWorker ID\n      return selectedWorker !== null ? documents.filter(doc => doc.ID_Worker === selectedWorker) : []; // Show nothing if admin role but no worker selected yet\n    } else {\n      // Non-admin view: show all documents fetched for them (backend already filtered)\n      return documents;\n    }\n  }, [documents, selectedWorker, user === null || user === void 0 ? void 0 : user.role, loading]); // Recalculate when these change\n\n  // --- Chart Data Preparation Functions (Memoized with useCallback) ---\n\n  // 1. Yearly & Cumulative Chart Data\n  const prepareYearlyChartData = useCallback(docs => {\n    const documentsByYear = docs.reduce((acc, doc) => {\n      try {\n        // Ensure DateIssue exists and is a valid date string\n        if (doc.DateIssue) {\n          const date = new Date(doc.DateIssue);\n          if (!isNaN(date.getTime())) {\n            // Check if date is valid\n            const year = date.getFullYear();\n            acc[year] = (acc[year] || 0) + 1;\n          } else {\n            console.warn(\"Invalid DateIssue format:\", doc.ID_Document, doc.DateIssue);\n          }\n        } else {\n          console.warn(\"Missing DateIssue:\", doc.ID_Document);\n        }\n      } catch (e) {\n        console.error(\"Error parsing DateIssue:\", doc.ID_Document, doc.DateIssue, e);\n      }\n      return acc;\n    }, {});\n    const yearsInData = Object.keys(documentsByYear).map(Number).sort((a, b) => a - b);\n    const currentYear = new Date().getFullYear();\n    const minDataYear = yearsInData.length > 0 ? Math.min(...yearsInData) : currentYear;\n    const maxDataYear = yearsInData.length > 0 ? Math.max(...yearsInData) : currentYear;\n\n    // Determine the range of years for the chart (from earliest data year to at least the current year)\n    const startYear = minDataYear;\n    const endYear = Math.max(maxDataYear, currentYear);\n    const allYears = [];\n    // Populate all years in the range\n    if (startYear <= endYear) {\n      for (let year = startYear; year <= endYear; year++) {\n        allYears.push(year);\n      }\n    } else if (docs.length === 0) {// Handle case with no documents - maybe show current year?\n      // Optionally add current year: allYears.push(currentYear);\n    }\n\n    // Map counts for each year in the final range\n    const counts = allYears.map(year => documentsByYear[year] || 0);\n\n    // Calculate cumulative counts\n    const cumulativeCounts = counts.reduce((acc, count, index) => {\n      acc.push(index === 0 ? count : (acc[index - 1] || 0) + count);\n      return acc;\n    }, []);\n    return {\n      years: allYears,\n      counts,\n      cumulativeCounts\n    };\n  }, []); // useCallback as the function definition itself doesn't depend on props/state\n\n  // 2. KKS Criteria Chart Data (Processing KKS_Data array)\n  const prepareKKSChartData = useCallback(docs => {\n    // Aggregate counts per KKS criterion (using shortName as key)\n    const kksAggregated = docs.reduce((acc, doc) => {\n      const kksItems = doc.KKS_Data; // Expecting an array like [{ shortName: '..', fullName: '..' }, ...]\n\n      // Check if kksItems is a valid array\n      if (Array.isArray(kksItems)) {\n        kksItems.forEach(item => {\n          var _item$shortName, _item$fullName;\n          const shortName = item === null || item === void 0 ? void 0 : (_item$shortName = item.shortName) === null || _item$shortName === void 0 ? void 0 : _item$shortName.trim(); // Use optional chaining and trim\n          const fullName = item === null || item === void 0 ? void 0 : (_item$fullName = item.fullName) === null || _item$fullName === void 0 ? void 0 : _item$fullName.trim();\n          if (shortName) {\n            // Process only if shortName exists\n            if (!acc[shortName]) {\n              // Initialize entry for this shortName if it's the first time seen\n              acc[shortName] = {\n                shortName: shortName,\n                fullName: fullName || shortName,\n                // Use shortName as fallback if fullName is missing\n                count: 0\n              };\n            }\n            // Increment the count for this KKS criterion\n            acc[shortName].count += 1;\n          } else {\n            console.warn(\"KKS item missing shortName in doc:\", doc.ID_Document, item);\n          }\n        });\n      } else if (kksItems) {\n        // Log if KKS_Data exists but isn't an array (should be handled by backend ideally)\n        console.error(\"KKS_Data is not an array for doc:\", doc.ID_Document, kksItems);\n      }\n      // If KKS_Data is null/undefined or invalid, just skip and continue\n\n      return acc;\n    }, {}); // Initial value is an empty object\n\n    // Sort aggregated data by shortName for consistent chart axis order\n    const sortedShortNames = Object.keys(kksAggregated).sort((a, b) => a.localeCompare(b));\n\n    // Extract data arrays needed for Chart.js\n    const labels = sortedShortNames; // X-axis labels will be the Short Names\n    const fullNames = sortedShortNames.map(key => kksAggregated[key].fullName); // Full Names for tooltips\n    const counts = sortedShortNames.map(key => kksAggregated[key].count); // Bar heights\n\n    console.log(\"Prepared KKS Chart Data:\", {\n      labels,\n      fullNames,\n      counts\n    }); // Log for debugging\n\n    return {\n      labels: labels,\n      // Short names for axis\n      fullNames: fullNames,\n      // Full names for tooltips\n      counts: counts // Counts for bar heights\n    };\n  }, []); // useCallback as the function definition is stable\n\n  // --- Memoized Chart Results ---\n  // These recalculate only when filteredDocuments or the prep function changes (which it won't due to useCallback)\n  const yearlyChartResult = useMemo(() => prepareYearlyChartData(filteredDocuments), [filteredDocuments, prepareYearlyChartData]);\n  const kksChartResult = useMemo(() => prepareKKSChartData(filteredDocuments), [filteredDocuments, prepareKKSChartData]);\n\n  // --- Расчет коэффициента K ---\n  const calculateK = useCallback(cumulativeCounts => {\n    if (!Array.isArray(cumulativeCounts) || cumulativeCounts.length < 2) return 0;\n    let K = 0;\n    for (let i = 1; i < cumulativeCounts.length; i++) {\n      const diff = cumulativeCounts[i] - cumulativeCounts[i - 1];\n      if (diff > 0) {\n        K += diff;\n      }\n    }\n    return K;\n  }, []);\n  const kCoefficient = useMemo(() => {\n    return calculateK(yearlyChartResult.cumulativeCounts);\n  }, [yearlyChartResult.cumulativeCounts, calculateK]);\n\n  // --- Memoized Chart Data Objects (for react-chartjs-2) ---\n  const yearlyData = useMemo(() => ({\n    labels: yearlyChartResult.years,\n    datasets: [{\n      label: user.role === 1 ? `Документы по годам` : 'Мои документы по годам',\n      data: yearlyChartResult.counts,\n      backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      // Blue\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 1\n    }]\n  }), [yearlyChartResult, user.role, getWorkerName]); // Update when results or worker name changes\n\n  const cumulativeData = useMemo(() => ({\n    labels: yearlyChartResult.years,\n    datasets: [{\n      label: user.role === 1 ? `Документы по годам с приращением` : 'Документы по годам с приращением',\n      data: yearlyChartResult.cumulativeCounts,\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      // Teal\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  }), [yearlyChartResult, user.role, getWorkerName]); // Update when results or worker name changes\n\n  const kksData = useMemo(() => ({\n    labels: kksChartResult.labels,\n    // Use SHORT names for axis labels\n    datasets: [{\n      label: user.role === 1 ? `Документы по критериям ККС` : 'Документы по критериям ККС',\n      data: kksChartResult.counts,\n      backgroundColor: 'rgba(255, 159, 64, 0.6)',\n      // Orange\n      borderColor: 'rgba(255, 159, 64, 1)',\n      borderWidth: 1\n    }]\n  }), [kksChartResult, user.role, getWorkerName]); // Update when KKS results or worker name changes\n\n  // --- Chart Options (Memoized) ---\n\n  // Generator for common options\n  const commonOptions = useMemo(() => (titleText, xAxisText) => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    // Allow chart to fill container height\n    plugins: {\n      legend: {\n        position: 'top' // Position legend at the top\n      },\n      title: {\n        display: true,\n        text: titleText,\n        // Dynamic title\n        font: {\n          size: 16\n        } // Set title font size\n      },\n      tooltip: {\n        // Base tooltip configuration\n        mode: 'index',\n        // Show tooltips for all datasets at that index\n        intersect: false // Tooltip appears even if not directly hovering over the bar\n      }\n    },\n    scales: {\n      x: {\n        // X-axis configuration\n        title: {\n          display: true,\n          text: xAxisText // Dynamic X-axis label\n        },\n        ticks: {\n          autoSkip: true,\n          // Automatically skip labels if they overlap\n          maxRotation: 45,\n          // Max rotation for labels\n          minRotation: 0 // Min rotation\n        }\n      },\n      y: {\n        // Y-axis configuration\n        beginAtZero: true,\n        // Start Y-axis at 0\n        title: {\n          display: true,\n          text: 'Количество документов' // Y-axis label\n        },\n        ticks: {\n          // Ensure integer ticks for document counts\n          precision: 0\n        }\n      }\n    }\n  }), []); // No dependencies for the function generator itself\n\n  // Specific options for each chart using the common generator\n  const yearlyOptions = useMemo(() => commonOptions(user.role === 1 ? `Количество документов по годам (${getWorkerName() || 'Выбор...'})` : 'Мои документы по годам', 'Год' // X-axis title\n  ), [commonOptions, user.role, getWorkerName]);\n  const cumulativeOptions = useMemo(() => commonOptions(user.role === 1 ? `Документы по годам с приращением (${getWorkerName() || 'Выбор...'})` : 'Документы по годам с приращением', 'Год' // X-axis title\n  ), [commonOptions, user.role, getWorkerName]);\n\n  // KKS Options with custom tooltip callback\n  const kksOptions = useMemo(() => {\n    const title = user.role === 1 ? `Распределение по критериям ККС (${getWorkerName() || 'Выбор...'})` : 'Мое распределение по критериям ККС';\n    const baseOpts = commonOptions(title, 'Критерий ККС'); // X-axis title notes abbreviation\n\n    // Customize tooltips specifically for the KKS chart to show full names\n    baseOpts.plugins.tooltip = {\n      ...baseOpts.plugins.tooltip,\n      // Keep existing base settings (mode, intersect)\n      callbacks: {\n        label: function (context) {\n          // Use 'function' to access 'this' if needed, or arrow function\n          try {\n            var _ref, _context$parsed$y, _kksChartResult$fullN;\n            const labelIndex = context.dataIndex; // Index of the data point\n            const count = (_ref = (_context$parsed$y = context.parsed.y) !== null && _context$parsed$y !== void 0 ? _context$parsed$y : context.dataset.data[labelIndex]) !== null && _ref !== void 0 ? _ref : 0; // Get count safely\n\n            // Access the fullNames array prepared earlier (available via closure)\n            // kksChartResult.fullNames should be available in this scope\n            const fullName = (_kksChartResult$fullN = kksChartResult.fullNames) === null || _kksChartResult$fullN === void 0 ? void 0 : _kksChartResult$fullN[labelIndex]; // Use optional chaining\n\n            // Use the full name if available, otherwise fallback to the axis label (short name)\n            const displayLabel = fullName || context.label || ''; // context.label is the short name\n\n            return `${displayLabel}: ${count}`; // Tooltip format: \"Full Name (or Short Name): Count\"\n          } catch (e) {\n            console.error(\"Error in KKS tooltip callback:\", e);\n            // Provide a fallback tooltip text in case of an error\n            return `${context.label || 'Ошибка'}: ${context.parsed.y || 0}`;\n          }\n        }\n      }\n    };\n    return baseOpts;\n  }, [commonOptions, user.role, getWorkerName, kksChartResult.fullNames]); // Dependency on fullNames is crucial for the tooltip\n\n  // --- Helper Function: Format Date (Memoized) ---\n  const formatDate = useCallback(dateString => {\n    if (!dateString) return 'N/A'; // Handle null or empty date strings\n    try {\n      const date = new Date(dateString);\n      // Check if the date object is valid\n      return isNaN(date.getTime()) ? 'Неверная дата' : date.toLocaleDateString('ru-RU'); // Use Russian locale for DD.MM.YYYY\n    } catch (e) {\n      console.error(\"Error formatting date:\", dateString, e);\n      return 'Ошибка даты'; // Return error string if parsing fails\n    }\n  }, []); // No dependencies needed\n\n  // --- Rendering Logic ---\n\n  // Loading State\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 25\n  }, this);\n\n  // Error State\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-buttons\",\n      style: {\n        justifyContent: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"back-button\",\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 9\n  }, this);\n\n  // Main Content Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analysis-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBack,\n          className: \"back-button\",\n          children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-button\",\n          children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }, this), (user === null || user === void 0 ? void 0 : user.role) === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: [workers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"worker-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"worker-select\",\n          children: \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"worker-select\",\n          value: selectedWorker !== null && selectedWorker !== void 0 ? selectedWorker : '' // Controlled component value, handle null state\n          ,\n          onChange: handleWorkerChange,\n          className: \"worker-select\",\n          disabled: loading // Disable while loading (though loading screen handles this mostly)\n          ,\n          children: workers.map(worker => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: worker.ID_Worker,\n            children: worker.FName_Worker || `ID: ${worker.ID_Worker}`\n          }, worker.ID_Worker, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 38\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 26\n      }, this) :\n      /*#__PURE__*/\n      // Message if workers list couldn't be loaded or is empty\n      _jsxDEV(\"p\", {\n        className: \"no-workers-message\",\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0440\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D \\u0438\\u043B\\u0438 \\u043F\\u0443\\u0441\\u0442.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 26\n      }, this), selectedWorker !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-mode-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-mode-button ${viewMode === 'analysis' ? 'active' : ''}`,\n          onClick: () => handleViewModeChange('analysis'),\n          \"aria-pressed\": viewMode === 'analysis' // Accessibility\n          ,\n          children: \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437 (\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A\\u0438)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-mode-button ${viewMode === 'documents' ? 'active' : ''}`,\n          onClick: () => handleViewModeChange('documents'),\n          \"aria-pressed\": viewMode === 'documents' // Accessibility\n          ,\n          children: \"\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B (\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 25\n      }, this), selectedWorker === null && workers.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"select-worker-prompt\",\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u0430 \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: viewMode === 'analysis' ?\n      /*#__PURE__*/\n      // --- Analysis View (Charts) ---\n      _jsxDEV(\"div\", {\n        className: \"charts-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"k-coefficient-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442 \\u0434\\u0438\\u043D\\u0430\\u043C\\u0438\\u043A\\u0438 \\u041A\\u041A\\u0421\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"k-value\",\n            children: kCoefficient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"k-description\",\n            children: \"\\u041A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442 K \\u043F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0435\\u0442 \\u0441\\u0443\\u043C\\u043C\\u0443 \\u043F\\u0440\\u0438\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430 \\u0414\\u041E\\u041A, \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0445 \\u043A \\u043A\\u0430\\u0436\\u0434\\u043E\\u043C\\u0443 \\u0433\\u043E\\u0434\\u0443 \\u0432 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\\u0435 \\u043E\\u0446\\u0435\\u043D\\u043A\\u0438. \\u0427\\u0435\\u043C \\u0432\\u044B\\u0448\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 K, \\u0442\\u0435\\u043C \\u0431\\u043E\\u043B\\u0435\\u0435 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0435\\u0441\\u0441\\u0438\\u0432\\u043D\\u044B\\u043C \\u044F\\u0432\\u043B\\u044F\\u0435\\u0442\\u0441\\u044F \\u0440\\u043E\\u0441\\u0442 \\u043A\\u0432\\u0430\\u043B\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u0438 \\u0440\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u0430.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 25\n        }, this), (user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper\",\n            children: yearlyChartResult.years.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n              options: yearlyOptions,\n              data: yearlyData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-data-message\",\n              children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u0433\\u043E\\u0434\\u0430\\u043C.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper\",\n            children: yearlyChartResult.years.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n              options: cumulativeOptions,\n              data: cumulativeData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-data-message\",\n              children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u0433\\u043E\\u0434\\u0430\\u043C.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 45\n            }, this) // Redundant but harmless\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper kks-chart-wrapper\",\n            children: kksChartResult.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n              options: kksOptions,\n              data: kksData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-data-message\",\n              children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u043A\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u044F\\u043C \\u041A\\u041A\\u0421 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 572,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Message when no documents are available for the current view/filter\n        _jsxDEV(\"div\", {\n          className: \"no-data-message full-width-message\",\n          children: user.role === 1 ? selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра анализа.\" : `Нет документов для анализа у выбранного работника (${getWorkerName()}).` : \"У вас пока нет загруженных документов для анализа.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      // --- Documents View (Table) ---\n      _jsxDEV(\"div\", {\n        className: \"documents-list\",\n        children: (user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"documents-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 \\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F (\\u041A\\u0440\\u0430\\u0442\\u043A\\u043E)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0420\\u0435\\u0433. \\u043D\\u043E\\u043C\\u0435\\u0440\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0430\\u0442\\u0430 \\u0432\\u044B\\u0434\\u0430\\u0447\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredDocuments.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.ProgramName || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 47\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.OrgSName || doc.OrgFName || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 47\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.regnumber || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 47\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(doc.DateIssue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 47\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"details-button\",\n                  onClick: () => openModal(doc) // Pass the whole document object\n                  ,\n                  children: \"\\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 51\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 47\n              }, this)]\n            }, doc.ID_Document, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 43\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 31\n        }, this) :\n        /*#__PURE__*/\n        // Message when no documents are available for the table view\n        _jsxDEV(\"div\", {\n          className: \"no-data-message full-width-message\",\n          children: user.role === 1 ? selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра списка документов.\" : `Нет документов для отображения у выбранного работника (${getWorkerName()}).` : \"У вас пока нет загруженных документов.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      contentLabel: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430\" // Accessibility label\n      ,\n      className: \"modal-content\" // Class for styling the modal content\n      ,\n      overlayClassName: \"modal-overlay\" // Class for styling the background overlay\n      ,\n      ariaHideApp: true // Helps with screen readers\n      ,\n      children: selectedDocumentForModal ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430 \\u2116 \", selectedDocumentForModal.regnumber || selectedDocumentForModal.ID_Document]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"modal-close-button\",\n          \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-details-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 34\n            }, this), \" \", selectedDocumentForModal.WorkerName || getWorkerName() || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 \\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 34\n            }, this), \" \", selectedDocumentForModal.ProgramName || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F (\\u043F\\u043E\\u043B\\u043D\\u043E\\u0435):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 34\n            }, this), \" \", selectedDocumentForModal.OrgFName || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F (\\u043A\\u0440\\u0430\\u0442\\u043A\\u043E\\u0435):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 34\n            }, this), \" \", selectedDocumentForModal.OrgSName || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 34\n            }, this), \" \", selectedDocumentForModal.regnumber || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0414\\u0430\\u0442\\u0430 \\u0432\\u044B\\u0434\\u0430\\u0447\\u0438:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 34\n            }, this), \" \", formatDate(selectedDocumentForModal.DateIssue)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"kks-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041A\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u0438 \\u041A\\u041A\\u0421:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 34\n            }, this), Array.isArray(selectedDocumentForModal.KKS_Data) && selectedDocumentForModal.KKS_Data.length > 0 ? selectedDocumentForModal.KKS_Data.map(k => k.fullName || k.shortName) // Prefer full name, fallback to short\n            .filter(Boolean) // Remove any null/empty values\n            .join(', ') // Join with comma and space\n            : 'Нет данных', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      // Fallback message if modal opens before data is ready (shouldn't usually happen)\n      _jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 9\n  }, this);\n}\n_s(DocumentAnalysis, \"VXuJh2rNm49qIoJ2MSWr90gKfBg=\", false, function () {\n  return [useNavigate];\n});\n_c = DocumentAnalysis;\nexport default DocumentAnalysis;\nvar _c;\n$RefreshReg$(_c, \"DocumentAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","axios","useNavigate","Modal","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","Fragment","_Fragment","apiUrl","process","env","REACT_APP_API_URL","setAppElement","register","DocumentAnalysis","_s","documents","setDocuments","workers","setWorkers","selectedWorker","setSelectedWorker","loading","setLoading","error","setError","viewMode","setViewMode","isModalOpen","setIsModalOpen","selectedDocumentForModal","setSelectedDocumentForModal","navigate","user","JSON","parse","localStorage","getItem","getWorkerName","role","Array","isArray","worker","find","w","ID_Worker","FName_Worker","fetchData","documentsResponse","get","params","userId","workerId","data","console","Error","log","length","_documentsResponse$da","KKS_Data","workersResponse","err","_err$response","_err$response$data","response","message","handleLogout","removeItem","handleBack","handleWorkerChange","event","workerIdValue","target","value","parseInt","handleViewModeChange","mode","openModal","doc","closeModal","filteredDocuments","filter","prepareYearlyChartData","docs","documentsByYear","reduce","acc","DateIssue","date","Date","isNaN","getTime","year","getFullYear","warn","ID_Document","e","yearsInData","Object","keys","map","Number","sort","a","b","currentYear","minDataYear","Math","min","maxDataYear","max","startYear","endYear","allYears","push","counts","cumulativeCounts","count","index","years","prepareKKSChartData","kksAggregated","kksItems","forEach","item","_item$shortName","_item$fullName","shortName","trim","fullName","sortedShortNames","localeCompare","labels","fullNames","key","yearlyChartResult","kksChartResult","calculateK","K","i","diff","kCoefficient","yearlyData","datasets","label","backgroundColor","borderColor","borderWidth","cumulativeData","kksData","commonOptions","titleText","xAxisText","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","font","size","tooltip","intersect","scales","x","ticks","autoSkip","maxRotation","minRotation","y","beginAtZero","precision","yearlyOptions","cumulativeOptions","kksOptions","baseOpts","callbacks","context","_ref","_context$parsed$y","_kksChartResult$fullN","labelIndex","dataIndex","parsed","dataset","displayLabel","formatDate","dateString","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","justifyContent","marginTop","onClick","htmlFor","id","onChange","disabled","options","ProgramName","OrgSName","OrgFName","regnumber","isOpen","onRequestClose","contentLabel","overlayClassName","ariaHideApp","WorkerName","k","Boolean","join","_c","$RefreshReg$"],"sources":["D:/Amina/VScode/FQW_new/src/components/DocumentAnalysis.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './DocumentAnalysis.css'; // Make sure this CSS file exists and is styled appropriately\n\nconst apiUrl = process.env.REACT_APP_API_URL\n\n// Set the app element for react-modal accessibility\nModal.setAppElement('#root'); // Adjust '#root' if your app's root element has a different ID\n\n// Register Chart.js components\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nfunction DocumentAnalysis() {\n    // State Variables\n    const [documents, setDocuments] = useState([]);\n    const [workers, setWorkers] = useState([]);\n    const [selectedWorker, setSelectedWorker] = useState(null); // Store worker ID\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [viewMode, setViewMode] = useState('analysis'); // 'analysis' or 'documents'\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [selectedDocumentForModal, setSelectedDocumentForModal] = useState(null);\n\n    // Hooks\n    const navigate = useNavigate();\n    const user = JSON.parse(localStorage.getItem('user')); // Assuming user info is stored here\n\n    // --- Helper Function: Get Worker Name (Memoized) ---\n    const getWorkerName = useCallback(() => {\n        // Ensure workers is an array before using find\n        if (user?.role !== 1 || !selectedWorker || !Array.isArray(workers)) return '';\n        const worker = workers.find(w => w.ID_Worker === selectedWorker);\n        return worker ? worker.FName_Worker : `ID ${selectedWorker}`; // Use FName_Worker or adjust as needed\n    }, [user?.role, selectedWorker, workers]); // Dependencies for getWorkerName\n\n    // --- useEffect for Data Fetching ---\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            setError('');\n            try {\n                // Fetch documents based on user ID and role\n                const documentsResponse = await axios.get(`${apiUrl}/api/documents`, {\n                    params: { userId: user.workerId, role: user.role }\n                });\n\n                // Validate documents response\n                if (!Array.isArray(documentsResponse.data)) {\n                    console.error('Documents API did not return an array:', documentsResponse.data);\n                    throw new Error('Неверный формат данных документов');\n                }\n                setDocuments(documentsResponse.data);\n                console.log(\"Frontend: Documents received:\", documentsResponse.data.length);\n                 if (documentsResponse.data.length > 0) {\n                     // Log the structure of KKS_Data for the first doc for verification\n                     console.log(\"Frontend: Sample KKS_Data in first doc:\", documentsResponse.data[0]?.KKS_Data);\n                 }\n\n                // Fetch workers list if the user is an admin (role === 1)\n                if (user.role === 1) {\n                    const workersResponse = await axios.get(`${apiUrl}/api/workers`);\n\n                    // Validate workers response\n                    if (!Array.isArray(workersResponse.data)) {\n                         console.error(\"Workers API did not return an array:\", workersResponse.data);\n                         setWorkers([]); // Set empty array on error\n                    } else {\n                        setWorkers(workersResponse.data);\n                        // Set the initial selected worker ONLY if workers exist and NO worker is currently selected\n                        // This prevents resetting selection if the component re-renders for other reasons\n                        if (workersResponse.data.length > 0 && selectedWorker === null) {\n                            setSelectedWorker(workersResponse.data[0].ID_Worker);\n                        } else if (workersResponse.data.length === 0) {\n                             setSelectedWorker(null); // No workers available\n                        }\n                    }\n                } else {\n                    // Not an admin, clear workers and selection\n                    setWorkers([]);\n                    setSelectedWorker(null);\n                }\n\n            } catch (err) {\n                console.error('Ошибка при загрузке данных:', err);\n                setError(err.response?.data?.error || err.message || 'Не удалось загрузить данные');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (user?.workerId) {\n            fetchData();\n        } else {\n            setError(\"Пользователь не найден. Пожалуйста, войдите снова.\");\n            setLoading(false);\n            // Optional: Redirect to login\n            // navigate('/login');\n        }\n        // Dependency array includes user info and selectedWorker (to potentially refetch if admin changes worker, though filtering handles display)\n        // Note: Adding selectedWorker here caused a re-fetch loop in v1 - be careful. Let's keep it based on user info for initial load.\n        // Re-filtering happens via useMemo when selectedWorker changes.\n    }, [user?.workerId, user?.role]); // Re-run effect if user ID or role changes\n\n\n    // --- Event Handlers ---\n    const handleLogout = () => {\n        localStorage.removeItem('user');\n        navigate('/login');\n    };\n\n    const handleBack = () => {\n        // Navigate back based on user role\n        navigate(user?.role === 1 ? '/admin' : '/user'); // Navigate to admin or user dashboard\n    };\n\n    const handleWorkerChange = (event) => {\n        const workerIdValue = event.target.value;\n        // Parse to integer, handle potential empty string value from a \"--Select--\" option\n        const workerId = workerIdValue ? parseInt(workerIdValue, 10) : null;\n        setSelectedWorker(workerId);\n    };\n\n    const handleViewModeChange = (mode) => {\n        setViewMode(mode);\n    };\n\n    // --- Modal Handlers ---\n    const openModal = (doc) => {\n        console.log(\"Opening modal for doc:\", doc);\n        setSelectedDocumentForModal(doc);\n        setIsModalOpen(true);\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setSelectedDocumentForModal(null); // Clear selected doc when closing\n    };\n\n    // --- Filtered Documents (Memoized) ---\n    const filteredDocuments = useMemo(() => {\n        if (loading || !Array.isArray(documents)) return []; // Return empty if loading or documents not an array\n\n        if (user?.role === 1) {\n            // Admin view: filter by selectedWorker ID\n            return selectedWorker !== null\n                ? documents.filter(doc => doc.ID_Worker === selectedWorker)\n                : []; // Show nothing if admin role but no worker selected yet\n        } else {\n            // Non-admin view: show all documents fetched for them (backend already filtered)\n            return documents;\n        }\n    }, [documents, selectedWorker, user?.role, loading]); // Recalculate when these change\n\n    // --- Chart Data Preparation Functions (Memoized with useCallback) ---\n\n    // 1. Yearly & Cumulative Chart Data\n    const prepareYearlyChartData = useCallback((docs) => {\n        const documentsByYear = docs.reduce((acc, doc) => {\n            try {\n                // Ensure DateIssue exists and is a valid date string\n                if (doc.DateIssue) {\n                    const date = new Date(doc.DateIssue);\n                    if (!isNaN(date.getTime())) { // Check if date is valid\n                        const year = date.getFullYear();\n                        acc[year] = (acc[year] || 0) + 1;\n                    } else {\n                        console.warn(\"Invalid DateIssue format:\", doc.ID_Document, doc.DateIssue);\n                    }\n                } else {\n                    console.warn(\"Missing DateIssue:\", doc.ID_Document);\n                }\n            } catch (e) {\n                console.error(\"Error parsing DateIssue:\", doc.ID_Document, doc.DateIssue, e);\n            }\n            return acc;\n        }, {});\n\n        const yearsInData = Object.keys(documentsByYear).map(Number).sort((a, b) => a - b);\n        const currentYear = new Date().getFullYear();\n\n        const minDataYear = yearsInData.length > 0 ? Math.min(...yearsInData) : currentYear;\n        const maxDataYear = yearsInData.length > 0 ? Math.max(...yearsInData) : currentYear;\n\n        // Determine the range of years for the chart (from earliest data year to at least the current year)\n        const startYear = minDataYear;\n        const endYear = Math.max(maxDataYear, currentYear);\n\n        const allYears = [];\n        // Populate all years in the range\n        if (startYear <= endYear) {\n            for (let year = startYear; year <= endYear; year++) {\n                allYears.push(year);\n            }\n        } else if (docs.length === 0) { // Handle case with no documents - maybe show current year?\n            // Optionally add current year: allYears.push(currentYear);\n        }\n\n        // Map counts for each year in the final range\n        const counts = allYears.map(year => documentsByYear[year] || 0);\n\n        // Calculate cumulative counts\n        const cumulativeCounts = counts.reduce((acc, count, index) => {\n            acc.push(index === 0 ? count : (acc[index - 1] || 0) + count);\n            return acc;\n        }, []);\n\n        return { years: allYears, counts, cumulativeCounts };\n    }, []); // useCallback as the function definition itself doesn't depend on props/state\n\n    // 2. KKS Criteria Chart Data (Processing KKS_Data array)\n    const prepareKKSChartData = useCallback((docs) => {\n        // Aggregate counts per KKS criterion (using shortName as key)\n        const kksAggregated = docs.reduce((acc, doc) => {\n            const kksItems = doc.KKS_Data; // Expecting an array like [{ shortName: '..', fullName: '..' }, ...]\n\n            // Check if kksItems is a valid array\n            if (Array.isArray(kksItems)) {\n                kksItems.forEach(item => {\n                    const shortName = item?.shortName?.trim(); // Use optional chaining and trim\n                    const fullName = item?.fullName?.trim();\n\n                    if (shortName) { // Process only if shortName exists\n                        if (!acc[shortName]) {\n                            // Initialize entry for this shortName if it's the first time seen\n                            acc[shortName] = {\n                                shortName: shortName,\n                                fullName: fullName || shortName, // Use shortName as fallback if fullName is missing\n                                count: 0\n                            };\n                        }\n                        // Increment the count for this KKS criterion\n                        acc[shortName].count += 1;\n                    } else {\n                         console.warn(\"KKS item missing shortName in doc:\", doc.ID_Document, item);\n                    }\n                });\n            } else if (kksItems) {\n                 // Log if KKS_Data exists but isn't an array (should be handled by backend ideally)\n                 console.error(\"KKS_Data is not an array for doc:\", doc.ID_Document, kksItems);\n            }\n            // If KKS_Data is null/undefined or invalid, just skip and continue\n\n            return acc;\n        }, {}); // Initial value is an empty object\n\n        // Sort aggregated data by shortName for consistent chart axis order\n        const sortedShortNames = Object.keys(kksAggregated).sort((a, b) => a.localeCompare(b));\n\n        // Extract data arrays needed for Chart.js\n        const labels = sortedShortNames; // X-axis labels will be the Short Names\n        const fullNames = sortedShortNames.map(key => kksAggregated[key].fullName); // Full Names for tooltips\n        const counts = sortedShortNames.map(key => kksAggregated[key].count); // Bar heights\n\n        console.log(\"Prepared KKS Chart Data:\", { labels, fullNames, counts }); // Log for debugging\n\n        return {\n            labels: labels,       // Short names for axis\n            fullNames: fullNames, // Full names for tooltips\n            counts: counts        // Counts for bar heights\n        };\n    }, []); // useCallback as the function definition is stable\n\n    // --- Memoized Chart Results ---\n    // These recalculate only when filteredDocuments or the prep function changes (which it won't due to useCallback)\n    const yearlyChartResult = useMemo(() => prepareYearlyChartData(filteredDocuments), [filteredDocuments, prepareYearlyChartData]);\n    const kksChartResult = useMemo(() => prepareKKSChartData(filteredDocuments), [filteredDocuments, prepareKKSChartData]);\n\n    // --- Расчет коэффициента K ---\n    const calculateK = useCallback((cumulativeCounts) => {\n        if (!Array.isArray(cumulativeCounts) || cumulativeCounts.length < 2) return 0;\n        \n        let K = 0;\n        for (let i = 1; i < cumulativeCounts.length; i++) {\n            const diff = cumulativeCounts[i] - cumulativeCounts[i-1];\n            if (diff > 0) {\n                K += diff;\n            }\n        }\n        return K;\n    }, []);\n\n    const kCoefficient = useMemo(() => {\n        return calculateK(yearlyChartResult.cumulativeCounts);\n    }, [yearlyChartResult.cumulativeCounts, calculateK]);\n\n    // --- Memoized Chart Data Objects (for react-chartjs-2) ---\n    const yearlyData = useMemo(() => ({\n        labels: yearlyChartResult.years,\n        datasets: [{\n            label: user.role === 1 ? `Документы по годам` : 'Мои документы по годам',\n            data: yearlyChartResult.counts,\n            backgroundColor: 'rgba(54, 162, 235, 0.6)', // Blue\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1,\n        }],\n    }), [yearlyChartResult, user.role, getWorkerName]); // Update when results or worker name changes\n\n    const cumulativeData = useMemo(() => ({\n        labels: yearlyChartResult.years,\n        datasets: [{\n            label: user.role === 1 ? `Документы по годам с приращением` : 'Документы по годам с приращением',\n            data: yearlyChartResult.cumulativeCounts,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)', // Teal\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n        }],\n    }), [yearlyChartResult, user.role, getWorkerName]); // Update when results or worker name changes\n\n    const kksData = useMemo(() => ({\n        labels: kksChartResult.labels, // Use SHORT names for axis labels\n        datasets: [{\n            label: user.role === 1 ? `Документы по критериям ККС` : 'Документы по критериям ККС',\n            data: kksChartResult.counts,\n            backgroundColor: 'rgba(255, 159, 64, 0.6)', // Orange\n            borderColor: 'rgba(255, 159, 64, 1)',\n            borderWidth: 1,\n        }],\n    }), [kksChartResult, user.role, getWorkerName]); // Update when KKS results or worker name changes\n\n    // --- Chart Options (Memoized) ---\n\n    // Generator for common options\n     const commonOptions = useMemo(() => (titleText, xAxisText) => ({\n         responsive: true,\n         maintainAspectRatio: false, // Allow chart to fill container height\n         plugins: {\n             legend: {\n                 position: 'top', // Position legend at the top\n             },\n             title: {\n                 display: true,\n                 text: titleText, // Dynamic title\n                 font: { size: 16 }, // Set title font size\n             },\n             tooltip: { // Base tooltip configuration\n                 mode: 'index', // Show tooltips for all datasets at that index\n                 intersect: false, // Tooltip appears even if not directly hovering over the bar\n             }\n         },\n         scales: {\n             x: { // X-axis configuration\n                 title: {\n                     display: true,\n                     text: xAxisText, // Dynamic X-axis label\n                 },\n                 ticks: {\n                     autoSkip: true, // Automatically skip labels if they overlap\n                     maxRotation: 45, // Max rotation for labels\n                     minRotation: 0 // Min rotation\n                 }\n             },\n             y: { // Y-axis configuration\n                 beginAtZero: true, // Start Y-axis at 0\n                 title: {\n                     display: true,\n                     text: 'Количество документов', // Y-axis label\n                 },\n                 ticks: {\n                      // Ensure integer ticks for document counts\n                     precision: 0\n                 }\n             },\n         },\n     }), []); // No dependencies for the function generator itself\n\n    // Specific options for each chart using the common generator\n    const yearlyOptions = useMemo(() => commonOptions(\n        user.role === 1 ? `Количество документов по годам (${getWorkerName() || 'Выбор...'})` : 'Мои документы по годам',\n        'Год' // X-axis title\n    ), [commonOptions, user.role, getWorkerName]);\n\n    const cumulativeOptions = useMemo(() => commonOptions(\n        user.role === 1 ? `Документы по годам с приращением (${getWorkerName() || 'Выбор...'})` : 'Документы по годам с приращением',\n        'Год' // X-axis title\n    ), [commonOptions, user.role, getWorkerName]);\n\n    // KKS Options with custom tooltip callback\n    const kksOptions = useMemo(() => {\n        const title = user.role === 1\n            ? `Распределение по критериям ККС (${getWorkerName() || 'Выбор...'})`\n            : 'Мое распределение по критериям ККС';\n        const baseOpts = commonOptions(title, 'Критерий ККС'); // X-axis title notes abbreviation\n\n        // Customize tooltips specifically for the KKS chart to show full names\n        baseOpts.plugins.tooltip = {\n            ...baseOpts.plugins.tooltip, // Keep existing base settings (mode, intersect)\n            callbacks: {\n                label: function(context) { // Use 'function' to access 'this' if needed, or arrow function\n                    try {\n                        const labelIndex = context.dataIndex; // Index of the data point\n                        const count = context.parsed.y ?? context.dataset.data[labelIndex] ?? 0; // Get count safely\n\n                        // Access the fullNames array prepared earlier (available via closure)\n                        // kksChartResult.fullNames should be available in this scope\n                        const fullName = kksChartResult.fullNames?.[labelIndex]; // Use optional chaining\n\n                        // Use the full name if available, otherwise fallback to the axis label (short name)\n                        const displayLabel = fullName || context.label || ''; // context.label is the short name\n\n                        return `${displayLabel}: ${count}`; // Tooltip format: \"Full Name (or Short Name): Count\"\n                    } catch (e) {\n                        console.error(\"Error in KKS tooltip callback:\", e);\n                        // Provide a fallback tooltip text in case of an error\n                        return `${context.label || 'Ошибка'}: ${context.parsed.y || 0}`;\n                    }\n                }\n            }\n        };\n\n        return baseOpts;\n\n    }, [commonOptions, user.role, getWorkerName, kksChartResult.fullNames]); // Dependency on fullNames is crucial for the tooltip\n\n\n    // --- Helper Function: Format Date (Memoized) ---\n     const formatDate = useCallback((dateString) => {\n         if (!dateString) return 'N/A'; // Handle null or empty date strings\n         try {\n             const date = new Date(dateString);\n             // Check if the date object is valid\n             return isNaN(date.getTime()) ? 'Неверная дата' : date.toLocaleDateString('ru-RU'); // Use Russian locale for DD.MM.YYYY\n         } catch (e) {\n             console.error(\"Error formatting date:\", dateString, e);\n             return 'Ошибка даты'; // Return error string if parsing fails\n         }\n     }, []); // No dependencies needed\n\n\n    // --- Rendering Logic ---\n\n    // Loading State\n    if (loading) return <div className=\"loading\">Загрузка данных...</div>;\n\n    // Error State\n    if (error) return (\n        <div className=\"error-container\">\n            <div className=\"error\">{error}</div>\n            {/* Provide buttons even on error */}\n             <div className=\"header-buttons\" style={{ justifyContent: 'center', marginTop: '20px' }}>\n                 <button onClick={handleBack} className=\"back-button\">Назад</button>\n                  {/* Optionally show logout even on error */}\n                 {/* <button onClick={handleLogout} className=\"logout-button\">Выйти</button> */}\n             </div>\n        </div>\n    );\n\n    // Main Content Render\n    return (\n        <div className=\"analysis-container\">\n            {/* Header Section */}\n            <div className=\"analysis-header\">\n                <h1>Анализ документов</h1>\n                <div className=\"header-buttons\">\n                    <button onClick={handleBack} className=\"back-button\">Назад</button>\n                    <button onClick={handleLogout} className=\"logout-button\">Выйти</button>\n                </div>\n            </div>\n\n            {/* Controls Section (Admin only) */}\n            {user?.role === 1 && (\n                <div className=\"controls-container\">\n                    {/* Worker Selector Dropdown */}\n                     {workers.length > 0 ? (\n                         <div className=\"worker-selector\">\n                             <label htmlFor=\"worker-select\">Работник:</label>\n                             <select\n                                 id=\"worker-select\"\n                                 value={selectedWorker ?? ''} // Controlled component value, handle null state\n                                 onChange={handleWorkerChange}\n                                 className=\"worker-select\"\n                                 disabled={loading} // Disable while loading (though loading screen handles this mostly)\n                             >\n                                  {/* Optional: Default unselectable option */}\n                                 {/* <option value=\"\" disabled>-- Выберите работника --</option> */}\n                                 {workers.map(worker => (\n                                     <option key={worker.ID_Worker} value={worker.ID_Worker}>\n                                         {/* Display worker name - ensure FName_Worker or similar exists */}\n                                         {worker.FName_Worker || `ID: ${worker.ID_Worker}`}\n                                     </option>\n                                 ))}\n                             </select>\n                         </div>\n                     ) : (\n                          // Message if workers list couldn't be loaded or is empty\n                         <p className=\"no-workers-message\">Список работников не загружен или пуст.</p>\n                     )}\n\n                    {/* View Mode Toggle Buttons (Show only if a worker is selected) */}\n                    {selectedWorker !== null && (\n                        <div className=\"view-mode-buttons\">\n                            <button\n                                className={`view-mode-button ${viewMode === 'analysis' ? 'active' : ''}`}\n                                onClick={() => handleViewModeChange('analysis')}\n                                aria-pressed={viewMode === 'analysis'} // Accessibility\n                            >\n                                Анализ (Графики)\n                            </button>\n                            <button\n                                className={`view-mode-button ${viewMode === 'documents' ? 'active' : ''}`}\n                                onClick={() => handleViewModeChange('documents')}\n                                aria-pressed={viewMode === 'documents'} // Accessibility\n                            >\n                                Документы (Список)\n                            </button>\n                        </div>\n                    )}\n                     {selectedWorker === null && workers.length > 0 && (\n                          <p className=\"select-worker-prompt\">Выберите работника для просмотра данных.</p>\n                     )}\n                </div>\n            )}\n\n            {/* Content Area: Charts or Table */}\n            <div className=\"content-area\">\n                {viewMode === 'analysis' ? (\n                    // --- Analysis View (Charts) ---\n                    <div className=\"charts-grid\">\n                        {/* Коэффициент K */}\n                        <div className=\"k-coefficient-container\">\n                            <h3>Коэффициент динамики ККС</h3>\n                            <div className=\"k-value\">{kCoefficient}</div>\n                            <div className=\"k-description\">\n                                Коэффициент K показывает сумму приращений количества ДОК, полученных к каждому году в периоде оценки.\n                                Чем выше значение K, тем более прогрессивным является рост квалификации работника.\n                            </div>\n                        </div>\n\n                        {/* Conditional Rendering based on whether there are documents to display */}\n                         {(user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? (\n                             <>\n                                 {/* Yearly Chart */}\n                                 <div className=\"chart-wrapper\">\n                                      {yearlyChartResult.years.length > 0 ? (\n                                          <Bar options={yearlyOptions} data={yearlyData} />\n                                      ) : (\n                                          <p className=\"no-data-message\">Нет данных по годам.</p>\n                                      )}\n                                 </div>\n                                 {/* Cumulative Chart */}\n                                 <div className=\"chart-wrapper\">\n                                      {yearlyChartResult.years.length > 0 ? (\n                                          <Bar options={cumulativeOptions} data={cumulativeData} />\n                                      ) : (\n                                            <p className=\"no-data-message\">Нет данных по годам.</p> // Redundant but harmless\n                                      )}\n                                 </div>\n                                 {/* KKS Chart (Takes full width potentially on smaller screens, adjust CSS needed) */}\n                                 <div className=\"chart-wrapper kks-chart-wrapper\">\n                                     {/* Check if there are KKS labels to display */}\n                                      {kksChartResult.labels.length > 0 ? (\n                                          <Bar options={kksOptions} data={kksData} />\n                                      ) : (\n                                          <p className=\"no-data-message\">Нет данных по критериям ККС для отображения.</p>\n                                      )}\n                                 </div>\n                             </>\n                         ) : (\n                             // Message when no documents are available for the current view/filter\n                             <div className=\"no-data-message full-width-message\">\n                                 {user.role === 1 ?\n                                     (selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра анализа.\" : `Нет документов для анализа у выбранного работника (${getWorkerName()}).`) :\n                                     \"У вас пока нет загруженных документов для анализа.\"\n                                 }\n                             </div>\n                         )}\n                    </div>\n                ) : (\n                    // --- Documents View (Table) ---\n                     <div className=\"documents-list\">\n                         {/* Conditional Rendering for the table */}\n                          {(user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? (\n                              <table className=\"documents-table\">\n                                  <thead>\n                                      <tr>\n                                          {/* Show Worker column only for Admin */}\n                                          <th>Программа обучения</th>\n                                          <th>Организация (Кратко)</th>\n                                          <th>Рег. номер</th>\n                                          <th>Дата выдачи</th>\n                                          <th>Действия</th>\n                                      </tr>\n                                  </thead>\n                                  <tbody>\n                                      {filteredDocuments.map((doc) => (\n                                          <tr key={doc.ID_Document}>\n                                              {/* Worker Name cell (Admin only) */}\n                                              \n                                              {/* Document Details cells */}\n                                              <td>{doc.ProgramName || 'N/A'}</td>\n                                              <td>{doc.OrgSName || doc.OrgFName || 'N/A'}</td> {/* Display Short name, fallback to Full */}\n                                              <td>{doc.regnumber || 'N/A'}</td>\n                                              <td>{formatDate(doc.DateIssue)}</td> {/* Use formatted date */}\n                                              <td>\n                                                  {/* Button to open the modal */}\n                                                  <button\n                                                      className=\"details-button\"\n                                                      onClick={() => openModal(doc)} // Pass the whole document object\n                                                  >\n                                                      Дополнительно\n                                                  </button>\n                                              </td>\n                                          </tr>\n                                      ))}\n                                  </tbody>\n                              </table>\n                          ) : (\n                              // Message when no documents are available for the table view\n                              <div className=\"no-data-message full-width-message\">\n                                  {user.role === 1 ?\n                                      (selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра списка документов.\" : `Нет документов для отображения у выбранного работника (${getWorkerName()}).`) :\n                                      \"У вас пока нет загруженных документов.\"\n                                  }\n                              </div>\n                          )}\n                     </div>\n                )}\n            </div>\n\n            {/* Modal Definition */}\n            <Modal\n                isOpen={isModalOpen}\n                onRequestClose={closeModal}\n                contentLabel=\"Детали документа\" // Accessibility label\n                className=\"modal-content\" // Class for styling the modal content\n                overlayClassName=\"modal-overlay\" // Class for styling the background overlay\n                ariaHideApp={true} // Helps with screen readers\n            >\n                {/* Content inside the modal */}\n                {selectedDocumentForModal ? (\n                    <>\n                        {/* Modal Header */}\n                        <h2>Детали документа № {selectedDocumentForModal.regnumber || selectedDocumentForModal.ID_Document}</h2>\n                        <button onClick={closeModal} className=\"modal-close-button\" aria-label=\"Закрыть\">&times;</button>\n\n                        {/* Modal Body with Details */}\n                        <div className=\"modal-details-grid\">\n                             {/* Display various document details */}\n                              <p><strong>Работник:</strong> {selectedDocumentForModal.WorkerName || getWorkerName() || 'N/A'}</p>\n                              <p><strong>Программа обучения:</strong> {selectedDocumentForModal.ProgramName || 'N/A'}</p>\n                              <p><strong>Организация (полное):</strong> {selectedDocumentForModal.OrgFName || 'N/A'}</p>\n                              <p><strong>Организация (краткое):</strong> {selectedDocumentForModal.OrgSName || 'N/A'}</p>\n                              <p><strong>Регистрационный номер:</strong> {selectedDocumentForModal.regnumber || 'N/A'}</p>\n                              <p><strong>Дата выдачи:</strong> {formatDate(selectedDocumentForModal.DateIssue)}</p>\n                              {/* Add any other relevant fields from your 'doc' object */}\n\n                              {/* Display KKS Criteria */}\n                             <p className=\"kks-details\">\n                                 <strong>Критерии ККС:</strong>\n                                 {/* Check if KKS_Data is an array and has items */}\n                                  {Array.isArray(selectedDocumentForModal.KKS_Data) && selectedDocumentForModal.KKS_Data.length > 0\n                                      ? selectedDocumentForModal.KKS_Data\n                                            .map(k => k.fullName || k.shortName) // Prefer full name, fallback to short\n                                            .filter(Boolean) // Remove any null/empty values\n                                            .join(', ') // Join with comma and space\n                                      : 'Нет данных'} {/* Message if no KKS data or not an array */}\n                             </p>\n                        </div>\n                    </>\n                ) : (\n                     // Fallback message if modal opens before data is ready (shouldn't usually happen)\n                    <p>Загрузка деталей...</p>\n                )}\n            </Modal>\n        </div>\n    );\n}\n\nexport default DocumentAnalysis;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AACxE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,aAAa;AAC/B,SACIC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;;AAE5C;AACAjB,KAAK,CAACkB,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;;AAE9B;AACAhB,OAAO,CAACiB,QAAQ,CACZhB,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MACJ,CAAC;AAED,SAASY,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EACtD,MAAM,CAACwC,WAAW,EAAEC,cAAc,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0C,wBAAwB,EAAEC,2BAA2B,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;;EAE9E;EACA,MAAM4C,QAAQ,GAAGvC,WAAW,CAAC,CAAC;EAC9B,MAAMwC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMC,aAAa,GAAG/C,WAAW,CAAC,MAAM;IACpC;IACA,IAAI,CAAA0C,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,IAAI,MAAK,CAAC,IAAI,CAACnB,cAAc,IAAI,CAACoB,KAAK,CAACC,OAAO,CAACvB,OAAO,CAAC,EAAE,OAAO,EAAE;IAC7E,MAAMwB,MAAM,GAAGxB,OAAO,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAKzB,cAAc,CAAC;IAChE,OAAOsB,MAAM,GAAGA,MAAM,CAACI,YAAY,GAAG,MAAM1B,cAAc,EAAE,CAAC,CAAC;EAClE,CAAC,EAAE,CAACa,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,IAAI,EAAEnB,cAAc,EAAEF,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE3C;EACA7B,SAAS,CAAC,MAAM;IACZ,MAAM0D,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BxB,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;MACZ,IAAI;QACA;QACA,MAAMuB,iBAAiB,GAAG,MAAMxD,KAAK,CAACyD,GAAG,CAAC,GAAGzC,MAAM,gBAAgB,EAAE;UACjE0C,MAAM,EAAE;YAAEC,MAAM,EAAElB,IAAI,CAACmB,QAAQ;YAAEb,IAAI,EAAEN,IAAI,CAACM;UAAK;QACrD,CAAC,CAAC;;QAEF;QACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACO,iBAAiB,CAACK,IAAI,CAAC,EAAE;UACxCC,OAAO,CAAC9B,KAAK,CAAC,wCAAwC,EAAEwB,iBAAiB,CAACK,IAAI,CAAC;UAC/E,MAAM,IAAIE,KAAK,CAAC,mCAAmC,CAAC;QACxD;QACAtC,YAAY,CAAC+B,iBAAiB,CAACK,IAAI,CAAC;QACpCC,OAAO,CAACE,GAAG,CAAC,+BAA+B,EAAER,iBAAiB,CAACK,IAAI,CAACI,MAAM,CAAC;QAC1E,IAAIT,iBAAiB,CAACK,IAAI,CAACI,MAAM,GAAG,CAAC,EAAE;UAAA,IAAAC,qBAAA;UACnC;UACAJ,OAAO,CAACE,GAAG,CAAC,yCAAyC,GAAAE,qBAAA,GAAEV,iBAAiB,CAACK,IAAI,CAAC,CAAC,CAAC,cAAAK,qBAAA,uBAAzBA,qBAAA,CAA2BC,QAAQ,CAAC;QAC/F;;QAED;QACA,IAAI1B,IAAI,CAACM,IAAI,KAAK,CAAC,EAAE;UACjB,MAAMqB,eAAe,GAAG,MAAMpE,KAAK,CAACyD,GAAG,CAAC,GAAGzC,MAAM,cAAc,CAAC;;UAEhE;UACA,IAAI,CAACgC,KAAK,CAACC,OAAO,CAACmB,eAAe,CAACP,IAAI,CAAC,EAAE;YACrCC,OAAO,CAAC9B,KAAK,CAAC,sCAAsC,EAAEoC,eAAe,CAACP,IAAI,CAAC;YAC3ElC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;UACrB,CAAC,MAAM;YACHA,UAAU,CAACyC,eAAe,CAACP,IAAI,CAAC;YAChC;YACA;YACA,IAAIO,eAAe,CAACP,IAAI,CAACI,MAAM,GAAG,CAAC,IAAIrC,cAAc,KAAK,IAAI,EAAE;cAC5DC,iBAAiB,CAACuC,eAAe,CAACP,IAAI,CAAC,CAAC,CAAC,CAACR,SAAS,CAAC;YACxD,CAAC,MAAM,IAAIe,eAAe,CAACP,IAAI,CAACI,MAAM,KAAK,CAAC,EAAE;cACzCpC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;YAC9B;UACJ;QACJ,CAAC,MAAM;UACH;UACAF,UAAU,CAAC,EAAE,CAAC;UACdE,iBAAiB,CAAC,IAAI,CAAC;QAC3B;MAEJ,CAAC,CAAC,OAAOwC,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACVT,OAAO,CAAC9B,KAAK,CAAC,6BAA6B,EAAEqC,GAAG,CAAC;QACjDpC,QAAQ,CAAC,EAAAqC,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcT,IAAI,cAAAU,kBAAA,uBAAlBA,kBAAA,CAAoBvC,KAAK,KAAIqC,GAAG,CAACI,OAAO,IAAI,6BAA6B,CAAC;MACvF,CAAC,SAAS;QACN1C,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAED,IAAIU,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEmB,QAAQ,EAAE;MAChBL,SAAS,CAAC,CAAC;IACf,CAAC,MAAM;MACHtB,QAAQ,CAAC,oDAAoD,CAAC;MAC9DF,UAAU,CAAC,KAAK,CAAC;MACjB;MACA;IACJ;IACA;IACA;IACA;EACJ,CAAC,EAAE,CAACU,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB,QAAQ,EAAEnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,IAAI,CAAC,CAAC,CAAC,CAAC;;EAGlC;EACA,MAAM2B,YAAY,GAAGA,CAAA,KAAM;IACvB9B,YAAY,CAAC+B,UAAU,CAAC,MAAM,CAAC;IAC/BnC,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,MAAMoC,UAAU,GAAGA,CAAA,KAAM;IACrB;IACApC,QAAQ,CAAC,CAAAC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,IAAI,MAAK,CAAC,GAAG,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,MAAM8B,kBAAkB,GAAIC,KAAK,IAAK;IAClC,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACxC;IACA,MAAMrB,QAAQ,GAAGmB,aAAa,GAAGG,QAAQ,CAACH,aAAa,EAAE,EAAE,CAAC,GAAG,IAAI;IACnElD,iBAAiB,CAAC+B,QAAQ,CAAC;EAC/B,CAAC;EAED,MAAMuB,oBAAoB,GAAIC,IAAI,IAAK;IACnCjD,WAAW,CAACiD,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAIC,GAAG,IAAK;IACvBxB,OAAO,CAACE,GAAG,CAAC,wBAAwB,EAAEsB,GAAG,CAAC;IAC1C/C,2BAA2B,CAAC+C,GAAG,CAAC;IAChCjD,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMkD,UAAU,GAAGA,CAAA,KAAM;IACrBlD,cAAc,CAAC,KAAK,CAAC;IACrBE,2BAA2B,CAAC,IAAI,CAAC,CAAC,CAAC;EACvC,CAAC;;EAED;EACA,MAAMiD,iBAAiB,GAAG1F,OAAO,CAAC,MAAM;IACpC,IAAIgC,OAAO,IAAI,CAACkB,KAAK,CAACC,OAAO,CAACzB,SAAS,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;;IAErD,IAAI,CAAAiB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,IAAI,MAAK,CAAC,EAAE;MAClB;MACA,OAAOnB,cAAc,KAAK,IAAI,GACxBJ,SAAS,CAACiE,MAAM,CAACH,GAAG,IAAIA,GAAG,CAACjC,SAAS,KAAKzB,cAAc,CAAC,GACzD,EAAE,CAAC,CAAC;IACd,CAAC,MAAM;MACH;MACA,OAAOJ,SAAS;IACpB;EACJ,CAAC,EAAE,CAACA,SAAS,EAAEI,cAAc,EAAEa,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,IAAI,EAAEjB,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEtD;;EAEA;EACA,MAAM4D,sBAAsB,GAAG3F,WAAW,CAAE4F,IAAI,IAAK;IACjD,MAAMC,eAAe,GAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAER,GAAG,KAAK;MAC9C,IAAI;QACA;QACA,IAAIA,GAAG,CAACS,SAAS,EAAE;UACf,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACX,GAAG,CAACS,SAAS,CAAC;UACpC,IAAI,CAACG,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE;YAAE;YAC1B,MAAMC,IAAI,GAAGJ,IAAI,CAACK,WAAW,CAAC,CAAC;YAC/BP,GAAG,CAACM,IAAI,CAAC,GAAG,CAACN,GAAG,CAACM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;UACpC,CAAC,MAAM;YACHtC,OAAO,CAACwC,IAAI,CAAC,2BAA2B,EAAEhB,GAAG,CAACiB,WAAW,EAAEjB,GAAG,CAACS,SAAS,CAAC;UAC7E;QACJ,CAAC,MAAM;UACHjC,OAAO,CAACwC,IAAI,CAAC,oBAAoB,EAAEhB,GAAG,CAACiB,WAAW,CAAC;QACvD;MACJ,CAAC,CAAC,OAAOC,CAAC,EAAE;QACR1C,OAAO,CAAC9B,KAAK,CAAC,0BAA0B,EAAEsD,GAAG,CAACiB,WAAW,EAAEjB,GAAG,CAACS,SAAS,EAAES,CAAC,CAAC;MAChF;MACA,OAAOV,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,MAAMW,WAAW,GAAGC,MAAM,CAACC,IAAI,CAACf,eAAe,CAAC,CAACgB,GAAG,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;IAClF,MAAMC,WAAW,GAAG,IAAIhB,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;IAE5C,MAAMa,WAAW,GAAGT,WAAW,CAACxC,MAAM,GAAG,CAAC,GAAGkD,IAAI,CAACC,GAAG,CAAC,GAAGX,WAAW,CAAC,GAAGQ,WAAW;IACnF,MAAMI,WAAW,GAAGZ,WAAW,CAACxC,MAAM,GAAG,CAAC,GAAGkD,IAAI,CAACG,GAAG,CAAC,GAAGb,WAAW,CAAC,GAAGQ,WAAW;;IAEnF;IACA,MAAMM,SAAS,GAAGL,WAAW;IAC7B,MAAMM,OAAO,GAAGL,IAAI,CAACG,GAAG,CAACD,WAAW,EAAEJ,WAAW,CAAC;IAElD,MAAMQ,QAAQ,GAAG,EAAE;IACnB;IACA,IAAIF,SAAS,IAAIC,OAAO,EAAE;MACtB,KAAK,IAAIpB,IAAI,GAAGmB,SAAS,EAAEnB,IAAI,IAAIoB,OAAO,EAAEpB,IAAI,EAAE,EAAE;QAChDqB,QAAQ,CAACC,IAAI,CAACtB,IAAI,CAAC;MACvB;IACJ,CAAC,MAAM,IAAIT,IAAI,CAAC1B,MAAM,KAAK,CAAC,EAAE,CAAE;MAC5B;IAAA;;IAGJ;IACA,MAAM0D,MAAM,GAAGF,QAAQ,CAACb,GAAG,CAACR,IAAI,IAAIR,eAAe,CAACQ,IAAI,CAAC,IAAI,CAAC,CAAC;;IAE/D;IACA,MAAMwB,gBAAgB,GAAGD,MAAM,CAAC9B,MAAM,CAAC,CAACC,GAAG,EAAE+B,KAAK,EAAEC,KAAK,KAAK;MAC1DhC,GAAG,CAAC4B,IAAI,CAACI,KAAK,KAAK,CAAC,GAAGD,KAAK,GAAG,CAAC/B,GAAG,CAACgC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,IAAID,KAAK,CAAC;MAC7D,OAAO/B,GAAG;IACd,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO;MAAEiC,KAAK,EAAEN,QAAQ;MAAEE,MAAM;MAAEC;IAAiB,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMI,mBAAmB,GAAGjI,WAAW,CAAE4F,IAAI,IAAK;IAC9C;IACA,MAAMsC,aAAa,GAAGtC,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,EAAER,GAAG,KAAK;MAC5C,MAAM4C,QAAQ,GAAG5C,GAAG,CAACnB,QAAQ,CAAC,CAAC;;MAE/B;MACA,IAAInB,KAAK,CAACC,OAAO,CAACiF,QAAQ,CAAC,EAAE;QACzBA,QAAQ,CAACC,OAAO,CAACC,IAAI,IAAI;UAAA,IAAAC,eAAA,EAAAC,cAAA;UACrB,MAAMC,SAAS,GAAGH,IAAI,aAAJA,IAAI,wBAAAC,eAAA,GAAJD,IAAI,CAAEG,SAAS,cAAAF,eAAA,uBAAfA,eAAA,CAAiBG,IAAI,CAAC,CAAC,CAAC,CAAC;UAC3C,MAAMC,QAAQ,GAAGL,IAAI,aAAJA,IAAI,wBAAAE,cAAA,GAAJF,IAAI,CAAEK,QAAQ,cAAAH,cAAA,uBAAdA,cAAA,CAAgBE,IAAI,CAAC,CAAC;UAEvC,IAAID,SAAS,EAAE;YAAE;YACb,IAAI,CAACzC,GAAG,CAACyC,SAAS,CAAC,EAAE;cACjB;cACAzC,GAAG,CAACyC,SAAS,CAAC,GAAG;gBACbA,SAAS,EAAEA,SAAS;gBACpBE,QAAQ,EAAEA,QAAQ,IAAIF,SAAS;gBAAE;gBACjCV,KAAK,EAAE;cACX,CAAC;YACL;YACA;YACA/B,GAAG,CAACyC,SAAS,CAAC,CAACV,KAAK,IAAI,CAAC;UAC7B,CAAC,MAAM;YACF/D,OAAO,CAACwC,IAAI,CAAC,oCAAoC,EAAEhB,GAAG,CAACiB,WAAW,EAAE6B,IAAI,CAAC;UAC9E;QACJ,CAAC,CAAC;MACN,CAAC,MAAM,IAAIF,QAAQ,EAAE;QAChB;QACApE,OAAO,CAAC9B,KAAK,CAAC,mCAAmC,EAAEsD,GAAG,CAACiB,WAAW,EAAE2B,QAAQ,CAAC;MAClF;MACA;;MAEA,OAAOpC,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;IAER;IACA,MAAM4C,gBAAgB,GAAGhC,MAAM,CAACC,IAAI,CAACsB,aAAa,CAAC,CAACnB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC4B,aAAa,CAAC3B,CAAC,CAAC,CAAC;;IAEtF;IACA,MAAM4B,MAAM,GAAGF,gBAAgB,CAAC,CAAC;IACjC,MAAMG,SAAS,GAAGH,gBAAgB,CAAC9B,GAAG,CAACkC,GAAG,IAAIb,aAAa,CAACa,GAAG,CAAC,CAACL,QAAQ,CAAC,CAAC,CAAC;IAC5E,MAAMd,MAAM,GAAGe,gBAAgB,CAAC9B,GAAG,CAACkC,GAAG,IAAIb,aAAa,CAACa,GAAG,CAAC,CAACjB,KAAK,CAAC,CAAC,CAAC;;IAEtE/D,OAAO,CAACE,GAAG,CAAC,0BAA0B,EAAE;MAAE4E,MAAM;MAAEC,SAAS;MAAElB;IAAO,CAAC,CAAC,CAAC,CAAC;;IAExE,OAAO;MACHiB,MAAM,EAAEA,MAAM;MAAQ;MACtBC,SAAS,EAAEA,SAAS;MAAE;MACtBlB,MAAM,EAAEA,MAAM,CAAQ;IAC1B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA;EACA,MAAMoB,iBAAiB,GAAGjJ,OAAO,CAAC,MAAM4F,sBAAsB,CAACF,iBAAiB,CAAC,EAAE,CAACA,iBAAiB,EAAEE,sBAAsB,CAAC,CAAC;EAC/H,MAAMsD,cAAc,GAAGlJ,OAAO,CAAC,MAAMkI,mBAAmB,CAACxC,iBAAiB,CAAC,EAAE,CAACA,iBAAiB,EAAEwC,mBAAmB,CAAC,CAAC;;EAEtH;EACA,MAAMiB,UAAU,GAAGlJ,WAAW,CAAE6H,gBAAgB,IAAK;IACjD,IAAI,CAAC5E,KAAK,CAACC,OAAO,CAAC2E,gBAAgB,CAAC,IAAIA,gBAAgB,CAAC3D,MAAM,GAAG,CAAC,EAAE,OAAO,CAAC;IAE7E,IAAIiF,CAAC,GAAG,CAAC;IACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,gBAAgB,CAAC3D,MAAM,EAAEkF,CAAC,EAAE,EAAE;MAC9C,MAAMC,IAAI,GAAGxB,gBAAgB,CAACuB,CAAC,CAAC,GAAGvB,gBAAgB,CAACuB,CAAC,GAAC,CAAC,CAAC;MACxD,IAAIC,IAAI,GAAG,CAAC,EAAE;QACVF,CAAC,IAAIE,IAAI;MACb;IACJ;IACA,OAAOF,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGvJ,OAAO,CAAC,MAAM;IAC/B,OAAOmJ,UAAU,CAACF,iBAAiB,CAACnB,gBAAgB,CAAC;EACzD,CAAC,EAAE,CAACmB,iBAAiB,CAACnB,gBAAgB,EAAEqB,UAAU,CAAC,CAAC;;EAEpD;EACA,MAAMK,UAAU,GAAGxJ,OAAO,CAAC,OAAO;IAC9B8I,MAAM,EAAEG,iBAAiB,CAAChB,KAAK;IAC/BwB,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE/G,IAAI,CAACM,IAAI,KAAK,CAAC,GAAG,oBAAoB,GAAG,wBAAwB;MACxEc,IAAI,EAAEkF,iBAAiB,CAACpB,MAAM;MAC9B8B,eAAe,EAAE,yBAAyB;MAAE;MAC5CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC,CAAC,EAAE,CAACZ,iBAAiB,EAAEtG,IAAI,CAACM,IAAI,EAAED,aAAa,CAAC,CAAC,CAAC,CAAC;;EAEpD,MAAM8G,cAAc,GAAG9J,OAAO,CAAC,OAAO;IAClC8I,MAAM,EAAEG,iBAAiB,CAAChB,KAAK;IAC/BwB,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE/G,IAAI,CAACM,IAAI,KAAK,CAAC,GAAG,kCAAkC,GAAG,kCAAkC;MAChGc,IAAI,EAAEkF,iBAAiB,CAACnB,gBAAgB;MACxC6B,eAAe,EAAE,yBAAyB;MAAE;MAC5CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC,CAAC,EAAE,CAACZ,iBAAiB,EAAEtG,IAAI,CAACM,IAAI,EAAED,aAAa,CAAC,CAAC,CAAC,CAAC;;EAEpD,MAAM+G,OAAO,GAAG/J,OAAO,CAAC,OAAO;IAC3B8I,MAAM,EAAEI,cAAc,CAACJ,MAAM;IAAE;IAC/BW,QAAQ,EAAE,CAAC;MACPC,KAAK,EAAE/G,IAAI,CAACM,IAAI,KAAK,CAAC,GAAG,4BAA4B,GAAG,4BAA4B;MACpFc,IAAI,EAAEmF,cAAc,CAACrB,MAAM;MAC3B8B,eAAe,EAAE,yBAAyB;MAAE;MAC5CC,WAAW,EAAE,uBAAuB;MACpCC,WAAW,EAAE;IACjB,CAAC;EACL,CAAC,CAAC,EAAE,CAACX,cAAc,EAAEvG,IAAI,CAACM,IAAI,EAAED,aAAa,CAAC,CAAC,CAAC,CAAC;;EAEjD;;EAEA;EACC,MAAMgH,aAAa,GAAGhK,OAAO,CAAC,MAAM,CAACiK,SAAS,EAAEC,SAAS,MAAM;IAC3DC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAAE;IAC5BC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,QAAQ,EAAE,KAAK,CAAE;MACrB,CAAC;MACDC,KAAK,EAAE;QACHC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAET,SAAS;QAAE;QACjBU,IAAI,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAC,CAAE;MACxB,CAAC;MACDC,OAAO,EAAE;QAAE;QACPvF,IAAI,EAAE,OAAO;QAAE;QACfwF,SAAS,EAAE,KAAK,CAAE;MACtB;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QAAE;QACDR,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAER,SAAS,CAAE;QACrB,CAAC;QACDe,KAAK,EAAE;UACHC,QAAQ,EAAE,IAAI;UAAE;UAChBC,WAAW,EAAE,EAAE;UAAE;UACjBC,WAAW,EAAE,CAAC,CAAC;QACnB;MACJ,CAAC;MACDC,CAAC,EAAE;QAAE;QACDC,WAAW,EAAE,IAAI;QAAE;QACnBd,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE,uBAAuB,CAAE;QACnC,CAAC;QACDO,KAAK,EAAE;UACF;UACDM,SAAS,EAAE;QACf;MACJ;IACJ;EACJ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEV;EACA,MAAMC,aAAa,GAAGxL,OAAO,CAAC,MAAMgK,aAAa,CAC7CrH,IAAI,CAACM,IAAI,KAAK,CAAC,GAAG,mCAAmCD,aAAa,CAAC,CAAC,IAAI,UAAU,GAAG,GAAG,wBAAwB,EAChH,KAAK,CAAC;EACV,CAAC,EAAE,CAACgH,aAAa,EAAErH,IAAI,CAACM,IAAI,EAAED,aAAa,CAAC,CAAC;EAE7C,MAAMyI,iBAAiB,GAAGzL,OAAO,CAAC,MAAMgK,aAAa,CACjDrH,IAAI,CAACM,IAAI,KAAK,CAAC,GAAG,qCAAqCD,aAAa,CAAC,CAAC,IAAI,UAAU,GAAG,GAAG,kCAAkC,EAC5H,KAAK,CAAC;EACV,CAAC,EAAE,CAACgH,aAAa,EAAErH,IAAI,CAACM,IAAI,EAAED,aAAa,CAAC,CAAC;;EAE7C;EACA,MAAM0I,UAAU,GAAG1L,OAAO,CAAC,MAAM;IAC7B,MAAMwK,KAAK,GAAG7H,IAAI,CAACM,IAAI,KAAK,CAAC,GACvB,mCAAmCD,aAAa,CAAC,CAAC,IAAI,UAAU,GAAG,GACnE,oCAAoC;IAC1C,MAAM2I,QAAQ,GAAG3B,aAAa,CAACQ,KAAK,EAAE,cAAc,CAAC,CAAC,CAAC;;IAEvD;IACAmB,QAAQ,CAACtB,OAAO,CAACQ,OAAO,GAAG;MACvB,GAAGc,QAAQ,CAACtB,OAAO,CAACQ,OAAO;MAAE;MAC7Be,SAAS,EAAE;QACPlC,KAAK,EAAE,SAAAA,CAASmC,OAAO,EAAE;UAAE;UACvB,IAAI;YAAA,IAAAC,IAAA,EAAAC,iBAAA,EAAAC,qBAAA;YACA,MAAMC,UAAU,GAAGJ,OAAO,CAACK,SAAS,CAAC,CAAC;YACtC,MAAMnE,KAAK,IAAA+D,IAAA,IAAAC,iBAAA,GAAGF,OAAO,CAACM,MAAM,CAACd,CAAC,cAAAU,iBAAA,cAAAA,iBAAA,GAAIF,OAAO,CAACO,OAAO,CAACrI,IAAI,CAACkI,UAAU,CAAC,cAAAH,IAAA,cAAAA,IAAA,GAAI,CAAC,CAAC,CAAC;;YAEzE;YACA;YACA,MAAMnD,QAAQ,IAAAqD,qBAAA,GAAG9C,cAAc,CAACH,SAAS,cAAAiD,qBAAA,uBAAxBA,qBAAA,CAA2BC,UAAU,CAAC,CAAC,CAAC;;YAEzD;YACA,MAAMI,YAAY,GAAG1D,QAAQ,IAAIkD,OAAO,CAACnC,KAAK,IAAI,EAAE,CAAC,CAAC;;YAEtD,OAAO,GAAG2C,YAAY,KAAKtE,KAAK,EAAE,CAAC,CAAC;UACxC,CAAC,CAAC,OAAOrB,CAAC,EAAE;YACR1C,OAAO,CAAC9B,KAAK,CAAC,gCAAgC,EAAEwE,CAAC,CAAC;YAClD;YACA,OAAO,GAAGmF,OAAO,CAACnC,KAAK,IAAI,QAAQ,KAAKmC,OAAO,CAACM,MAAM,CAACd,CAAC,IAAI,CAAC,EAAE;UACnE;QACJ;MACJ;IACJ,CAAC;IAED,OAAOM,QAAQ;EAEnB,CAAC,EAAE,CAAC3B,aAAa,EAAErH,IAAI,CAACM,IAAI,EAAED,aAAa,EAAEkG,cAAc,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;;EAGzE;EACC,MAAMuD,UAAU,GAAGrM,WAAW,CAAEsM,UAAU,IAAK;IAC3C,IAAI,CAACA,UAAU,EAAE,OAAO,KAAK,CAAC,CAAC;IAC/B,IAAI;MACA,MAAMrG,IAAI,GAAG,IAAIC,IAAI,CAACoG,UAAU,CAAC;MACjC;MACA,OAAOnG,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,GAAG,eAAe,GAAGH,IAAI,CAACsG,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC;IACvF,CAAC,CAAC,OAAO9F,CAAC,EAAE;MACR1C,OAAO,CAAC9B,KAAK,CAAC,wBAAwB,EAAEqK,UAAU,EAAE7F,CAAC,CAAC;MACtD,OAAO,aAAa,CAAC,CAAC;IAC1B;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAGT;;EAEA;EACA,IAAI1E,OAAO,EAAE,oBAAOjB,OAAA;IAAK0L,SAAS,EAAC,SAAS;IAAAC,QAAA,EAAC;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAErE;EACA,IAAI5K,KAAK,EAAE,oBACPnB,OAAA;IAAK0L,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5B3L,OAAA;MAAK0L,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAExK;IAAK;MAAAyK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEnC/L,OAAA;MAAK0L,SAAS,EAAC,gBAAgB;MAACM,KAAK,EAAE;QAAEC,cAAc,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,eACnF3L,OAAA;QAAQmM,OAAO,EAAEpI,UAAW;QAAC2H,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGlE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;;EAGV;EACA,oBACI/L,OAAA;IAAK0L,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAE/B3L,OAAA;MAAK0L,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5B3L,OAAA;QAAA2L,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B/L,OAAA;QAAK0L,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3B3L,OAAA;UAAQmM,OAAO,EAAEpI,UAAW;UAAC2H,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnE/L,OAAA;UAAQmM,OAAO,EAAEtI,YAAa;UAAC6H,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAGL,CAAAnK,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,IAAI,MAAK,CAAC,iBACblC,OAAA;MAAK0L,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAE7B9K,OAAO,CAACuC,MAAM,GAAG,CAAC,gBACfpD,OAAA;QAAK0L,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5B3L,OAAA;UAAOoM,OAAO,EAAC,eAAe;UAAAT,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChD/L,OAAA;UACIqM,EAAE,EAAC,eAAe;UAClBjI,KAAK,EAAErD,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAI,EAAG,CAAC;UAAA;UAC7BuL,QAAQ,EAAEtI,kBAAmB;UAC7B0H,SAAS,EAAC,eAAe;UACzBa,QAAQ,EAAEtL,OAAQ,CAAC;UAAA;UAAA0K,QAAA,EAIlB9K,OAAO,CAACkF,GAAG,CAAC1D,MAAM,iBACfrC,OAAA;YAA+BoE,KAAK,EAAE/B,MAAM,CAACG,SAAU;YAAAmJ,QAAA,EAElDtJ,MAAM,CAACI,YAAY,IAAI,OAAOJ,MAAM,CAACG,SAAS;UAAE,GAFxCH,MAAM,CAACG,SAAS;YAAAoJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGrB,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;MAAA;MAEL;MACD/L,OAAA;QAAG0L,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/E,EAGDhL,cAAc,KAAK,IAAI,iBACpBf,OAAA;QAAK0L,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9B3L,OAAA;UACI0L,SAAS,EAAE,oBAAoBrK,QAAQ,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;UACzE8K,OAAO,EAAEA,CAAA,KAAM7H,oBAAoB,CAAC,UAAU,CAAE;UAChD,gBAAcjD,QAAQ,KAAK,UAAW,CAAC;UAAA;UAAAsK,QAAA,EAC1C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT/L,OAAA;UACI0L,SAAS,EAAE,oBAAoBrK,QAAQ,KAAK,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC1E8K,OAAO,EAAEA,CAAA,KAAM7H,oBAAoB,CAAC,WAAW,CAAE;UACjD,gBAAcjD,QAAQ,KAAK,WAAY,CAAC;UAAA;UAAAsK,QAAA,EAC3C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR,EACChL,cAAc,KAAK,IAAI,IAAIF,OAAO,CAACuC,MAAM,GAAG,CAAC,iBACzCpD,OAAA;QAAG0L,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACnF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAGD/L,OAAA;MAAK0L,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBtK,QAAQ,KAAK,UAAU;MAAA;MACpB;MACArB,OAAA;QAAK0L,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAExB3L,OAAA;UAAK0L,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACpC3L,OAAA;YAAA2L,QAAA,EAAI;UAAwB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjC/L,OAAA;YAAK0L,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAEnD;UAAY;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7C/L,OAAA;YAAK0L,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAG/B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EAGJ,CAACnK,IAAI,CAACM,IAAI,KAAK,CAAC,IAAInB,cAAc,KAAK,IAAI,KAAK4D,iBAAiB,CAACvB,MAAM,GAAG,CAAC,gBACzEpD,OAAA,CAAAE,SAAA;UAAAyL,QAAA,gBAEI3L,OAAA;YAAK0L,SAAS,EAAC,eAAe;YAAAC,QAAA,EACxBzD,iBAAiB,CAAChB,KAAK,CAAC9D,MAAM,GAAG,CAAC,gBAC/BpD,OAAA,CAACF,GAAG;cAAC0M,OAAO,EAAE/B,aAAc;cAACzH,IAAI,EAAEyF;YAAW;cAAAmD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEjD/L,OAAA;cAAG0L,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UACzD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEN/L,OAAA;YAAK0L,SAAS,EAAC,eAAe;YAAAC,QAAA,EACxBzD,iBAAiB,CAAChB,KAAK,CAAC9D,MAAM,GAAG,CAAC,gBAC/BpD,OAAA,CAACF,GAAG;cAAC0M,OAAO,EAAE9B,iBAAkB;cAAC1H,IAAI,EAAE+F;YAAe;cAAA6C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAEvD/L,OAAA;cAAG0L,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,CAAC;UAC7D;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAEN/L,OAAA;YAAK0L,SAAS,EAAC,iCAAiC;YAAAC,QAAA,EAE1CxD,cAAc,CAACJ,MAAM,CAAC3E,MAAM,GAAG,CAAC,gBAC7BpD,OAAA,CAACF,GAAG;cAAC0M,OAAO,EAAE7B,UAAW;cAAC3H,IAAI,EAAEgG;YAAQ;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAE3C/L,OAAA;cAAG0L,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAA4C;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UACjF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA,eACR,CAAC;QAAA;QAEH;QACA/L,OAAA;UAAK0L,SAAS,EAAC,oCAAoC;UAAAC,QAAA,EAC9C/J,IAAI,CAACM,IAAI,KAAK,CAAC,GACXnB,cAAc,KAAK,IAAI,GAAG,uDAAuD,GAAG,sDAAsDkB,aAAa,CAAC,CAAC,IAAI,GAC9J;QAAoD;UAAA2J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEvD,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;MAAA;MAEN;MACC/L,OAAA;QAAK0L,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAEzB,CAAC/J,IAAI,CAACM,IAAI,KAAK,CAAC,IAAInB,cAAc,KAAK,IAAI,KAAK4D,iBAAiB,CAACvB,MAAM,GAAG,CAAC,gBACzEpD,OAAA;UAAO0L,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B3L,OAAA;YAAA2L,QAAA,eACI3L,OAAA;cAAA2L,QAAA,gBAEI3L,OAAA;gBAAA2L,QAAA,EAAI;cAAkB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3B/L,OAAA;gBAAA2L,QAAA,EAAI;cAAoB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC7B/L,OAAA;gBAAA2L,QAAA,EAAI;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnB/L,OAAA;gBAAA2L,QAAA,EAAI;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpB/L,OAAA;gBAAA2L,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACR/L,OAAA;YAAA2L,QAAA,EACKhH,iBAAiB,CAACoB,GAAG,CAAEtB,GAAG,iBACvBzE,OAAA;cAAA2L,QAAA,gBAII3L,OAAA;gBAAA2L,QAAA,EAAKlH,GAAG,CAACgI,WAAW,IAAI;cAAK;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnC/L,OAAA;gBAAA2L,QAAA,EAAKlH,GAAG,CAACiI,QAAQ,IAAIjI,GAAG,CAACkI,QAAQ,IAAI;cAAK;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,KAAC,eACjD/L,OAAA;gBAAA2L,QAAA,EAAKlH,GAAG,CAACmI,SAAS,IAAI;cAAK;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjC/L,OAAA;gBAAA2L,QAAA,EAAKJ,UAAU,CAAC9G,GAAG,CAACS,SAAS;cAAC;gBAAA0G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,KAAC,eACrC/L,OAAA;gBAAA2L,QAAA,eAEI3L,OAAA;kBACI0L,SAAS,EAAC,gBAAgB;kBAC1BS,OAAO,EAAEA,CAAA,KAAM3H,SAAS,CAACC,GAAG,CAAE,CAAC;kBAAA;kBAAAkH,QAAA,EAClC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA,GAhBAtH,GAAG,CAACiB,WAAW;cAAAkG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAiBpB,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;QAAA;QAER;QACA/L,OAAA;UAAK0L,SAAS,EAAC,oCAAoC;UAAAC,QAAA,EAC9C/J,IAAI,CAACM,IAAI,KAAK,CAAC,GACXnB,cAAc,KAAK,IAAI,GAAG,iEAAiE,GAAG,0DAA0DkB,aAAa,CAAC,CAAC,IAAI,GAC5K;QAAwC;UAAA2J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE3C;MACR;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGN/L,OAAA,CAACX,KAAK;MACFwN,MAAM,EAAEtL,WAAY;MACpBuL,cAAc,EAAEpI,UAAW;MAC3BqI,YAAY,EAAC,6FAAkB,CAAC;MAAA;MAChCrB,SAAS,EAAC,eAAe,CAAC;MAAA;MAC1BsB,gBAAgB,EAAC,eAAe,CAAC;MAAA;MACjCC,WAAW,EAAE,IAAK,CAAC;MAAA;MAAAtB,QAAA,EAGlBlK,wBAAwB,gBACrBzB,OAAA,CAAAE,SAAA;QAAAyL,QAAA,gBAEI3L,OAAA;UAAA2L,QAAA,GAAI,qGAAmB,EAAClK,wBAAwB,CAACmL,SAAS,IAAInL,wBAAwB,CAACiE,WAAW;QAAA;UAAAkG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxG/L,OAAA;UAAQmM,OAAO,EAAEzH,UAAW;UAACgH,SAAS,EAAC,oBAAoB;UAAC,cAAW,4CAAS;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAGjG/L,OAAA;UAAK0L,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBAE7B3L,OAAA;YAAA2L,QAAA,gBAAG3L,OAAA;cAAA2L,QAAA,EAAQ;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACtK,wBAAwB,CAACyL,UAAU,IAAIjL,aAAa,CAAC,CAAC,IAAI,KAAK;UAAA;YAAA2J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnG/L,OAAA;YAAA2L,QAAA,gBAAG3L,OAAA;cAAA2L,QAAA,EAAQ;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACtK,wBAAwB,CAACgL,WAAW,IAAI,KAAK;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3F/L,OAAA;YAAA2L,QAAA,gBAAG3L,OAAA;cAAA2L,QAAA,EAAQ;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACtK,wBAAwB,CAACkL,QAAQ,IAAI,KAAK;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1F/L,OAAA;YAAA2L,QAAA,gBAAG3L,OAAA;cAAA2L,QAAA,EAAQ;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACtK,wBAAwB,CAACiL,QAAQ,IAAI,KAAK;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3F/L,OAAA;YAAA2L,QAAA,gBAAG3L,OAAA;cAAA2L,QAAA,EAAQ;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACtK,wBAAwB,CAACmL,SAAS,IAAI,KAAK;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5F/L,OAAA;YAAA2L,QAAA,gBAAG3L,OAAA;cAAA2L,QAAA,EAAQ;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACR,UAAU,CAAC9J,wBAAwB,CAACyD,SAAS,CAAC;UAAA;YAAA0G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAItF/L,OAAA;YAAG0L,SAAS,EAAC,aAAa;YAAAC,QAAA,gBACtB3L,OAAA;cAAA2L,QAAA,EAAQ;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAE5B5J,KAAK,CAACC,OAAO,CAACX,wBAAwB,CAAC6B,QAAQ,CAAC,IAAI7B,wBAAwB,CAAC6B,QAAQ,CAACF,MAAM,GAAG,CAAC,GAC3F3B,wBAAwB,CAAC6B,QAAQ,CAC5ByC,GAAG,CAACoH,CAAC,IAAIA,CAAC,CAACvF,QAAQ,IAAIuF,CAAC,CAACzF,SAAS,CAAC,CAAC;YAAA,CACpC9C,MAAM,CAACwI,OAAO,CAAC,CAAC;YAAA,CAChBC,IAAI,CAAC,IAAI,CAAC,CAAC;YAAA,EAChB,YAAY,EAAC,GAAC;UAAA;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA,eACR,CAAC;MAAA;MAEF;MACD/L,OAAA;QAAA2L,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC5B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACrL,EAAA,CA7oBQD,gBAAgB;EAAA,QAYJrB,WAAW;AAAA;AAAAkO,EAAA,GAZvB7M,gBAAgB;AA+oBzB,eAAeA,gBAAgB;AAAC,IAAA6M,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Amina\\\\VScode\\\\FQW_new\\\\src\\\\components\\\\DocumentAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react'; // Added useCallback\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './DocumentAnalysis.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction DocumentAnalysis() {\n  _s();\n  // ... (state variables: documents, workers, selectedWorker, loading, error, viewMode, modal state)\n\n  const [documents, setDocuments] = useState([]);\n  const [workers, setWorkers] = useState([]);\n  const [selectedWorker, setSelectedWorker] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [viewMode, setViewMode] = useState('analysis');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDocumentForModal, setSelectedDocumentForModal] = useState(null);\n  const navigate = useNavigate();\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  // --- Memoize getWorkerName using useCallback ---\n  const getWorkerName = useCallback(() => {\n    if (user.role !== 1 || !selectedWorker || !Array.isArray(workers)) return '';\n    const worker = workers.find(w => w.ID_Worker === selectedWorker);\n    return worker ? worker.FName_Worker : `ID ${selectedWorker}`;\n  }, [user.role, selectedWorker, workers]); // Dependencies of getWorkerName\n\n  // --- useEffect for Data Fetching ---\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        // Fetch documents\n        const documentsResponse = await axios.get(`http://localhost:5000/api/documents`, {\n          params: {\n            userId: user.id,\n            role: user.role\n          }\n        });\n\n        // Basic validation that response.data is an array\n        if (!Array.isArray(documentsResponse.data)) {\n          console.error('Documents API did not return an array:', documentsResponse.data);\n          throw new Error('Неверный формат данных документов'); // Throw error\n        }\n        setDocuments(documentsResponse.data);\n        console.log(\"Frontend: Documents received:\", documentsResponse.data.length);\n        if (documentsResponse.data.length > 0) {\n          var _documentsResponse$da;\n          console.log(\"Frontend: Sample KKS_Data in first doc:\", (_documentsResponse$da = documentsResponse.data[0]) === null || _documentsResponse$da === void 0 ? void 0 : _documentsResponse$da.KKS_Data); // Check the new field\n        }\n\n        // Fetch workers if admin\n        if (user.role === 1) {\n          const workersResponse = await axios.get('http://localhost:5000/api/workers');\n          if (!Array.isArray(workersResponse.data)) {\n            console.error(\"Workers API did not return an array:\", workersResponse.data);\n            // Decide how to handle: throw error or just set empty array?\n            setWorkers([]); // Set empty for now\n          } else {\n            setWorkers(workersResponse.data);\n            // Set initial selected worker ONLY if workers exist AND selectedWorker is still null\n            if (workersResponse.data.length > 0 && selectedWorker === null) {\n              setSelectedWorker(workersResponse.data[0].ID_Worker);\n            } else if (workersResponse.data.length === 0) {\n              setSelectedWorker(null);\n            }\n          }\n        } else {\n          setWorkers([]);\n          setSelectedWorker(null);\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Ошибка при загрузке данных:', err);\n        // More specific error messages if possible\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || err.message || 'Не удалось загрузить данные');\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user !== null && user !== void 0 && user.id) {\n      fetchData();\n    } else {\n      setError(\"Пользователь не найден. Пожалуйста, войдите снова.\");\n      setLoading(false);\n    }\n    // Adding selectedWorker here based on previous fix for exhaustive-deps\n  }, [user === null || user === void 0 ? void 0 : user.id, user === null || user === void 0 ? void 0 : user.role, selectedWorker]);\n\n  // --- Event Handlers (handleLogout, handleBack, handleWorkerChange, handleViewModeChange, openModal, closeModal) ---\n  // No changes needed here from previous version\n\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n  const handleBack = () => {\n    navigate(user.role === 1 ? '/admin' : '/user');\n  };\n  const handleWorkerChange = event => {\n    const workerIdValue = event.target.value;\n    const workerId = workerIdValue ? parseInt(workerIdValue, 10) : null;\n    setSelectedWorker(workerId);\n  };\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n  };\n  const openModal = doc => {\n    console.log(\"Opening modal for doc:\", doc);\n    setSelectedDocumentForModal(doc);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedDocumentForModal(null);\n  };\n\n  // --- Filtered Documents ---\n  const filteredDocuments = useMemo(() => {\n    if (loading || !Array.isArray(documents)) return [];\n    if (user.role === 1) {\n      return selectedWorker !== null ? documents.filter(doc => doc.ID_Worker === selectedWorker) : []; // Show nothing if admin hasn't selected a worker\n    } else {\n      return documents; // Non-admin sees their own (already filtered by backend)\n    }\n  }, [documents, selectedWorker, user.role, loading]);\n\n  // --- Chart Data Preparation ---\n\n  // 1. Yearly Chart Data (No changes needed)\n  const prepareYearlyChartData = useCallback(docs => {\n    // ... (previous implementation is fine) ...\n    const documentsByYear = docs.reduce((acc, doc) => {\n      try {\n        if (doc.DateIssue) {\n          const date = new Date(doc.DateIssue);\n          if (!isNaN(date.getTime())) {\n            const year = date.getFullYear();\n            acc[year] = (acc[year] || 0) + 1;\n          } else {\n            console.warn(\"Invalid DateIssue format:\", doc.ID_Document);\n          }\n        } else {\n          console.warn(\"Missing DateIssue:\", doc.ID_Document);\n        }\n      } catch (e) {\n        console.error(\"Error parsing DateIssue:\", doc.ID_Document, e);\n      }\n      return acc;\n    }, {});\n    const years = Object.keys(documentsByYear).map(Number).sort((a, b) => a - b);\n    const currentYear = new Date().getFullYear();\n    const minDataYear = years.length > 0 ? Math.min(...years) : currentYear;\n    const maxDataYear = years.length > 0 ? Math.max(...years) : currentYear;\n    const startYear = minDataYear;\n    const endYear = Math.max(maxDataYear, currentYear);\n    const allYears = [];\n    if (startYear <= endYear) {\n      for (let year = startYear; year <= endYear; year++) {\n        allYears.push(year);\n      }\n    } else if (docs.length === 0) {/* Optionally add current year: allYears.push(currentYear); */}\n    const counts = allYears.map(year => documentsByYear[year] || 0);\n    const cumulativeCounts = counts.reduce((acc, count, index) => {\n      acc.push(index === 0 ? count : (acc[index - 1] || 0) + count);\n      return acc;\n    }, []);\n    return {\n      years: allYears,\n      counts,\n      cumulativeCounts\n    };\n  }, []); // Wrap in useCallback as it's a stable function\n\n  // 2. KKS Chart Data (UPDATED)\n  const prepareKKSChartData = useCallback(docs => {\n    // Accumulator to store { shortName: { shortName, fullName, count } }\n    const kksAggregated = docs.reduce((acc, doc) => {\n      // KKS_Data should now be an array of objects from the backend\n      const kksItems = doc.KKS_Data;\n\n      // Check if kksItems is a valid array\n      if (Array.isArray(kksItems)) {\n        kksItems.forEach(item => {\n          var _item$shortName, _item$fullName;\n          // Ensure item has the expected properties\n          const shortName = (_item$shortName = item.shortName) === null || _item$shortName === void 0 ? void 0 : _item$shortName.trim();\n          const fullName = (_item$fullName = item.fullName) === null || _item$fullName === void 0 ? void 0 : _item$fullName.trim();\n          if (shortName) {\n            // Use shortName as the primary key\n            if (!acc[shortName]) {\n              // Initialize if first time seeing this shortName\n              acc[shortName] = {\n                shortName: shortName,\n                fullName: fullName || shortName,\n                // Use shortName as fallback fullName\n                count: 0\n              };\n            }\n            // Increment count\n            acc[shortName].count += 1;\n          } else {\n            console.warn(\"KKS item missing shortName in doc:\", doc.ID_Document, item);\n          }\n        });\n      } else if (kksItems) {\n        // Log error if KKS_Data exists but isn't an array (shouldn't happen with backend parsing)\n        console.error(\"KKS_Data is not an array for doc:\", doc.ID_Document, kksItems);\n      }\n      // If KKS_Data is null/undefined, just continue\n\n      return acc;\n    }, {});\n\n    // Sort by shortName for consistent axis order\n    const sortedShortNames = Object.keys(kksAggregated).sort((a, b) => a.localeCompare(b));\n\n    // Extract data for Chart.js\n    const labels = sortedShortNames; // Axis labels = Short Names\n    const fullNames = sortedShortNames.map(key => kksAggregated[key].fullName); // Full Names for tooltips\n    const counts = sortedShortNames.map(key => kksAggregated[key].count); // Bar heights\n\n    console.log(\"Prepared KKS Chart Data:\", {\n      labels,\n      fullNames,\n      counts\n    }); // Log prepared data\n\n    return {\n      labels: labels,\n      fullNames: fullNames,\n      counts: counts\n    };\n  }, []); // Wrap in useCallback\n\n  // --- Memoized Chart Results ---\n  const yearlyChartResult = useMemo(() => prepareYearlyChartData(filteredDocuments), [filteredDocuments, prepareYearlyChartData]);\n  const kksChartResult = useMemo(() => prepareKKSChartData(filteredDocuments), [filteredDocuments, prepareKKSChartData]);\n\n  // --- Memoized Chart Data Objects ---\n  const yearlyData = useMemo(() => ({\n    labels: yearlyChartResult.years,\n    datasets: [{\n      label: user.role === 1 ? `Документы (по годам) - ${getWorkerName() || '...'}` : 'Мои документы (по годам)',\n      data: yearlyChartResult.counts,\n      backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 1\n    }]\n  }), [yearlyChartResult, user.role, getWorkerName]);\n  const cumulativeData = useMemo(() => ({\n    labels: yearlyChartResult.years,\n    datasets: [{\n      label: user.role === 1 ? `Нарастающий график - ${getWorkerName() || '...'}` : 'Мой нарастающий график',\n      data: yearlyChartResult.cumulativeCounts,\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  }), [yearlyChartResult, user.role, getWorkerName]);\n  const kksData = useMemo(() => ({\n    labels: kksChartResult.labels,\n    // Use SHORT names for axis labels\n    datasets: [{\n      label: user.role === 1 ? `Документы по критериям ККС - ${getWorkerName() || '...'}` : 'Мои документы по критериям ККС',\n      data: kksChartResult.counts,\n      backgroundColor: 'rgba(255, 159, 64, 0.6)',\n      borderColor: 'rgba(255, 159, 64, 1)',\n      borderWidth: 1\n    }]\n  }), [kksChartResult, user.role, getWorkerName]);\n\n  // --- Chart Options ---\n  const commonOptions = useMemo(() => (titleText, xAxisText) => ({\n    // Added xAxisText parameter\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      /* legend, title, base tooltip */\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: titleText,\n        font: {\n          size: 16\n        }\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      } // Base tooltip config\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: xAxisText\n        },\n        // Use provided X-axis title\n        ticks: {\n          autoSkip: true,\n          maxRotation: 45,\n          minRotation: 0\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Количество документов'\n        },\n        ticks: {\n          precision: 0\n        }\n      }\n    }\n  }), []); // No dependencies for the function generator itself\n\n  const yearlyOptions = useMemo(() => commonOptions(user.role === 1 ? `Количество документов по годам (${getWorkerName() || '...'})` : 'Мои документы по годам', 'Год' // X-axis title\n  ), [commonOptions, user.role, getWorkerName]);\n  const cumulativeOptions = useMemo(() => commonOptions(user.role === 1 ? `Нарастающий итог документов по годам (${getWorkerName() || '...'})` : 'Мой нарастающий итог по годам', 'Год' // X-axis title\n  ), [commonOptions, user.role, getWorkerName]);\n\n  // KKS Options (UPDATED for Tooltip)\n  const kksOptions = useMemo(() => {\n    const title = user.role === 1 ? `Распределение по критериям ККС (${getWorkerName() || '...'})` : 'Мое распределение по критериям ККС';\n    const baseOpts = commonOptions(title, 'Критерий ККС (сокр.)'); // X-axis title with abbreviation note\n\n    // Customize tooltips specifically for KKS chart\n    baseOpts.plugins.tooltip = {\n      ...baseOpts.plugins.tooltip,\n      // Keep existing settings (mode, intersect)\n      callbacks: {\n        label: function (context) {\n          try {\n            var _ref, _context$parsed$y, _kksChartResult$fullN;\n            const labelIndex = context.dataIndex;\n            const count = (_ref = (_context$parsed$y = context.parsed.y) !== null && _context$parsed$y !== void 0 ? _context$parsed$y : context.dataset.data[labelIndex]) !== null && _ref !== void 0 ? _ref : 0; // Get count safely\n\n            // Access the fullNames array from kksChartResult\n            // kksChartResult is available in this scope\n            const fullName = (_kksChartResult$fullN = kksChartResult.fullNames) === null || _kksChartResult$fullN === void 0 ? void 0 : _kksChartResult$fullN[labelIndex]; // Use optional chaining\n\n            // Use full name if available, otherwise fallback to axis label (short name)\n            const displayLabel = fullName || context.label || '';\n            return `${displayLabel}: ${count}`;\n          } catch (e) {\n            console.error(\"Error in tooltip callback:\", e);\n            // Fallback tooltip text in case of error\n            return `${context.label || 'Ошибка'}: ${context.parsed.y || 0}`;\n          }\n        }\n      }\n    };\n    return baseOpts;\n  }, [commonOptions, user.role, getWorkerName, kksChartResult.fullNames]); // Add kksChartResult.fullNames dependency\n\n  // --- Helper Functions (formatDate) ---\n  const formatDate = useCallback(dateString => {\n    // Wrap in useCallback\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      return isNaN(date.getTime()) ? 'Неверная дата' : date.toLocaleDateString();\n    } catch (e) {\n      console.error(\"Error formatting date:\", dateString, e);\n      return 'Ошибка даты';\n    }\n  }, []);\n\n  // --- Rendering Logic ---\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 25\n  }, this);\n  // Keep error display simple or enhance as needed\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      className: \"back-button\",\n      children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 8\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analysis-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"back-button\",\n        children: \"\\u041D\\u0430\\u0437\\u0430\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }, this), user.role === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container\",\n      children: \"/* Worker Selector, View Mode Buttons */\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: viewMode === 'analysis' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-grid\",\n        children: (user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              options: yearlyOptions,\n              data: yearlyData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              options: cumulativeOptions,\n              data: cumulativeData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-wrapper kks-chart-wrapper\",\n            children: kksChartResult.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n              options: kksOptions,\n              data: kksData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-data-message\",\n              children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u043A\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u044F\\u043C \\u041A\\u041A\\u0421 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data-message full-width-message\",\n          children: user.role === 1 ? selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра анализа.\" : `Нет документов для анализа у выбранного работника (${getWorkerName()}).` : \"У вас пока нет загруженных документов для анализа.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"documents-list\",\n        children: (user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"documents-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: \"/* Headers */\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredDocuments.map(doc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [user.role === 1 && /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.WorkerName || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 66\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.ProgramName || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.OrgSName || doc.OrgFName || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: doc.regnumber || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDate(doc.DateIssue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"details-button\",\n                  onClick: () => openModal(doc),\n                  children: \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\\u0441\\u0442\\u0438\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 50\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 46\n              }, this)]\n            }, doc.ID_Document, true, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-data-message full-width-message\",\n          children: user.role === 1 ? selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра анализа.\" : `Нет документов для анализа у выбранного работника (${getWorkerName()}).` : \"У вас пока нет загруженных документов для анализа.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal /* other props */,\n      children: selectedDocumentForModal ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430 \\u2116 \", selectedDocumentForModal.regnumber || selectedDocumentForModal.ID_Document]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"modal-close-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-details-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 33\n            }, this), \" \", selectedDocumentForModal.WorkerName || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"kks-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u041A\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u0438 \\u041A\\u041A\\u0421:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 57\n            }, this), Array.isArray(selectedDocumentForModal.KKS_Data) // Check if KKS_Data is array\n            ? selectedDocumentForModal.KKS_Data.map(k => k.fullName || k.shortName).filter(Boolean).join(', ') || 'Нет данных' : 'Нет данных']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 9\n  }, this);\n}\n_s(DocumentAnalysis, \"4abMSjRaatWOne1KlmPiEv15Ln4=\", false, function () {\n  return [useNavigate];\n});\n_c = DocumentAnalysis;\nexport default DocumentAnalysis;\nvar _c;\n$RefreshReg$(_c, \"DocumentAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","axios","useNavigate","Modal","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","register","DocumentAnalysis","_s","documents","setDocuments","workers","setWorkers","selectedWorker","setSelectedWorker","loading","setLoading","error","setError","viewMode","setViewMode","isModalOpen","setIsModalOpen","selectedDocumentForModal","setSelectedDocumentForModal","navigate","user","JSON","parse","localStorage","getItem","getWorkerName","role","Array","isArray","worker","find","w","ID_Worker","FName_Worker","fetchData","documentsResponse","get","params","userId","id","data","console","Error","log","length","_documentsResponse$da","KKS_Data","workersResponse","err","_err$response","_err$response$data","response","message","handleLogout","removeItem","handleBack","handleWorkerChange","event","workerIdValue","target","value","workerId","parseInt","handleViewModeChange","mode","openModal","doc","closeModal","filteredDocuments","filter","prepareYearlyChartData","docs","documentsByYear","reduce","acc","DateIssue","date","Date","isNaN","getTime","year","getFullYear","warn","ID_Document","e","years","Object","keys","map","Number","sort","a","b","currentYear","minDataYear","Math","min","maxDataYear","max","startYear","endYear","allYears","push","counts","cumulativeCounts","count","index","prepareKKSChartData","kksAggregated","kksItems","forEach","item","_item$shortName","_item$fullName","shortName","trim","fullName","sortedShortNames","localeCompare","labels","fullNames","key","yearlyChartResult","kksChartResult","yearlyData","datasets","label","backgroundColor","borderColor","borderWidth","cumulativeData","kksData","commonOptions","titleText","xAxisText","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","font","size","tooltip","intersect","scales","x","ticks","autoSkip","maxRotation","minRotation","y","beginAtZero","precision","yearlyOptions","cumulativeOptions","kksOptions","baseOpts","callbacks","context","_ref","_context$parsed$y","_kksChartResult$fullN","labelIndex","dataIndex","parsed","dataset","displayLabel","formatDate","dateString","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","WorkerName","ProgramName","OrgSName","OrgFName","regnumber","isOpen","onRequestClose","k","Boolean","join","_c","$RefreshReg$"],"sources":["D:/Amina/VScode/FQW_new/src/components/DocumentAnalysis.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react'; // Added useCallback\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport './DocumentAnalysis.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nfunction DocumentAnalysis() {\r\n    // ... (state variables: documents, workers, selectedWorker, loading, error, viewMode, modal state)\r\n\r\n    const [documents, setDocuments] = useState([]);\r\n    const [workers, setWorkers] = useState([]);\r\n    const [selectedWorker, setSelectedWorker] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [viewMode, setViewMode] = useState('analysis');\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [selectedDocumentForModal, setSelectedDocumentForModal] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    // --- Memoize getWorkerName using useCallback ---\r\n    const getWorkerName = useCallback(() => {\r\n        if (user.role !== 1 || !selectedWorker || !Array.isArray(workers)) return '';\r\n        const worker = workers.find(w => w.ID_Worker === selectedWorker);\r\n        return worker ? worker.FName_Worker : `ID ${selectedWorker}`;\r\n    }, [user.role, selectedWorker, workers]); // Dependencies of getWorkerName\r\n\r\n    // --- useEffect for Data Fetching ---\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            setError('');\r\n            try {\r\n                // Fetch documents\r\n                const documentsResponse = await axios.get(`http://localhost:5000/api/documents`, {\r\n                    params: { userId: user.id, role: user.role }\r\n                });\r\n\r\n                // Basic validation that response.data is an array\r\n                if (!Array.isArray(documentsResponse.data)) {\r\n                    console.error('Documents API did not return an array:', documentsResponse.data);\r\n                    throw new Error('Неверный формат данных документов'); // Throw error\r\n                }\r\n                setDocuments(documentsResponse.data);\r\n                console.log(\"Frontend: Documents received:\", documentsResponse.data.length);\r\n                 if (documentsResponse.data.length > 0) {\r\n                     console.log(\"Frontend: Sample KKS_Data in first doc:\", documentsResponse.data[0]?.KKS_Data); // Check the new field\r\n                 }\r\n\r\n\r\n                // Fetch workers if admin\r\n                if (user.role === 1) {\r\n                    const workersResponse = await axios.get('http://localhost:5000/api/workers');\r\n                    if (!Array.isArray(workersResponse.data)) {\r\n                         console.error(\"Workers API did not return an array:\", workersResponse.data);\r\n                         // Decide how to handle: throw error or just set empty array?\r\n                         setWorkers([]); // Set empty for now\r\n                    } else {\r\n                         setWorkers(workersResponse.data);\r\n                         // Set initial selected worker ONLY if workers exist AND selectedWorker is still null\r\n                         if (workersResponse.data.length > 0 && selectedWorker === null) {\r\n                            setSelectedWorker(workersResponse.data[0].ID_Worker);\r\n                         } else if (workersResponse.data.length === 0) {\r\n                            setSelectedWorker(null);\r\n                         }\r\n                    }\r\n                } else {\r\n                    setWorkers([]);\r\n                    setSelectedWorker(null);\r\n                }\r\n\r\n            } catch (err) {\r\n                console.error('Ошибка при загрузке данных:', err);\r\n                // More specific error messages if possible\r\n                setError(err.response?.data?.error || err.message || 'Не удалось загрузить данные');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        if (user?.id) {\r\n            fetchData();\r\n        } else {\r\n            setError(\"Пользователь не найден. Пожалуйста, войдите снова.\");\r\n            setLoading(false);\r\n        }\r\n        // Adding selectedWorker here based on previous fix for exhaustive-deps\r\n    }, [user?.id, user?.role, selectedWorker]);\r\n\r\n\r\n    // --- Event Handlers (handleLogout, handleBack, handleWorkerChange, handleViewModeChange, openModal, closeModal) ---\r\n    // No changes needed here from previous version\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('user');\r\n        navigate('/login');\r\n    };\r\n    const handleBack = () => {\r\n        navigate(user.role === 1 ? '/admin' : '/user');\r\n    };\r\n    const handleWorkerChange = (event) => {\r\n        const workerIdValue = event.target.value;\r\n        const workerId = workerIdValue ? parseInt(workerIdValue, 10) : null;\r\n        setSelectedWorker(workerId);\r\n    };\r\n    const handleViewModeChange = (mode) => {\r\n        setViewMode(mode);\r\n    };\r\n    const openModal = (doc) => {\r\n        console.log(\"Opening modal for doc:\", doc);\r\n        setSelectedDocumentForModal(doc);\r\n        setIsModalOpen(true);\r\n    };\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n        setSelectedDocumentForModal(null);\r\n    };\r\n\r\n\r\n    // --- Filtered Documents ---\r\n    const filteredDocuments = useMemo(() => {\r\n        if (loading || !Array.isArray(documents)) return [];\r\n        if (user.role === 1) {\r\n            return selectedWorker !== null\r\n                ? documents.filter(doc => doc.ID_Worker === selectedWorker)\r\n                : []; // Show nothing if admin hasn't selected a worker\r\n        } else {\r\n            return documents; // Non-admin sees their own (already filtered by backend)\r\n        }\r\n    }, [documents, selectedWorker, user.role, loading]);\r\n\r\n    // --- Chart Data Preparation ---\r\n\r\n    // 1. Yearly Chart Data (No changes needed)\r\n    const prepareYearlyChartData = useCallback((docs) => {\r\n        // ... (previous implementation is fine) ...\r\n        const documentsByYear = docs.reduce((acc, doc) => {\r\n            try {\r\n                if (doc.DateIssue) {\r\n                    const date = new Date(doc.DateIssue);\r\n                    if (!isNaN(date.getTime())) {\r\n                        const year = date.getFullYear();\r\n                        acc[year] = (acc[year] || 0) + 1;\r\n                    } else { console.warn(\"Invalid DateIssue format:\", doc.ID_Document); }\r\n                } else { console.warn(\"Missing DateIssue:\", doc.ID_Document); }\r\n            } catch (e) { console.error(\"Error parsing DateIssue:\", doc.ID_Document, e); }\r\n            return acc;\r\n        }, {});\r\n        const years = Object.keys(documentsByYear).map(Number).sort((a, b) => a - b);\r\n        const currentYear = new Date().getFullYear();\r\n        const minDataYear = years.length > 0 ? Math.min(...years) : currentYear;\r\n        const maxDataYear = years.length > 0 ? Math.max(...years) : currentYear;\r\n        const startYear = minDataYear;\r\n        const endYear = Math.max(maxDataYear, currentYear);\r\n        const allYears = [];\r\n        if (startYear <= endYear) {\r\n             for (let year = startYear; year <= endYear; year++) { allYears.push(year); }\r\n        } else if (docs.length === 0) { /* Optionally add current year: allYears.push(currentYear); */ }\r\n        const counts = allYears.map(year => documentsByYear[year] || 0);\r\n        const cumulativeCounts = counts.reduce((acc, count, index) => {\r\n            acc.push(index === 0 ? count : (acc[index - 1] || 0) + count);\r\n            return acc;\r\n        }, []);\r\n        return { years: allYears, counts, cumulativeCounts };\r\n    }, []); // Wrap in useCallback as it's a stable function\r\n\r\n\r\n    // 2. KKS Chart Data (UPDATED)\r\n    const prepareKKSChartData = useCallback((docs) => {\r\n        // Accumulator to store { shortName: { shortName, fullName, count } }\r\n        const kksAggregated = docs.reduce((acc, doc) => {\r\n            // KKS_Data should now be an array of objects from the backend\r\n            const kksItems = doc.KKS_Data;\r\n\r\n            // Check if kksItems is a valid array\r\n            if (Array.isArray(kksItems)) {\r\n                kksItems.forEach(item => {\r\n                    // Ensure item has the expected properties\r\n                    const shortName = item.shortName?.trim();\r\n                    const fullName = item.fullName?.trim();\r\n\r\n                    if (shortName) { // Use shortName as the primary key\r\n                        if (!acc[shortName]) {\r\n                            // Initialize if first time seeing this shortName\r\n                            acc[shortName] = {\r\n                                shortName: shortName,\r\n                                fullName: fullName || shortName, // Use shortName as fallback fullName\r\n                                count: 0\r\n                            };\r\n                        }\r\n                        // Increment count\r\n                        acc[shortName].count += 1;\r\n                    } else {\r\n                         console.warn(\"KKS item missing shortName in doc:\", doc.ID_Document, item);\r\n                    }\r\n                });\r\n            } else if (kksItems) {\r\n                 // Log error if KKS_Data exists but isn't an array (shouldn't happen with backend parsing)\r\n                 console.error(\"KKS_Data is not an array for doc:\", doc.ID_Document, kksItems);\r\n            }\r\n            // If KKS_Data is null/undefined, just continue\r\n\r\n            return acc;\r\n        }, {});\r\n\r\n        // Sort by shortName for consistent axis order\r\n        const sortedShortNames = Object.keys(kksAggregated).sort((a, b) => a.localeCompare(b));\r\n\r\n        // Extract data for Chart.js\r\n        const labels = sortedShortNames; // Axis labels = Short Names\r\n        const fullNames = sortedShortNames.map(key => kksAggregated[key].fullName); // Full Names for tooltips\r\n        const counts = sortedShortNames.map(key => kksAggregated[key].count); // Bar heights\r\n\r\n        console.log(\"Prepared KKS Chart Data:\", { labels, fullNames, counts }); // Log prepared data\r\n\r\n        return {\r\n            labels: labels,\r\n            fullNames: fullNames,\r\n            counts: counts\r\n        };\r\n    }, []); // Wrap in useCallback\r\n\r\n    // --- Memoized Chart Results ---\r\n    const yearlyChartResult = useMemo(() => prepareYearlyChartData(filteredDocuments), [filteredDocuments, prepareYearlyChartData]);\r\n    const kksChartResult = useMemo(() => prepareKKSChartData(filteredDocuments), [filteredDocuments, prepareKKSChartData]);\r\n\r\n\r\n    // --- Memoized Chart Data Objects ---\r\n    const yearlyData = useMemo(() => ({\r\n        labels: yearlyChartResult.years,\r\n        datasets: [{\r\n            label: user.role === 1 ? `Документы (по годам) - ${getWorkerName() || '...'}` : 'Мои документы (по годам)',\r\n            data: yearlyChartResult.counts,\r\n            backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            borderWidth: 1,\r\n        }],\r\n    }), [yearlyChartResult, user.role, getWorkerName]);\r\n\r\n    const cumulativeData = useMemo(() => ({\r\n        labels: yearlyChartResult.years,\r\n        datasets: [{\r\n            label: user.role === 1 ? `Нарастающий график - ${getWorkerName() || '...'}` : 'Мой нарастающий график',\r\n            data: yearlyChartResult.cumulativeCounts,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 1,\r\n        }],\r\n    }), [yearlyChartResult, user.role, getWorkerName]);\r\n\r\n    const kksData = useMemo(() => ({\r\n        labels: kksChartResult.labels, // Use SHORT names for axis labels\r\n        datasets: [{\r\n            label: user.role === 1 ? `Документы по критериям ККС - ${getWorkerName() || '...'}` : 'Мои документы по критериям ККС',\r\n            data: kksChartResult.counts,\r\n            backgroundColor: 'rgba(255, 159, 64, 0.6)',\r\n            borderColor: 'rgba(255, 159, 64, 1)',\r\n            borderWidth: 1,\r\n        }],\r\n    }), [kksChartResult, user.role, getWorkerName]);\r\n\r\n\r\n    // --- Chart Options ---\r\n     const commonOptions = useMemo(() => (titleText, xAxisText) => ({ // Added xAxisText parameter\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: { /* legend, title, base tooltip */\r\n             legend: { position: 'top' },\r\n             title: { display: true, text: titleText, font: { size: 16 } },\r\n             tooltip: { mode: 'index', intersect: false } // Base tooltip config\r\n        },\r\n        scales: {\r\n            x: {\r\n                title: { display: true, text: xAxisText }, // Use provided X-axis title\r\n                ticks: { autoSkip: true, maxRotation: 45, minRotation: 0 }\r\n            },\r\n            y: {\r\n                beginAtZero: true,\r\n                title: { display: true, text: 'Количество документов' },\r\n                ticks: { precision: 0 }\r\n            },\r\n        },\r\n    }), []); // No dependencies for the function generator itself\r\n\r\n    const yearlyOptions = useMemo(() => commonOptions(\r\n        user.role === 1 ? `Количество документов по годам (${getWorkerName() || '...'})` : 'Мои документы по годам',\r\n        'Год' // X-axis title\r\n    ), [commonOptions, user.role, getWorkerName]);\r\n\r\n    const cumulativeOptions = useMemo(() => commonOptions(\r\n        user.role === 1 ? `Нарастающий итог документов по годам (${getWorkerName() || '...'})` : 'Мой нарастающий итог по годам',\r\n        'Год' // X-axis title\r\n    ), [commonOptions, user.role, getWorkerName]);\r\n\r\n    // KKS Options (UPDATED for Tooltip)\r\n    const kksOptions = useMemo(() => {\r\n        const title = user.role === 1\r\n            ? `Распределение по критериям ККС (${getWorkerName() || '...'})`\r\n            : 'Мое распределение по критериям ККС';\r\n        const baseOpts = commonOptions(title, 'Критерий ККС (сокр.)'); // X-axis title with abbreviation note\r\n\r\n        // Customize tooltips specifically for KKS chart\r\n        baseOpts.plugins.tooltip = {\r\n            ...baseOpts.plugins.tooltip, // Keep existing settings (mode, intersect)\r\n            callbacks: {\r\n                label: function(context) {\r\n                    try {\r\n                        const labelIndex = context.dataIndex;\r\n                        const count = context.parsed.y ?? context.dataset.data[labelIndex] ?? 0; // Get count safely\r\n\r\n                        // Access the fullNames array from kksChartResult\r\n                        // kksChartResult is available in this scope\r\n                        const fullName = kksChartResult.fullNames?.[labelIndex]; // Use optional chaining\r\n\r\n                        // Use full name if available, otherwise fallback to axis label (short name)\r\n                        const displayLabel = fullName || context.label || '';\r\n\r\n                        return `${displayLabel}: ${count}`;\r\n                    } catch (e) {\r\n                         console.error(\"Error in tooltip callback:\", e);\r\n                         // Fallback tooltip text in case of error\r\n                         return `${context.label || 'Ошибка'}: ${context.parsed.y || 0}`;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        return baseOpts;\r\n\r\n    }, [commonOptions, user.role, getWorkerName, kksChartResult.fullNames]); // Add kksChartResult.fullNames dependency\r\n\r\n\r\n    // --- Helper Functions (formatDate) ---\r\n     const formatDate = useCallback((dateString) => { // Wrap in useCallback\r\n        if (!dateString) return 'N/A';\r\n        try {\r\n            const date = new Date(dateString);\r\n            return isNaN(date.getTime()) ? 'Неверная дата' : date.toLocaleDateString();\r\n        } catch (e) {\r\n            console.error(\"Error formatting date:\", dateString, e);\r\n            return 'Ошибка даты';\r\n        }\r\n    }, []);\r\n\r\n    // --- Rendering Logic ---\r\n    if (loading) return <div className=\"loading\">Загрузка данных...</div>;\r\n    // Keep error display simple or enhance as needed\r\n    if (error) return (\r\n       <div className=\"error-container\">\r\n         <div className=\"error\">{error}</div>\r\n         <button onClick={handleBack} className=\"back-button\">Назад</button>\r\n       </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"analysis-container\">\r\n            {/* Header */}\r\n            <div className=\"header-buttons\">\r\n              <button onClick={handleBack} className=\"back-button\">Назад</button>\r\n              <button onClick={handleLogout} className=\"logout-button\">Выйти</button>\r\n\r\n        </div>\r\n\r\n            {/* Controls (Admin only) */}\r\n            {user.role === 1 && (\r\n                 <div className=\"controls-container\">/* Worker Selector, View Mode Buttons */</div>\r\n            )}\r\n\r\n            {/* Content Area */}\r\n            <div className=\"content-area\">\r\n                {viewMode === 'analysis' ? (\r\n                    <div className=\"charts-grid\">\r\n                        {/* Conditional rendering for charts */}\r\n                        {(user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? (\r\n                            <>\r\n                                <div className=\"chart-wrapper\"><Bar options={yearlyOptions} data={yearlyData} /></div>\r\n                                <div className=\"chart-wrapper\"><Bar options={cumulativeOptions} data={cumulativeData} /></div>\r\n                                <div className=\"chart-wrapper kks-chart-wrapper\">\r\n                                    {kksChartResult.labels.length > 0 ? (\r\n                                        <Bar options={kksOptions} data={kksData} />\r\n                                    ) : (\r\n                                        <p className=\"no-data-message\">Нет данных по критериям ККС для отображения.</p>\r\n                                    )}\r\n                                </div>\r\n                            </>\r\n                        ) : ( <div className=\"no-data-message full-width-message\">\r\n                          {user.role === 1 ?\r\n                               (selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра анализа.\" : `Нет документов для анализа у выбранного работника (${getWorkerName()}).`) :\r\n                              \"У вас пока нет загруженных документов для анализа.\"\r\n                          }\r\n                       </div>\r\n                       )}\r\n                    </div>\r\n                ) : (\r\n                     <div className=\"documents-list\">\r\n                        {/* Conditional rendering for table */}\r\n                        {(user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? (\r\n                            <table className=\"documents-table\">\r\n                                {/* Table Head */}\r\n                                <thead>\r\n                                     <tr>/* Headers */</tr>\r\n                                </thead>\r\n                                {/* Table Body */}\r\n                                <tbody>\r\n                                    {filteredDocuments.map((doc) => (\r\n                                        <tr key={doc.ID_Document}>\r\n                                             {/* Table Cells */}\r\n                                             {user.role === 1 && <td>{doc.WorkerName || 'N/A'}</td>}\r\n                                             <td>{doc.ProgramName || 'N/A'}</td>\r\n                                             <td>{doc.OrgSName || doc.OrgFName || 'N/A'}</td>\r\n                                             <td>{doc.regnumber || 'N/A'}</td>\r\n                                             <td>{formatDate(doc.DateIssue)}</td>\r\n                                             <td><button className=\"details-button\" onClick={() => openModal(doc)}>Подробности</button></td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        ) : (\r\n                            <div className=\"no-data-message full-width-message\">\r\n                                {user.role === 1 ?\r\n                                    (selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра анализа.\" : `Нет документов для анализа у выбранного работника (${getWorkerName()}).`) :\r\n                                    \"У вас пока нет загруженных документов для анализа.\"\r\n                                }\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Modal Definition */}\r\n            <Modal isOpen={isModalOpen} onRequestClose={closeModal} /* other props */ >\r\n                {selectedDocumentForModal ? (\r\n                    <>\r\n                        <h2>Детали документа № {selectedDocumentForModal.regnumber || selectedDocumentForModal.ID_Document}</h2>\r\n                        <button onClick={closeModal} className=\"modal-close-button\">&times;</button>\r\n                        <div className=\"modal-details-grid\">\r\n                            {/* Display details from selectedDocumentForModal */}\r\n                             <p><strong>Работник:</strong> {selectedDocumentForModal.WorkerName || 'N/A'}</p>\r\n                             {/* ... other fields ... */}\r\n                             <p className=\"kks-details\"><strong>Критерии ККС:</strong>\r\n                                {Array.isArray(selectedDocumentForModal.KKS_Data) // Check if KKS_Data is array\r\n                                     ? selectedDocumentForModal.KKS_Data.map(k => k.fullName || k.shortName).filter(Boolean).join(', ') || 'Нет данных'\r\n                                     : 'Нет данных'}\r\n                             </p>\r\n                        </div>\r\n                    </>\r\n                ) : ( <p>Загрузка деталей...</p> )}\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DocumentAnalysis;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
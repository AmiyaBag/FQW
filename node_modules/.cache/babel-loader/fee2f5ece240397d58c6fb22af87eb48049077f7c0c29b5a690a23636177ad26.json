{"ast":null,"code":"import React,{useState,useEffect,useMemo,useCallback}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import Modal from'react-modal';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{Bar}from'react-chartjs-2';import'./DocumentAnalysis.css';// Make sure this CSS file exists and is styled appropriately\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const apiUrl=process.env.REACT_APP_API_URL;// Set the app element for react-modal accessibility\nModal.setAppElement('#root');// Adjust '#root' if your app's root element has a different ID\n// Register Chart.js components\nChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);function DocumentAnalysis(){// State Variables\nconst[documents,setDocuments]=useState([]);const[workers,setWorkers]=useState([]);const[selectedWorker,setSelectedWorker]=useState(null);// Store worker ID\nconst[loading,setLoading]=useState(true);const[error,setError]=useState('');const[viewMode,setViewMode]=useState('analysis');// 'analysis' or 'documents'\nconst[isModalOpen,setIsModalOpen]=useState(false);const[selectedDocumentForModal,setSelectedDocumentForModal]=useState(null);// Hooks\nconst navigate=useNavigate();const user=JSON.parse(localStorage.getItem('user'));// Assuming user info is stored here\n// --- Helper Function: Get Worker Name (Memoized) ---\nconst getWorkerName=useCallback(()=>{// Ensure workers is an array before using find\nif((user===null||user===void 0?void 0:user.role)!==1||!selectedWorker||!Array.isArray(workers))return'';const worker=workers.find(w=>w.ID_Worker===selectedWorker);return worker?worker.FName_Worker:`ID ${selectedWorker}`;// Use FName_Worker or adjust as needed\n},[user===null||user===void 0?void 0:user.role,selectedWorker,workers]);// Dependencies for getWorkerName\n// --- useEffect for Data Fetching ---\nuseEffect(()=>{const fetchData=async()=>{setLoading(true);setError('');try{// Fetch documents based on user ID and role\nconst documentsResponse=await axios.get(`${apiUrl}/api/documents`,{params:{userId:user.workerId,role:user.role}});// Validate documents response\nif(!Array.isArray(documentsResponse.data)){console.error('Documents API did not return an array:',documentsResponse.data);throw new Error('Неверный формат данных документов');}setDocuments(documentsResponse.data);console.log(\"Frontend: Documents received:\",documentsResponse.data.length);if(documentsResponse.data.length>0){var _documentsResponse$da;// Log the structure of KKS_Data for the first doc for verification\nconsole.log(\"Frontend: Sample KKS_Data in first doc:\",(_documentsResponse$da=documentsResponse.data[0])===null||_documentsResponse$da===void 0?void 0:_documentsResponse$da.KKS_Data);}// Fetch workers list if the user is an admin (role === 1)\nif(user.role===1){const workersResponse=await axios.get(`${apiUrl}/api/workers`);// Validate workers response\nif(!Array.isArray(workersResponse.data)){console.error(\"Workers API did not return an array:\",workersResponse.data);setWorkers([]);// Set empty array on error\n}else{setWorkers(workersResponse.data);// Set the initial selected worker ONLY if workers exist and NO worker is currently selected\n// This prevents resetting selection if the component re-renders for other reasons\nif(workersResponse.data.length>0&&selectedWorker===null){setSelectedWorker(workersResponse.data[0].ID_Worker);}else if(workersResponse.data.length===0){setSelectedWorker(null);// No workers available\n}}}else{// Not an admin, clear workers and selection\nsetWorkers([]);setSelectedWorker(null);}}catch(err){var _err$response,_err$response$data;console.error('Ошибка при загрузке данных:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||err.message||'Не удалось загрузить данные');}finally{setLoading(false);}};if(user!==null&&user!==void 0&&user.workerId){fetchData();}else{setError(\"Пользователь не найден. Пожалуйста, войдите снова.\");setLoading(false);// Optional: Redirect to login\n// navigate('/login');\n}// Dependency array includes user info and selectedWorker (to potentially refetch if admin changes worker, though filtering handles display)\n// Note: Adding selectedWorker here caused a re-fetch loop in v1 - be careful. Let's keep it based on user info for initial load.\n// Re-filtering happens via useMemo when selectedWorker changes.\n},[user===null||user===void 0?void 0:user.workerId,user===null||user===void 0?void 0:user.role]);// Re-run effect if user ID or role changes\n// --- Event Handlers ---\nconst handleLogout=()=>{localStorage.removeItem('user');navigate('/login');};const handleBack=()=>{// Navigate back based on user role\nnavigate((user===null||user===void 0?void 0:user.role)===1?'/admin':'/user');// Navigate to admin or user dashboard\n};const handleWorkerChange=event=>{const workerIdValue=event.target.value;// Parse to integer, handle potential empty string value from a \"--Select--\" option\nconst workerId=workerIdValue?parseInt(workerIdValue,10):null;setSelectedWorker(workerId);};const handleViewModeChange=mode=>{setViewMode(mode);};// --- Modal Handlers ---\nconst openModal=doc=>{console.log(\"Opening modal for doc:\",doc);setSelectedDocumentForModal(doc);setIsModalOpen(true);};const closeModal=()=>{setIsModalOpen(false);setSelectedDocumentForModal(null);// Clear selected doc when closing\n};// --- Filtered Documents (Memoized) ---\nconst filteredDocuments=useMemo(()=>{if(loading||!Array.isArray(documents))return[];// Return empty if loading or documents not an array\nif((user===null||user===void 0?void 0:user.role)===1){// Admin view: filter by selectedWorker ID\nreturn selectedWorker!==null?documents.filter(doc=>doc.ID_Worker===selectedWorker):[];// Show nothing if admin role but no worker selected yet\n}else{// Non-admin view: show all documents fetched for them (backend already filtered)\nreturn documents;}},[documents,selectedWorker,user===null||user===void 0?void 0:user.role,loading]);// Recalculate when these change\n// --- Chart Data Preparation Functions (Memoized with useCallback) ---\n// 1. Yearly & Cumulative Chart Data\nconst prepareYearlyChartData=useCallback(docs=>{const documentsByYear=docs.reduce((acc,doc)=>{try{// Ensure DateIssue exists and is a valid date string\nif(doc.DateIssue){const date=new Date(doc.DateIssue);if(!isNaN(date.getTime())){// Check if date is valid\nconst year=date.getFullYear();acc[year]=(acc[year]||0)+1;}else{console.warn(\"Invalid DateIssue format:\",doc.ID_Document,doc.DateIssue);}}else{console.warn(\"Missing DateIssue:\",doc.ID_Document);}}catch(e){console.error(\"Error parsing DateIssue:\",doc.ID_Document,doc.DateIssue,e);}return acc;},{});const yearsInData=Object.keys(documentsByYear).map(Number).sort((a,b)=>a-b);const currentYear=new Date().getFullYear();const minDataYear=yearsInData.length>0?Math.min(...yearsInData):currentYear;const maxDataYear=yearsInData.length>0?Math.max(...yearsInData):currentYear;// Determine the range of years for the chart (from earliest data year to at least the current year)\nconst startYear=minDataYear;const endYear=Math.max(maxDataYear,currentYear);const allYears=[];// Populate all years in the range\nif(startYear<=endYear){for(let year=startYear;year<=endYear;year++){allYears.push(year);}}else if(docs.length===0){// Handle case with no documents - maybe show current year?\n// Optionally add current year: allYears.push(currentYear);\n}// Map counts for each year in the final range\nconst counts=allYears.map(year=>documentsByYear[year]||0);// Calculate cumulative counts\nconst cumulativeCounts=counts.reduce((acc,count,index)=>{acc.push(index===0?count:(acc[index-1]||0)+count);return acc;},[]);return{years:allYears,counts,cumulativeCounts};},[]);// useCallback as the function definition itself doesn't depend on props/state\n// 2. KKS Criteria Chart Data (Processing KKS_Data array)\nconst prepareKKSChartData=useCallback(docs=>{// Aggregate counts per KKS criterion (using shortName as key)\nconst kksAggregated=docs.reduce((acc,doc)=>{const kksItems=doc.KKS_Data;// Expecting an array like [{ shortName: '..', fullName: '..' }, ...]\n// Check if kksItems is a valid array\nif(Array.isArray(kksItems)){kksItems.forEach(item=>{var _item$shortName,_item$fullName;const shortName=item===null||item===void 0?void 0:(_item$shortName=item.shortName)===null||_item$shortName===void 0?void 0:_item$shortName.trim();// Use optional chaining and trim\nconst fullName=item===null||item===void 0?void 0:(_item$fullName=item.fullName)===null||_item$fullName===void 0?void 0:_item$fullName.trim();if(shortName){// Process only if shortName exists\nif(!acc[shortName]){// Initialize entry for this shortName if it's the first time seen\nacc[shortName]={shortName:shortName,fullName:fullName||shortName,// Use shortName as fallback if fullName is missing\ncount:0};}// Increment the count for this KKS criterion\nacc[shortName].count+=1;}else{console.warn(\"KKS item missing shortName in doc:\",doc.ID_Document,item);}});}else if(kksItems){// Log if KKS_Data exists but isn't an array (should be handled by backend ideally)\nconsole.error(\"KKS_Data is not an array for doc:\",doc.ID_Document,kksItems);}// If KKS_Data is null/undefined or invalid, just skip and continue\nreturn acc;},{});// Initial value is an empty object\n// Sort aggregated data by shortName for consistent chart axis order\nconst sortedShortNames=Object.keys(kksAggregated).sort((a,b)=>a.localeCompare(b));// Extract data arrays needed for Chart.js\nconst labels=sortedShortNames;// X-axis labels will be the Short Names\nconst fullNames=sortedShortNames.map(key=>kksAggregated[key].fullName);// Full Names for tooltips\nconst counts=sortedShortNames.map(key=>kksAggregated[key].count);// Bar heights\nconsole.log(\"Prepared KKS Chart Data:\",{labels,fullNames,counts});// Log for debugging\nreturn{labels:labels,// Short names for axis\nfullNames:fullNames,// Full names for tooltips\ncounts:counts// Counts for bar heights\n};},[]);// useCallback as the function definition is stable\n// --- Memoized Chart Results ---\n// These recalculate only when filteredDocuments or the prep function changes (which it won't due to useCallback)\nconst yearlyChartResult=useMemo(()=>prepareYearlyChartData(filteredDocuments),[filteredDocuments,prepareYearlyChartData]);const kksChartResult=useMemo(()=>prepareKKSChartData(filteredDocuments),[filteredDocuments,prepareKKSChartData]);// --- Расчет коэффициента K ---\nconst calculateK=useCallback(cumulativeCounts=>{if(!Array.isArray(cumulativeCounts)||cumulativeCounts.length<2)return 0;let K=0;for(let i=1;i<cumulativeCounts.length;i++){const diff=cumulativeCounts[i]-cumulativeCounts[i-1];if(diff>0){K+=diff;}}return K;},[]);const kCoefficient=useMemo(()=>{return calculateK(yearlyChartResult.cumulativeCounts);},[yearlyChartResult.cumulativeCounts,calculateK]);// --- Memoized Chart Data Objects (for react-chartjs-2) ---\nconst yearlyData=useMemo(()=>({labels:yearlyChartResult.years,datasets:[{label:user.role===1?`Документы (по годам) - ${getWorkerName()||'Выбор...'}`:'Мои документы (по годам)',data:yearlyChartResult.counts,backgroundColor:'rgba(54, 162, 235, 0.6)',// Blue\nborderColor:'rgba(54, 162, 235, 1)',borderWidth:1}]}),[yearlyChartResult,user.role,getWorkerName]);// Update when results or worker name changes\nconst cumulativeData=useMemo(()=>({labels:yearlyChartResult.years,datasets:[{label:user.role===1?`График с приращением - ${getWorkerName()||'Выбор...'}`:'Мой график с приращением',data:yearlyChartResult.cumulativeCounts,backgroundColor:'rgba(75, 192, 192, 0.6)',// Teal\nborderColor:'rgba(75, 192, 192, 1)',borderWidth:1}]}),[yearlyChartResult,user.role,getWorkerName]);// Update when results or worker name changes\nconst kksData=useMemo(()=>({labels:kksChartResult.labels,// Use SHORT names for axis labels\ndatasets:[{label:user.role===1?`Документы по критериям ККС - ${getWorkerName()||'Выбор...'}`:'Мои документы по критериям ККС',data:kksChartResult.counts,backgroundColor:'rgba(255, 159, 64, 0.6)',// Orange\nborderColor:'rgba(255, 159, 64, 1)',borderWidth:1}]}),[kksChartResult,user.role,getWorkerName]);// Update when KKS results or worker name changes\n// --- Chart Options (Memoized) ---\n// Generator for common options\nconst commonOptions=useMemo(()=>(titleText,xAxisText)=>({responsive:true,maintainAspectRatio:false,// Allow chart to fill container height\nplugins:{legend:{position:'top'// Position legend at the top\n},title:{display:true,text:titleText,// Dynamic title\nfont:{size:16}// Set title font size\n},tooltip:{// Base tooltip configuration\nmode:'index',// Show tooltips for all datasets at that index\nintersect:false// Tooltip appears even if not directly hovering over the bar\n}},scales:{x:{// X-axis configuration\ntitle:{display:true,text:xAxisText// Dynamic X-axis label\n},ticks:{autoSkip:true,// Automatically skip labels if they overlap\nmaxRotation:45,// Max rotation for labels\nminRotation:0// Min rotation\n}},y:{// Y-axis configuration\nbeginAtZero:true,// Start Y-axis at 0\ntitle:{display:true,text:'Количество документов'// Y-axis label\n},ticks:{// Ensure integer ticks for document counts\nprecision:0}}}}),[]);// No dependencies for the function generator itself\n// Specific options for each chart using the common generator\nconst yearlyOptions=useMemo(()=>commonOptions(user.role===1?`Количество документов по годам (${getWorkerName()||'Выбор...'})`:'Мои документы по годам','Год'// X-axis title\n),[commonOptions,user.role,getWorkerName]);const cumulativeOptions=useMemo(()=>commonOptions(user.role===1?`График по годам с приращением (${getWorkerName()||'Выбор...'})`:'Мой график по годам с приращением','Год'// X-axis title\n),[commonOptions,user.role,getWorkerName]);// KKS Options with custom tooltip callback\nconst kksOptions=useMemo(()=>{const title=user.role===1?`Распределение по критериям ККС (${getWorkerName()||'Выбор...'})`:'Мое распределение по критериям ККС';const baseOpts=commonOptions(title,'Критерий ККС (сокр.)');// X-axis title notes abbreviation\n// Customize tooltips specifically for the KKS chart to show full names\nbaseOpts.plugins.tooltip={...baseOpts.plugins.tooltip,// Keep existing base settings (mode, intersect)\ncallbacks:{label:function(context){// Use 'function' to access 'this' if needed, or arrow function\ntry{var _ref,_context$parsed$y,_kksChartResult$fullN;const labelIndex=context.dataIndex;// Index of the data point\nconst count=(_ref=(_context$parsed$y=context.parsed.y)!==null&&_context$parsed$y!==void 0?_context$parsed$y:context.dataset.data[labelIndex])!==null&&_ref!==void 0?_ref:0;// Get count safely\n// Access the fullNames array prepared earlier (available via closure)\n// kksChartResult.fullNames should be available in this scope\nconst fullName=(_kksChartResult$fullN=kksChartResult.fullNames)===null||_kksChartResult$fullN===void 0?void 0:_kksChartResult$fullN[labelIndex];// Use optional chaining\n// Use the full name if available, otherwise fallback to the axis label (short name)\nconst displayLabel=fullName||context.label||'';// context.label is the short name\nreturn`${displayLabel}: ${count}`;// Tooltip format: \"Full Name (or Short Name): Count\"\n}catch(e){console.error(\"Error in KKS tooltip callback:\",e);// Provide a fallback tooltip text in case of an error\nreturn`${context.label||'Ошибка'}: ${context.parsed.y||0}`;}}}};return baseOpts;},[commonOptions,user.role,getWorkerName,kksChartResult.fullNames]);// Dependency on fullNames is crucial for the tooltip\n// --- Helper Function: Format Date (Memoized) ---\nconst formatDate=useCallback(dateString=>{if(!dateString)return'N/A';// Handle null or empty date strings\ntry{const date=new Date(dateString);// Check if the date object is valid\nreturn isNaN(date.getTime())?'Неверная дата':date.toLocaleDateString('ru-RU');// Use Russian locale for DD.MM.YYYY\n}catch(e){console.error(\"Error formatting date:\",dateString,e);return'Ошибка даты';// Return error string if parsing fails\n}},[]);// No dependencies needed\n// --- Rendering Logic ---\n// Loading State\nif(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"});// Error State\nif(error)return/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"header-buttons\",style:{justifyContent:'center',marginTop:'20px'},children:/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,className:\"back-button\",children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"})})]});// Main Content Render\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,className:\"back-button\",children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"logout-button\",children:\"\\u0412\\u044B\\u0439\\u0442\\u0438\"})]})]}),(user===null||user===void 0?void 0:user.role)===1&&/*#__PURE__*/_jsxs(\"div\",{className:\"controls-container\",children:[workers.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"worker-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"worker-select\",children:\"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"worker-select\",value:selectedWorker!==null&&selectedWorker!==void 0?selectedWorker:''// Controlled component value, handle null state\n,onChange:handleWorkerChange,className:\"worker-select\",disabled:loading// Disable while loading (though loading screen handles this mostly)\n,children:workers.map(worker=>/*#__PURE__*/_jsx(\"option\",{value:worker.ID_Worker,children:worker.FName_Worker||`ID: ${worker.ID_Worker}`},worker.ID_Worker))})]}):/*#__PURE__*/// Message if workers list couldn't be loaded or is empty\n_jsx(\"p\",{className:\"no-workers-message\",children:\"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0440\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u043E\\u0432 \\u043D\\u0435 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D \\u0438\\u043B\\u0438 \\u043F\\u0443\\u0441\\u0442.\"}),selectedWorker!==null&&/*#__PURE__*/_jsxs(\"div\",{className:\"view-mode-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:`view-mode-button ${viewMode==='analysis'?'active':''}`,onClick:()=>handleViewModeChange('analysis'),\"aria-pressed\":viewMode==='analysis'// Accessibility\n,children:\"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0437 (\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A\\u0438)\"}),/*#__PURE__*/_jsx(\"button\",{className:`view-mode-button ${viewMode==='documents'?'active':''}`,onClick:()=>handleViewModeChange('documents'),\"aria-pressed\":viewMode==='documents'// Accessibility\n,children:\"\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B (\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A)\"})]}),selectedWorker===null&&workers.length>0&&/*#__PURE__*/_jsx(\"p\",{className:\"select-worker-prompt\",children:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u0430 \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445.\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"content-area\",children:viewMode==='analysis'?/*#__PURE__*/// --- Analysis View (Charts) ---\n_jsxs(\"div\",{className:\"charts-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"k-coefficient-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u041A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442 \\u0434\\u0438\\u043D\\u0430\\u043C\\u0438\\u043A\\u0438 \\u041A\\u041A\\u0421\"}),/*#__PURE__*/_jsx(\"div\",{className:\"k-value\",children:kCoefficient}),/*#__PURE__*/_jsx(\"div\",{className:\"k-description\",children:\"\\u041A\\u043E\\u044D\\u0444\\u0444\\u0438\\u0446\\u0438\\u0435\\u043D\\u0442 K \\u043F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0435\\u0442 \\u0441\\u0443\\u043C\\u043C\\u0443 \\u043F\\u0440\\u0438\\u0440\\u0430\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430 \\u0414\\u041E\\u041A, \\u043F\\u043E\\u043B\\u0443\\u0447\\u0435\\u043D\\u043D\\u044B\\u0445 \\u043A \\u043A\\u0430\\u0436\\u0434\\u043E\\u043C\\u0443 \\u0433\\u043E\\u0434\\u0443 \\u0432 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\\u0435 \\u043E\\u0446\\u0435\\u043D\\u043A\\u0438. \\u0427\\u0435\\u043C \\u0432\\u044B\\u0448\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 K, \\u0442\\u0435\\u043C \\u0431\\u043E\\u043B\\u0435\\u0435 \\u043F\\u0440\\u043E\\u0433\\u0440\\u0435\\u0441\\u0441\\u0438\\u0432\\u043D\\u044B\\u043C \\u044F\\u0432\\u043B\\u044F\\u0435\\u0442\\u0441\\u044F \\u0440\\u043E\\u0441\\u0442 \\u043A\\u0432\\u0430\\u043B\\u0438\\u0444\\u0438\\u043A\\u0430\\u0446\\u0438\\u0438 \\u0440\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\\u0430.\"})]}),(user.role!==1||selectedWorker!==null)&&filteredDocuments.length>0?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-wrapper\",children:yearlyChartResult.years.length>0?/*#__PURE__*/_jsx(Bar,{options:yearlyOptions,data:yearlyData}):/*#__PURE__*/_jsx(\"p\",{className:\"no-data-message\",children:\"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u0433\\u043E\\u0434\\u0430\\u043C.\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-wrapper\",children:yearlyChartResult.years.length>0?/*#__PURE__*/_jsx(Bar,{options:cumulativeOptions,data:cumulativeData}):/*#__PURE__*/_jsx(\"p\",{className:\"no-data-message\",children:\"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u0433\\u043E\\u0434\\u0430\\u043C.\"})// Redundant but harmless\n}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-wrapper kks-chart-wrapper\",children:kksChartResult.labels.length>0?/*#__PURE__*/_jsx(Bar,{options:kksOptions,data:kksData}):/*#__PURE__*/_jsx(\"p\",{className:\"no-data-message\",children:\"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E \\u043A\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u044F\\u043C \\u041A\\u041A\\u0421 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F.\"})})]}):/*#__PURE__*/// Message when no documents are available for the current view/filter\n_jsx(\"div\",{className:\"no-data-message full-width-message\",children:user.role===1?selectedWorker===null?\"Пожалуйста, выберите работника для просмотра анализа.\":`Нет документов для анализа у выбранного работника (${getWorkerName()}).`:\"У вас пока нет загруженных документов для анализа.\"})]}):/*#__PURE__*/// --- Documents View (Table) ---\n_jsx(\"div\",{className:\"documents-list\",children:(user.role!==1||selectedWorker!==null)&&filteredDocuments.length>0?/*#__PURE__*/_jsxs(\"table\",{className:\"documents-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[user.role===1&&/*#__PURE__*/_jsx(\"th\",{children:\"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 \\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F (\\u041A\\u0440\\u0430\\u0442\\u043A\\u043E)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u0420\\u0435\\u0433. \\u043D\\u043E\\u043C\\u0435\\u0440\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u0414\\u0430\\u0442\\u0430 \\u0432\\u044B\\u0434\\u0430\\u0447\\u0438\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredDocuments.map(doc=>/*#__PURE__*/_jsxs(\"tr\",{children:[user.role===1&&/*#__PURE__*/_jsx(\"td\",{children:doc.WorkerName||getWorkerName()||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:doc.ProgramName||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:doc.OrgSName||doc.OrgFName||'N/A'}),\" \",/*#__PURE__*/_jsx(\"td\",{children:doc.regnumber||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:formatDate(doc.DateIssue)}),\" \",/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"details-button\",onClick:()=>openModal(doc)// Pass the whole document object\n,children:\"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\\u0441\\u0442\\u0438\"})})]},doc.ID_Document))})]}):/*#__PURE__*/// Message when no documents are available for the table view\n_jsx(\"div\",{className:\"no-data-message full-width-message\",children:user.role===1?selectedWorker===null?\"Пожалуйста, выберите работника для просмотра списка документов.\":`Нет документов для отображения у выбранного работника (${getWorkerName()}).`:\"У вас пока нет загруженных документов.\"})})}),/*#__PURE__*/_jsx(Modal,{isOpen:isModalOpen,onRequestClose:closeModal,contentLabel:\"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430\"// Accessibility label\n,className:\"modal-content\"// Class for styling the modal content\n,overlayClassName:\"modal-overlay\"// Class for styling the background overlay\n,ariaHideApp:true// Helps with screen readers\n,children:selectedDocumentForModal?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u0430 \\u2116 \",selectedDocumentForModal.regnumber||selectedDocumentForModal.ID_Document]}),/*#__PURE__*/_jsx(\"button\",{onClick:closeModal,className:\"modal-close-button\",\"aria-label\":\"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",children:\"\\xD7\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-details-grid\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0420\\u0430\\u0431\\u043E\\u0442\\u043D\\u0438\\u043A:\"}),\" \",selectedDocumentForModal.WorkerName||getWorkerName()||'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 \\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F:\"}),\" \",selectedDocumentForModal.ProgramName||'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F (\\u043F\\u043E\\u043B\\u043D\\u043E\\u0435):\"}),\" \",selectedDocumentForModal.OrgFName||'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F (\\u043A\\u0440\\u0430\\u0442\\u043A\\u043E\\u0435):\"}),\" \",selectedDocumentForModal.OrgSName||'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440:\"}),\" \",selectedDocumentForModal.regnumber||'N/A']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u0414\\u0430\\u0442\\u0430 \\u0432\\u044B\\u0434\\u0430\\u0447\\u0438:\"}),\" \",formatDate(selectedDocumentForModal.DateIssue)]}),/*#__PURE__*/_jsxs(\"p\",{className:\"kks-details\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u041A\\u0440\\u0438\\u0442\\u0435\\u0440\\u0438\\u0438 \\u041A\\u041A\\u0421:\"}),Array.isArray(selectedDocumentForModal.KKS_Data)&&selectedDocumentForModal.KKS_Data.length>0?selectedDocumentForModal.KKS_Data.map(k=>k.fullName||k.shortName)// Prefer full name, fallback to short\n.filter(Boolean)// Remove any null/empty values\n.join(', ')// Join with comma and space\n:'Нет данных',\" \"]})]})]}):/*#__PURE__*/// Fallback message if modal opens before data is ready (shouldn't usually happen)\n_jsx(\"p\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0435\\u0442\\u0430\\u043B\\u0435\\u0439...\"})})]});}export default DocumentAnalysis;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","axios","useNavigate","Modal","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","apiUrl","process","env","REACT_APP_API_URL","setAppElement","register","DocumentAnalysis","documents","setDocuments","workers","setWorkers","selectedWorker","setSelectedWorker","loading","setLoading","error","setError","viewMode","setViewMode","isModalOpen","setIsModalOpen","selectedDocumentForModal","setSelectedDocumentForModal","navigate","user","JSON","parse","localStorage","getItem","getWorkerName","role","Array","isArray","worker","find","w","ID_Worker","FName_Worker","fetchData","documentsResponse","get","params","userId","workerId","data","console","Error","log","length","_documentsResponse$da","KKS_Data","workersResponse","err","_err$response","_err$response$data","response","message","handleLogout","removeItem","handleBack","handleWorkerChange","event","workerIdValue","target","value","parseInt","handleViewModeChange","mode","openModal","doc","closeModal","filteredDocuments","filter","prepareYearlyChartData","docs","documentsByYear","reduce","acc","DateIssue","date","Date","isNaN","getTime","year","getFullYear","warn","ID_Document","e","yearsInData","Object","keys","map","Number","sort","a","b","currentYear","minDataYear","Math","min","maxDataYear","max","startYear","endYear","allYears","push","counts","cumulativeCounts","count","index","years","prepareKKSChartData","kksAggregated","kksItems","forEach","item","_item$shortName","_item$fullName","shortName","trim","fullName","sortedShortNames","localeCompare","labels","fullNames","key","yearlyChartResult","kksChartResult","calculateK","K","i","diff","kCoefficient","yearlyData","datasets","label","backgroundColor","borderColor","borderWidth","cumulativeData","kksData","commonOptions","titleText","xAxisText","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","font","size","tooltip","intersect","scales","x","ticks","autoSkip","maxRotation","minRotation","y","beginAtZero","precision","yearlyOptions","cumulativeOptions","kksOptions","baseOpts","callbacks","context","_ref","_context$parsed$y","_kksChartResult$fullN","labelIndex","dataIndex","parsed","dataset","displayLabel","formatDate","dateString","toLocaleDateString","className","children","style","justifyContent","marginTop","onClick","htmlFor","id","onChange","disabled","options","WorkerName","ProgramName","OrgSName","OrgFName","regnumber","isOpen","onRequestClose","contentLabel","overlayClassName","ariaHideApp","k","Boolean","join"],"sources":["D:/Amina/VScode/FQW_new/src/components/DocumentAnalysis.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport './DocumentAnalysis.css'; // Make sure this CSS file exists and is styled appropriately\n\nconst apiUrl = process.env.REACT_APP_API_URL\n\n// Set the app element for react-modal accessibility\nModal.setAppElement('#root'); // Adjust '#root' if your app's root element has a different ID\n\n// Register Chart.js components\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nfunction DocumentAnalysis() {\n    // State Variables\n    const [documents, setDocuments] = useState([]);\n    const [workers, setWorkers] = useState([]);\n    const [selectedWorker, setSelectedWorker] = useState(null); // Store worker ID\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [viewMode, setViewMode] = useState('analysis'); // 'analysis' or 'documents'\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [selectedDocumentForModal, setSelectedDocumentForModal] = useState(null);\n\n    // Hooks\n    const navigate = useNavigate();\n    const user = JSON.parse(localStorage.getItem('user')); // Assuming user info is stored here\n\n    // --- Helper Function: Get Worker Name (Memoized) ---\n    const getWorkerName = useCallback(() => {\n        // Ensure workers is an array before using find\n        if (user?.role !== 1 || !selectedWorker || !Array.isArray(workers)) return '';\n        const worker = workers.find(w => w.ID_Worker === selectedWorker);\n        return worker ? worker.FName_Worker : `ID ${selectedWorker}`; // Use FName_Worker or adjust as needed\n    }, [user?.role, selectedWorker, workers]); // Dependencies for getWorkerName\n\n    // --- useEffect for Data Fetching ---\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            setError('');\n            try {\n                // Fetch documents based on user ID and role\n                const documentsResponse = await axios.get(`${apiUrl}/api/documents`, {\n                    params: { userId: user.workerId, role: user.role }\n                });\n\n                // Validate documents response\n                if (!Array.isArray(documentsResponse.data)) {\n                    console.error('Documents API did not return an array:', documentsResponse.data);\n                    throw new Error('Неверный формат данных документов');\n                }\n                setDocuments(documentsResponse.data);\n                console.log(\"Frontend: Documents received:\", documentsResponse.data.length);\n                 if (documentsResponse.data.length > 0) {\n                     // Log the structure of KKS_Data for the first doc for verification\n                     console.log(\"Frontend: Sample KKS_Data in first doc:\", documentsResponse.data[0]?.KKS_Data);\n                 }\n\n                // Fetch workers list if the user is an admin (role === 1)\n                if (user.role === 1) {\n                    const workersResponse = await axios.get(`${apiUrl}/api/workers`);\n\n                    // Validate workers response\n                    if (!Array.isArray(workersResponse.data)) {\n                         console.error(\"Workers API did not return an array:\", workersResponse.data);\n                         setWorkers([]); // Set empty array on error\n                    } else {\n                        setWorkers(workersResponse.data);\n                        // Set the initial selected worker ONLY if workers exist and NO worker is currently selected\n                        // This prevents resetting selection if the component re-renders for other reasons\n                        if (workersResponse.data.length > 0 && selectedWorker === null) {\n                            setSelectedWorker(workersResponse.data[0].ID_Worker);\n                        } else if (workersResponse.data.length === 0) {\n                             setSelectedWorker(null); // No workers available\n                        }\n                    }\n                } else {\n                    // Not an admin, clear workers and selection\n                    setWorkers([]);\n                    setSelectedWorker(null);\n                }\n\n            } catch (err) {\n                console.error('Ошибка при загрузке данных:', err);\n                setError(err.response?.data?.error || err.message || 'Не удалось загрузить данные');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (user?.workerId) {\n            fetchData();\n        } else {\n            setError(\"Пользователь не найден. Пожалуйста, войдите снова.\");\n            setLoading(false);\n            // Optional: Redirect to login\n            // navigate('/login');\n        }\n        // Dependency array includes user info and selectedWorker (to potentially refetch if admin changes worker, though filtering handles display)\n        // Note: Adding selectedWorker here caused a re-fetch loop in v1 - be careful. Let's keep it based on user info for initial load.\n        // Re-filtering happens via useMemo when selectedWorker changes.\n    }, [user?.workerId, user?.role]); // Re-run effect if user ID or role changes\n\n\n    // --- Event Handlers ---\n    const handleLogout = () => {\n        localStorage.removeItem('user');\n        navigate('/login');\n    };\n\n    const handleBack = () => {\n        // Navigate back based on user role\n        navigate(user?.role === 1 ? '/admin' : '/user'); // Navigate to admin or user dashboard\n    };\n\n    const handleWorkerChange = (event) => {\n        const workerIdValue = event.target.value;\n        // Parse to integer, handle potential empty string value from a \"--Select--\" option\n        const workerId = workerIdValue ? parseInt(workerIdValue, 10) : null;\n        setSelectedWorker(workerId);\n    };\n\n    const handleViewModeChange = (mode) => {\n        setViewMode(mode);\n    };\n\n    // --- Modal Handlers ---\n    const openModal = (doc) => {\n        console.log(\"Opening modal for doc:\", doc);\n        setSelectedDocumentForModal(doc);\n        setIsModalOpen(true);\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setSelectedDocumentForModal(null); // Clear selected doc when closing\n    };\n\n    // --- Filtered Documents (Memoized) ---\n    const filteredDocuments = useMemo(() => {\n        if (loading || !Array.isArray(documents)) return []; // Return empty if loading or documents not an array\n\n        if (user?.role === 1) {\n            // Admin view: filter by selectedWorker ID\n            return selectedWorker !== null\n                ? documents.filter(doc => doc.ID_Worker === selectedWorker)\n                : []; // Show nothing if admin role but no worker selected yet\n        } else {\n            // Non-admin view: show all documents fetched for them (backend already filtered)\n            return documents;\n        }\n    }, [documents, selectedWorker, user?.role, loading]); // Recalculate when these change\n\n    // --- Chart Data Preparation Functions (Memoized with useCallback) ---\n\n    // 1. Yearly & Cumulative Chart Data\n    const prepareYearlyChartData = useCallback((docs) => {\n        const documentsByYear = docs.reduce((acc, doc) => {\n            try {\n                // Ensure DateIssue exists and is a valid date string\n                if (doc.DateIssue) {\n                    const date = new Date(doc.DateIssue);\n                    if (!isNaN(date.getTime())) { // Check if date is valid\n                        const year = date.getFullYear();\n                        acc[year] = (acc[year] || 0) + 1;\n                    } else {\n                        console.warn(\"Invalid DateIssue format:\", doc.ID_Document, doc.DateIssue);\n                    }\n                } else {\n                    console.warn(\"Missing DateIssue:\", doc.ID_Document);\n                }\n            } catch (e) {\n                console.error(\"Error parsing DateIssue:\", doc.ID_Document, doc.DateIssue, e);\n            }\n            return acc;\n        }, {});\n\n        const yearsInData = Object.keys(documentsByYear).map(Number).sort((a, b) => a - b);\n        const currentYear = new Date().getFullYear();\n\n        const minDataYear = yearsInData.length > 0 ? Math.min(...yearsInData) : currentYear;\n        const maxDataYear = yearsInData.length > 0 ? Math.max(...yearsInData) : currentYear;\n\n        // Determine the range of years for the chart (from earliest data year to at least the current year)\n        const startYear = minDataYear;\n        const endYear = Math.max(maxDataYear, currentYear);\n\n        const allYears = [];\n        // Populate all years in the range\n        if (startYear <= endYear) {\n            for (let year = startYear; year <= endYear; year++) {\n                allYears.push(year);\n            }\n        } else if (docs.length === 0) { // Handle case with no documents - maybe show current year?\n            // Optionally add current year: allYears.push(currentYear);\n        }\n\n        // Map counts for each year in the final range\n        const counts = allYears.map(year => documentsByYear[year] || 0);\n\n        // Calculate cumulative counts\n        const cumulativeCounts = counts.reduce((acc, count, index) => {\n            acc.push(index === 0 ? count : (acc[index - 1] || 0) + count);\n            return acc;\n        }, []);\n\n        return { years: allYears, counts, cumulativeCounts };\n    }, []); // useCallback as the function definition itself doesn't depend on props/state\n\n    // 2. KKS Criteria Chart Data (Processing KKS_Data array)\n    const prepareKKSChartData = useCallback((docs) => {\n        // Aggregate counts per KKS criterion (using shortName as key)\n        const kksAggregated = docs.reduce((acc, doc) => {\n            const kksItems = doc.KKS_Data; // Expecting an array like [{ shortName: '..', fullName: '..' }, ...]\n\n            // Check if kksItems is a valid array\n            if (Array.isArray(kksItems)) {\n                kksItems.forEach(item => {\n                    const shortName = item?.shortName?.trim(); // Use optional chaining and trim\n                    const fullName = item?.fullName?.trim();\n\n                    if (shortName) { // Process only if shortName exists\n                        if (!acc[shortName]) {\n                            // Initialize entry for this shortName if it's the first time seen\n                            acc[shortName] = {\n                                shortName: shortName,\n                                fullName: fullName || shortName, // Use shortName as fallback if fullName is missing\n                                count: 0\n                            };\n                        }\n                        // Increment the count for this KKS criterion\n                        acc[shortName].count += 1;\n                    } else {\n                         console.warn(\"KKS item missing shortName in doc:\", doc.ID_Document, item);\n                    }\n                });\n            } else if (kksItems) {\n                 // Log if KKS_Data exists but isn't an array (should be handled by backend ideally)\n                 console.error(\"KKS_Data is not an array for doc:\", doc.ID_Document, kksItems);\n            }\n            // If KKS_Data is null/undefined or invalid, just skip and continue\n\n            return acc;\n        }, {}); // Initial value is an empty object\n\n        // Sort aggregated data by shortName for consistent chart axis order\n        const sortedShortNames = Object.keys(kksAggregated).sort((a, b) => a.localeCompare(b));\n\n        // Extract data arrays needed for Chart.js\n        const labels = sortedShortNames; // X-axis labels will be the Short Names\n        const fullNames = sortedShortNames.map(key => kksAggregated[key].fullName); // Full Names for tooltips\n        const counts = sortedShortNames.map(key => kksAggregated[key].count); // Bar heights\n\n        console.log(\"Prepared KKS Chart Data:\", { labels, fullNames, counts }); // Log for debugging\n\n        return {\n            labels: labels,       // Short names for axis\n            fullNames: fullNames, // Full names for tooltips\n            counts: counts        // Counts for bar heights\n        };\n    }, []); // useCallback as the function definition is stable\n\n    // --- Memoized Chart Results ---\n    // These recalculate only when filteredDocuments or the prep function changes (which it won't due to useCallback)\n    const yearlyChartResult = useMemo(() => prepareYearlyChartData(filteredDocuments), [filteredDocuments, prepareYearlyChartData]);\n    const kksChartResult = useMemo(() => prepareKKSChartData(filteredDocuments), [filteredDocuments, prepareKKSChartData]);\n\n    // --- Расчет коэффициента K ---\n    const calculateK = useCallback((cumulativeCounts) => {\n        if (!Array.isArray(cumulativeCounts) || cumulativeCounts.length < 2) return 0;\n        \n        let K = 0;\n        for (let i = 1; i < cumulativeCounts.length; i++) {\n            const diff = cumulativeCounts[i] - cumulativeCounts[i-1];\n            if (diff > 0) {\n                K += diff;\n            }\n        }\n        return K;\n    }, []);\n\n    const kCoefficient = useMemo(() => {\n        return calculateK(yearlyChartResult.cumulativeCounts);\n    }, [yearlyChartResult.cumulativeCounts, calculateK]);\n\n    // --- Memoized Chart Data Objects (for react-chartjs-2) ---\n    const yearlyData = useMemo(() => ({\n        labels: yearlyChartResult.years,\n        datasets: [{\n            label: user.role === 1 ? `Документы (по годам) - ${getWorkerName() || 'Выбор...'}` : 'Мои документы (по годам)',\n            data: yearlyChartResult.counts,\n            backgroundColor: 'rgba(54, 162, 235, 0.6)', // Blue\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1,\n        }],\n    }), [yearlyChartResult, user.role, getWorkerName]); // Update when results or worker name changes\n\n    const cumulativeData = useMemo(() => ({\n        labels: yearlyChartResult.years,\n        datasets: [{\n            label: user.role === 1 ? `График с приращением - ${getWorkerName() || 'Выбор...'}` : 'Мой график с приращением',\n            data: yearlyChartResult.cumulativeCounts,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)', // Teal\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n        }],\n    }), [yearlyChartResult, user.role, getWorkerName]); // Update when results or worker name changes\n\n    const kksData = useMemo(() => ({\n        labels: kksChartResult.labels, // Use SHORT names for axis labels\n        datasets: [{\n            label: user.role === 1 ? `Документы по критериям ККС - ${getWorkerName() || 'Выбор...'}` : 'Мои документы по критериям ККС',\n            data: kksChartResult.counts,\n            backgroundColor: 'rgba(255, 159, 64, 0.6)', // Orange\n            borderColor: 'rgba(255, 159, 64, 1)',\n            borderWidth: 1,\n        }],\n    }), [kksChartResult, user.role, getWorkerName]); // Update when KKS results or worker name changes\n\n    // --- Chart Options (Memoized) ---\n\n    // Generator for common options\n     const commonOptions = useMemo(() => (titleText, xAxisText) => ({\n         responsive: true,\n         maintainAspectRatio: false, // Allow chart to fill container height\n         plugins: {\n             legend: {\n                 position: 'top', // Position legend at the top\n             },\n             title: {\n                 display: true,\n                 text: titleText, // Dynamic title\n                 font: { size: 16 }, // Set title font size\n             },\n             tooltip: { // Base tooltip configuration\n                 mode: 'index', // Show tooltips for all datasets at that index\n                 intersect: false, // Tooltip appears even if not directly hovering over the bar\n             }\n         },\n         scales: {\n             x: { // X-axis configuration\n                 title: {\n                     display: true,\n                     text: xAxisText, // Dynamic X-axis label\n                 },\n                 ticks: {\n                     autoSkip: true, // Automatically skip labels if they overlap\n                     maxRotation: 45, // Max rotation for labels\n                     minRotation: 0 // Min rotation\n                 }\n             },\n             y: { // Y-axis configuration\n                 beginAtZero: true, // Start Y-axis at 0\n                 title: {\n                     display: true,\n                     text: 'Количество документов', // Y-axis label\n                 },\n                 ticks: {\n                      // Ensure integer ticks for document counts\n                     precision: 0\n                 }\n             },\n         },\n     }), []); // No dependencies for the function generator itself\n\n    // Specific options for each chart using the common generator\n    const yearlyOptions = useMemo(() => commonOptions(\n        user.role === 1 ? `Количество документов по годам (${getWorkerName() || 'Выбор...'})` : 'Мои документы по годам',\n        'Год' // X-axis title\n    ), [commonOptions, user.role, getWorkerName]);\n\n    const cumulativeOptions = useMemo(() => commonOptions(\n        user.role === 1 ? `График по годам с приращением (${getWorkerName() || 'Выбор...'})` : 'Мой график по годам с приращением',\n        'Год' // X-axis title\n    ), [commonOptions, user.role, getWorkerName]);\n\n    // KKS Options with custom tooltip callback\n    const kksOptions = useMemo(() => {\n        const title = user.role === 1\n            ? `Распределение по критериям ККС (${getWorkerName() || 'Выбор...'})`\n            : 'Мое распределение по критериям ККС';\n        const baseOpts = commonOptions(title, 'Критерий ККС (сокр.)'); // X-axis title notes abbreviation\n\n        // Customize tooltips specifically for the KKS chart to show full names\n        baseOpts.plugins.tooltip = {\n            ...baseOpts.plugins.tooltip, // Keep existing base settings (mode, intersect)\n            callbacks: {\n                label: function(context) { // Use 'function' to access 'this' if needed, or arrow function\n                    try {\n                        const labelIndex = context.dataIndex; // Index of the data point\n                        const count = context.parsed.y ?? context.dataset.data[labelIndex] ?? 0; // Get count safely\n\n                        // Access the fullNames array prepared earlier (available via closure)\n                        // kksChartResult.fullNames should be available in this scope\n                        const fullName = kksChartResult.fullNames?.[labelIndex]; // Use optional chaining\n\n                        // Use the full name if available, otherwise fallback to the axis label (short name)\n                        const displayLabel = fullName || context.label || ''; // context.label is the short name\n\n                        return `${displayLabel}: ${count}`; // Tooltip format: \"Full Name (or Short Name): Count\"\n                    } catch (e) {\n                        console.error(\"Error in KKS tooltip callback:\", e);\n                        // Provide a fallback tooltip text in case of an error\n                        return `${context.label || 'Ошибка'}: ${context.parsed.y || 0}`;\n                    }\n                }\n            }\n        };\n\n        return baseOpts;\n\n    }, [commonOptions, user.role, getWorkerName, kksChartResult.fullNames]); // Dependency on fullNames is crucial for the tooltip\n\n\n    // --- Helper Function: Format Date (Memoized) ---\n     const formatDate = useCallback((dateString) => {\n         if (!dateString) return 'N/A'; // Handle null or empty date strings\n         try {\n             const date = new Date(dateString);\n             // Check if the date object is valid\n             return isNaN(date.getTime()) ? 'Неверная дата' : date.toLocaleDateString('ru-RU'); // Use Russian locale for DD.MM.YYYY\n         } catch (e) {\n             console.error(\"Error formatting date:\", dateString, e);\n             return 'Ошибка даты'; // Return error string if parsing fails\n         }\n     }, []); // No dependencies needed\n\n\n    // --- Rendering Logic ---\n\n    // Loading State\n    if (loading) return <div className=\"loading\">Загрузка данных...</div>;\n\n    // Error State\n    if (error) return (\n        <div className=\"error-container\">\n            <div className=\"error\">{error}</div>\n            {/* Provide buttons even on error */}\n             <div className=\"header-buttons\" style={{ justifyContent: 'center', marginTop: '20px' }}>\n                 <button onClick={handleBack} className=\"back-button\">Назад</button>\n                  {/* Optionally show logout even on error */}\n                 {/* <button onClick={handleLogout} className=\"logout-button\">Выйти</button> */}\n             </div>\n        </div>\n    );\n\n    // Main Content Render\n    return (\n        <div className=\"analysis-container\">\n            {/* Header Section */}\n            <div className=\"analysis-header\">\n                <h1>Анализ документов</h1>\n                <div className=\"header-buttons\">\n                    <button onClick={handleBack} className=\"back-button\">Назад</button>\n                    <button onClick={handleLogout} className=\"logout-button\">Выйти</button>\n                </div>\n            </div>\n\n            {/* Controls Section (Admin only) */}\n            {user?.role === 1 && (\n                <div className=\"controls-container\">\n                    {/* Worker Selector Dropdown */}\n                     {workers.length > 0 ? (\n                         <div className=\"worker-selector\">\n                             <label htmlFor=\"worker-select\">Работник:</label>\n                             <select\n                                 id=\"worker-select\"\n                                 value={selectedWorker ?? ''} // Controlled component value, handle null state\n                                 onChange={handleWorkerChange}\n                                 className=\"worker-select\"\n                                 disabled={loading} // Disable while loading (though loading screen handles this mostly)\n                             >\n                                  {/* Optional: Default unselectable option */}\n                                 {/* <option value=\"\" disabled>-- Выберите работника --</option> */}\n                                 {workers.map(worker => (\n                                     <option key={worker.ID_Worker} value={worker.ID_Worker}>\n                                         {/* Display worker name - ensure FName_Worker or similar exists */}\n                                         {worker.FName_Worker || `ID: ${worker.ID_Worker}`}\n                                     </option>\n                                 ))}\n                             </select>\n                         </div>\n                     ) : (\n                          // Message if workers list couldn't be loaded or is empty\n                         <p className=\"no-workers-message\">Список работников не загружен или пуст.</p>\n                     )}\n\n                    {/* View Mode Toggle Buttons (Show only if a worker is selected) */}\n                    {selectedWorker !== null && (\n                        <div className=\"view-mode-buttons\">\n                            <button\n                                className={`view-mode-button ${viewMode === 'analysis' ? 'active' : ''}`}\n                                onClick={() => handleViewModeChange('analysis')}\n                                aria-pressed={viewMode === 'analysis'} // Accessibility\n                            >\n                                Анализ (Графики)\n                            </button>\n                            <button\n                                className={`view-mode-button ${viewMode === 'documents' ? 'active' : ''}`}\n                                onClick={() => handleViewModeChange('documents')}\n                                aria-pressed={viewMode === 'documents'} // Accessibility\n                            >\n                                Документы (Список)\n                            </button>\n                        </div>\n                    )}\n                     {selectedWorker === null && workers.length > 0 && (\n                          <p className=\"select-worker-prompt\">Выберите работника для просмотра данных.</p>\n                     )}\n                </div>\n            )}\n\n            {/* Content Area: Charts or Table */}\n            <div className=\"content-area\">\n                {viewMode === 'analysis' ? (\n                    // --- Analysis View (Charts) ---\n                    <div className=\"charts-grid\">\n                        {/* Коэффициент K */}\n                        <div className=\"k-coefficient-container\">\n                            <h3>Коэффициент динамики ККС</h3>\n                            <div className=\"k-value\">{kCoefficient}</div>\n                            <div className=\"k-description\">\n                                Коэффициент K показывает сумму приращений количества ДОК, полученных к каждому году в периоде оценки.\n                                Чем выше значение K, тем более прогрессивным является рост квалификации работника.\n                            </div>\n                        </div>\n\n                        {/* Conditional Rendering based on whether there are documents to display */}\n                         {(user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? (\n                             <>\n                                 {/* Yearly Chart */}\n                                 <div className=\"chart-wrapper\">\n                                      {yearlyChartResult.years.length > 0 ? (\n                                          <Bar options={yearlyOptions} data={yearlyData} />\n                                      ) : (\n                                          <p className=\"no-data-message\">Нет данных по годам.</p>\n                                      )}\n                                 </div>\n                                 {/* Cumulative Chart */}\n                                 <div className=\"chart-wrapper\">\n                                      {yearlyChartResult.years.length > 0 ? (\n                                          <Bar options={cumulativeOptions} data={cumulativeData} />\n                                      ) : (\n                                            <p className=\"no-data-message\">Нет данных по годам.</p> // Redundant but harmless\n                                      )}\n                                 </div>\n                                 {/* KKS Chart (Takes full width potentially on smaller screens, adjust CSS needed) */}\n                                 <div className=\"chart-wrapper kks-chart-wrapper\">\n                                     {/* Check if there are KKS labels to display */}\n                                      {kksChartResult.labels.length > 0 ? (\n                                          <Bar options={kksOptions} data={kksData} />\n                                      ) : (\n                                          <p className=\"no-data-message\">Нет данных по критериям ККС для отображения.</p>\n                                      )}\n                                 </div>\n                             </>\n                         ) : (\n                             // Message when no documents are available for the current view/filter\n                             <div className=\"no-data-message full-width-message\">\n                                 {user.role === 1 ?\n                                     (selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра анализа.\" : `Нет документов для анализа у выбранного работника (${getWorkerName()}).`) :\n                                     \"У вас пока нет загруженных документов для анализа.\"\n                                 }\n                             </div>\n                         )}\n                    </div>\n                ) : (\n                    // --- Documents View (Table) ---\n                     <div className=\"documents-list\">\n                         {/* Conditional Rendering for the table */}\n                          {(user.role !== 1 || selectedWorker !== null) && filteredDocuments.length > 0 ? (\n                              <table className=\"documents-table\">\n                                  <thead>\n                                      <tr>\n                                          {/* Show Worker column only for Admin */}\n                                          {user.role === 1 && <th>Работник</th>}\n                                          <th>Программа обучения</th>\n                                          <th>Организация (Кратко)</th>\n                                          <th>Рег. номер</th>\n                                          <th>Дата выдачи</th>\n                                          <th>Действия</th>\n                                      </tr>\n                                  </thead>\n                                  <tbody>\n                                      {filteredDocuments.map((doc) => (\n                                          <tr key={doc.ID_Document}>\n                                              {/* Worker Name cell (Admin only) */}\n                                              {user.role === 1 && <td>{doc.WorkerName || getWorkerName() || 'N/A'}</td>}\n                                              {/* Document Details cells */}\n                                              <td>{doc.ProgramName || 'N/A'}</td>\n                                              <td>{doc.OrgSName || doc.OrgFName || 'N/A'}</td> {/* Display Short name, fallback to Full */}\n                                              <td>{doc.regnumber || 'N/A'}</td>\n                                              <td>{formatDate(doc.DateIssue)}</td> {/* Use formatted date */}\n                                              <td>\n                                                  {/* Button to open the modal */}\n                                                  <button\n                                                      className=\"details-button\"\n                                                      onClick={() => openModal(doc)} // Pass the whole document object\n                                                  >\n                                                      Подробности\n                                                  </button>\n                                              </td>\n                                          </tr>\n                                      ))}\n                                  </tbody>\n                              </table>\n                          ) : (\n                              // Message when no documents are available for the table view\n                              <div className=\"no-data-message full-width-message\">\n                                  {user.role === 1 ?\n                                      (selectedWorker === null ? \"Пожалуйста, выберите работника для просмотра списка документов.\" : `Нет документов для отображения у выбранного работника (${getWorkerName()}).`) :\n                                      \"У вас пока нет загруженных документов.\"\n                                  }\n                              </div>\n                          )}\n                     </div>\n                )}\n            </div>\n\n            {/* Modal Definition */}\n            <Modal\n                isOpen={isModalOpen}\n                onRequestClose={closeModal}\n                contentLabel=\"Детали документа\" // Accessibility label\n                className=\"modal-content\" // Class for styling the modal content\n                overlayClassName=\"modal-overlay\" // Class for styling the background overlay\n                ariaHideApp={true} // Helps with screen readers\n            >\n                {/* Content inside the modal */}\n                {selectedDocumentForModal ? (\n                    <>\n                        {/* Modal Header */}\n                        <h2>Детали документа № {selectedDocumentForModal.regnumber || selectedDocumentForModal.ID_Document}</h2>\n                        <button onClick={closeModal} className=\"modal-close-button\" aria-label=\"Закрыть\">&times;</button>\n\n                        {/* Modal Body with Details */}\n                        <div className=\"modal-details-grid\">\n                             {/* Display various document details */}\n                              <p><strong>Работник:</strong> {selectedDocumentForModal.WorkerName || getWorkerName() || 'N/A'}</p>\n                              <p><strong>Программа обучения:</strong> {selectedDocumentForModal.ProgramName || 'N/A'}</p>\n                              <p><strong>Организация (полное):</strong> {selectedDocumentForModal.OrgFName || 'N/A'}</p>\n                              <p><strong>Организация (краткое):</strong> {selectedDocumentForModal.OrgSName || 'N/A'}</p>\n                              <p><strong>Регистрационный номер:</strong> {selectedDocumentForModal.regnumber || 'N/A'}</p>\n                              <p><strong>Дата выдачи:</strong> {formatDate(selectedDocumentForModal.DateIssue)}</p>\n                              {/* Add any other relevant fields from your 'doc' object */}\n\n                              {/* Display KKS Criteria */}\n                             <p className=\"kks-details\">\n                                 <strong>Критерии ККС:</strong>\n                                 {/* Check if KKS_Data is an array and has items */}\n                                  {Array.isArray(selectedDocumentForModal.KKS_Data) && selectedDocumentForModal.KKS_Data.length > 0\n                                      ? selectedDocumentForModal.KKS_Data\n                                            .map(k => k.fullName || k.shortName) // Prefer full name, fallback to short\n                                            .filter(Boolean) // Remove any null/empty values\n                                            .join(', ') // Join with comma and space\n                                      : 'Нет данных'} {/* Message if no KKS data or not an array */}\n                             </p>\n                        </div>\n                    </>\n                ) : (\n                     // Fallback message if modal opens before data is ready (shouldn't usually happen)\n                    <p>Загрузка деталей...</p>\n                )}\n            </Modal>\n        </div>\n    );\n}\n\nexport default DocumentAnalysis;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,OAAO,CAAEC,WAAW,KAAQ,OAAO,CACxE,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,KAAK,KAAM,aAAa,CAC/B,OACIC,KAAK,GAAI,CAAAC,OAAO,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MAAM,KACH,UAAU,CACjB,OAASC,GAAG,KAAQ,iBAAiB,CACrC,MAAO,wBAAwB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEjC,KAAM,CAAAC,MAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAE5C;AACAnB,KAAK,CAACoB,aAAa,CAAC,OAAO,CAAC,CAAE;AAE9B;AACAlB,OAAO,CAACmB,QAAQ,CACZlB,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,KAAK,CACLC,OAAO,CACPC,MACJ,CAAC,CAED,QAAS,CAAAc,gBAAgBA,CAAA,CAAG,CACxB;AACA,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAG9B,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAAC+B,OAAO,CAAEC,UAAU,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACiC,cAAc,CAAEC,iBAAiB,CAAC,CAAGlC,QAAQ,CAAC,IAAI,CAAC,CAAE;AAC5D,KAAM,CAACmC,OAAO,CAAEC,UAAU,CAAC,CAAGpC,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACqC,KAAK,CAAEC,QAAQ,CAAC,CAAGtC,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACuC,QAAQ,CAAEC,WAAW,CAAC,CAAGxC,QAAQ,CAAC,UAAU,CAAC,CAAE;AACtD,KAAM,CAACyC,WAAW,CAAEC,cAAc,CAAC,CAAG1C,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAAC2C,wBAAwB,CAAEC,2BAA2B,CAAC,CAAG5C,QAAQ,CAAC,IAAI,CAAC,CAE9E;AACA,KAAM,CAAA6C,QAAQ,CAAGxC,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAyC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAE;AAEvD;AACA,KAAM,CAAAC,aAAa,CAAGhD,WAAW,CAAC,IAAM,CACpC;AACA,GAAI,CAAA2C,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,IAAI,IAAK,CAAC,EAAI,CAACnB,cAAc,EAAI,CAACoB,KAAK,CAACC,OAAO,CAACvB,OAAO,CAAC,CAAE,MAAO,EAAE,CAC7E,KAAM,CAAAwB,MAAM,CAAGxB,OAAO,CAACyB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACC,SAAS,GAAKzB,cAAc,CAAC,CAChE,MAAO,CAAAsB,MAAM,CAAGA,MAAM,CAACI,YAAY,CAAG,MAAM1B,cAAc,EAAE,CAAE;AAClE,CAAC,CAAE,CAACa,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,IAAI,CAAEnB,cAAc,CAAEF,OAAO,CAAC,CAAC,CAAE;AAE3C;AACA9B,SAAS,CAAC,IAAM,CACZ,KAAM,CAAA2D,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1BxB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,EAAE,CAAC,CACZ,GAAI,CACA;AACA,KAAM,CAAAuB,iBAAiB,CAAG,KAAM,CAAAzD,KAAK,CAAC0D,GAAG,CAAC,GAAGxC,MAAM,gBAAgB,CAAE,CACjEyC,MAAM,CAAE,CAAEC,MAAM,CAAElB,IAAI,CAACmB,QAAQ,CAAEb,IAAI,CAAEN,IAAI,CAACM,IAAK,CACrD,CAAC,CAAC,CAEF;AACA,GAAI,CAACC,KAAK,CAACC,OAAO,CAACO,iBAAiB,CAACK,IAAI,CAAC,CAAE,CACxCC,OAAO,CAAC9B,KAAK,CAAC,wCAAwC,CAAEwB,iBAAiB,CAACK,IAAI,CAAC,CAC/E,KAAM,IAAI,CAAAE,KAAK,CAAC,mCAAmC,CAAC,CACxD,CACAtC,YAAY,CAAC+B,iBAAiB,CAACK,IAAI,CAAC,CACpCC,OAAO,CAACE,GAAG,CAAC,+BAA+B,CAAER,iBAAiB,CAACK,IAAI,CAACI,MAAM,CAAC,CAC1E,GAAIT,iBAAiB,CAACK,IAAI,CAACI,MAAM,CAAG,CAAC,CAAE,KAAAC,qBAAA,CACnC;AACAJ,OAAO,CAACE,GAAG,CAAC,yCAAyC,EAAAE,qBAAA,CAAEV,iBAAiB,CAACK,IAAI,CAAC,CAAC,CAAC,UAAAK,qBAAA,iBAAzBA,qBAAA,CAA2BC,QAAQ,CAAC,CAC/F,CAED;AACA,GAAI1B,IAAI,CAACM,IAAI,GAAK,CAAC,CAAE,CACjB,KAAM,CAAAqB,eAAe,CAAG,KAAM,CAAArE,KAAK,CAAC0D,GAAG,CAAC,GAAGxC,MAAM,cAAc,CAAC,CAEhE;AACA,GAAI,CAAC+B,KAAK,CAACC,OAAO,CAACmB,eAAe,CAACP,IAAI,CAAC,CAAE,CACrCC,OAAO,CAAC9B,KAAK,CAAC,sCAAsC,CAAEoC,eAAe,CAACP,IAAI,CAAC,CAC3ElC,UAAU,CAAC,EAAE,CAAC,CAAE;AACrB,CAAC,IAAM,CACHA,UAAU,CAACyC,eAAe,CAACP,IAAI,CAAC,CAChC;AACA;AACA,GAAIO,eAAe,CAACP,IAAI,CAACI,MAAM,CAAG,CAAC,EAAIrC,cAAc,GAAK,IAAI,CAAE,CAC5DC,iBAAiB,CAACuC,eAAe,CAACP,IAAI,CAAC,CAAC,CAAC,CAACR,SAAS,CAAC,CACxD,CAAC,IAAM,IAAIe,eAAe,CAACP,IAAI,CAACI,MAAM,GAAK,CAAC,CAAE,CACzCpC,iBAAiB,CAAC,IAAI,CAAC,CAAE;AAC9B,CACJ,CACJ,CAAC,IAAM,CACH;AACAF,UAAU,CAAC,EAAE,CAAC,CACdE,iBAAiB,CAAC,IAAI,CAAC,CAC3B,CAEJ,CAAE,MAAOwC,GAAG,CAAE,KAAAC,aAAA,CAAAC,kBAAA,CACVT,OAAO,CAAC9B,KAAK,CAAC,6BAA6B,CAAEqC,GAAG,CAAC,CACjDpC,QAAQ,CAAC,EAAAqC,aAAA,CAAAD,GAAG,CAACG,QAAQ,UAAAF,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAcT,IAAI,UAAAU,kBAAA,iBAAlBA,kBAAA,CAAoBvC,KAAK,GAAIqC,GAAG,CAACI,OAAO,EAAI,6BAA6B,CAAC,CACvF,CAAC,OAAS,CACN1C,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED,GAAIU,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAEmB,QAAQ,CAAE,CAChBL,SAAS,CAAC,CAAC,CACf,CAAC,IAAM,CACHtB,QAAQ,CAAC,oDAAoD,CAAC,CAC9DF,UAAU,CAAC,KAAK,CAAC,CACjB;AACA;AACJ,CACA;AACA;AACA;AACJ,CAAC,CAAE,CAACU,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmB,QAAQ,CAAEnB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,IAAI,CAAC,CAAC,CAAE;AAGlC;AACA,KAAM,CAAA2B,YAAY,CAAGA,CAAA,GAAM,CACvB9B,YAAY,CAAC+B,UAAU,CAAC,MAAM,CAAC,CAC/BnC,QAAQ,CAAC,QAAQ,CAAC,CACtB,CAAC,CAED,KAAM,CAAAoC,UAAU,CAAGA,CAAA,GAAM,CACrB;AACApC,QAAQ,CAAC,CAAAC,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,IAAI,IAAK,CAAC,CAAG,QAAQ,CAAG,OAAO,CAAC,CAAE;AACrD,CAAC,CAED,KAAM,CAAA8B,kBAAkB,CAAIC,KAAK,EAAK,CAClC,KAAM,CAAAC,aAAa,CAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CACxC;AACA,KAAM,CAAArB,QAAQ,CAAGmB,aAAa,CAAGG,QAAQ,CAACH,aAAa,CAAE,EAAE,CAAC,CAAG,IAAI,CACnElD,iBAAiB,CAAC+B,QAAQ,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAuB,oBAAoB,CAAIC,IAAI,EAAK,CACnCjD,WAAW,CAACiD,IAAI,CAAC,CACrB,CAAC,CAED;AACA,KAAM,CAAAC,SAAS,CAAIC,GAAG,EAAK,CACvBxB,OAAO,CAACE,GAAG,CAAC,wBAAwB,CAAEsB,GAAG,CAAC,CAC1C/C,2BAA2B,CAAC+C,GAAG,CAAC,CAChCjD,cAAc,CAAC,IAAI,CAAC,CACxB,CAAC,CAED,KAAM,CAAAkD,UAAU,CAAGA,CAAA,GAAM,CACrBlD,cAAc,CAAC,KAAK,CAAC,CACrBE,2BAA2B,CAAC,IAAI,CAAC,CAAE;AACvC,CAAC,CAED;AACA,KAAM,CAAAiD,iBAAiB,CAAG3F,OAAO,CAAC,IAAM,CACpC,GAAIiC,OAAO,EAAI,CAACkB,KAAK,CAACC,OAAO,CAACzB,SAAS,CAAC,CAAE,MAAO,EAAE,CAAE;AAErD,GAAI,CAAAiB,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,IAAI,IAAK,CAAC,CAAE,CAClB;AACA,MAAO,CAAAnB,cAAc,GAAK,IAAI,CACxBJ,SAAS,CAACiE,MAAM,CAACH,GAAG,EAAIA,GAAG,CAACjC,SAAS,GAAKzB,cAAc,CAAC,CACzD,EAAE,CAAE;AACd,CAAC,IAAM,CACH;AACA,MAAO,CAAAJ,SAAS,CACpB,CACJ,CAAC,CAAE,CAACA,SAAS,CAAEI,cAAc,CAAEa,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,IAAI,CAAEjB,OAAO,CAAC,CAAC,CAAE;AAEtD;AAEA;AACA,KAAM,CAAA4D,sBAAsB,CAAG5F,WAAW,CAAE6F,IAAI,EAAK,CACjD,KAAM,CAAAC,eAAe,CAAGD,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,CAAER,GAAG,GAAK,CAC9C,GAAI,CACA;AACA,GAAIA,GAAG,CAACS,SAAS,CAAE,CACf,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACX,GAAG,CAACS,SAAS,CAAC,CACpC,GAAI,CAACG,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAAE,CAAE;AAC1B,KAAM,CAAAC,IAAI,CAAGJ,IAAI,CAACK,WAAW,CAAC,CAAC,CAC/BP,GAAG,CAACM,IAAI,CAAC,CAAG,CAACN,GAAG,CAACM,IAAI,CAAC,EAAI,CAAC,EAAI,CAAC,CACpC,CAAC,IAAM,CACHtC,OAAO,CAACwC,IAAI,CAAC,2BAA2B,CAAEhB,GAAG,CAACiB,WAAW,CAAEjB,GAAG,CAACS,SAAS,CAAC,CAC7E,CACJ,CAAC,IAAM,CACHjC,OAAO,CAACwC,IAAI,CAAC,oBAAoB,CAAEhB,GAAG,CAACiB,WAAW,CAAC,CACvD,CACJ,CAAE,MAAOC,CAAC,CAAE,CACR1C,OAAO,CAAC9B,KAAK,CAAC,0BAA0B,CAAEsD,GAAG,CAACiB,WAAW,CAAEjB,GAAG,CAACS,SAAS,CAAES,CAAC,CAAC,CAChF,CACA,MAAO,CAAAV,GAAG,CACd,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN,KAAM,CAAAW,WAAW,CAAGC,MAAM,CAACC,IAAI,CAACf,eAAe,CAAC,CAACgB,GAAG,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAGC,CAAC,CAAC,CAClF,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAhB,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC,CAE5C,KAAM,CAAAa,WAAW,CAAGT,WAAW,CAACxC,MAAM,CAAG,CAAC,CAAGkD,IAAI,CAACC,GAAG,CAAC,GAAGX,WAAW,CAAC,CAAGQ,WAAW,CACnF,KAAM,CAAAI,WAAW,CAAGZ,WAAW,CAACxC,MAAM,CAAG,CAAC,CAAGkD,IAAI,CAACG,GAAG,CAAC,GAAGb,WAAW,CAAC,CAAGQ,WAAW,CAEnF;AACA,KAAM,CAAAM,SAAS,CAAGL,WAAW,CAC7B,KAAM,CAAAM,OAAO,CAAGL,IAAI,CAACG,GAAG,CAACD,WAAW,CAAEJ,WAAW,CAAC,CAElD,KAAM,CAAAQ,QAAQ,CAAG,EAAE,CACnB;AACA,GAAIF,SAAS,EAAIC,OAAO,CAAE,CACtB,IAAK,GAAI,CAAApB,IAAI,CAAGmB,SAAS,CAAEnB,IAAI,EAAIoB,OAAO,CAAEpB,IAAI,EAAE,CAAE,CAChDqB,QAAQ,CAACC,IAAI,CAACtB,IAAI,CAAC,CACvB,CACJ,CAAC,IAAM,IAAIT,IAAI,CAAC1B,MAAM,GAAK,CAAC,CAAE,CAAE;AAC5B;AAAA,CAGJ;AACA,KAAM,CAAA0D,MAAM,CAAGF,QAAQ,CAACb,GAAG,CAACR,IAAI,EAAIR,eAAe,CAACQ,IAAI,CAAC,EAAI,CAAC,CAAC,CAE/D;AACA,KAAM,CAAAwB,gBAAgB,CAAGD,MAAM,CAAC9B,MAAM,CAAC,CAACC,GAAG,CAAE+B,KAAK,CAAEC,KAAK,GAAK,CAC1DhC,GAAG,CAAC4B,IAAI,CAACI,KAAK,GAAK,CAAC,CAAGD,KAAK,CAAG,CAAC/B,GAAG,CAACgC,KAAK,CAAG,CAAC,CAAC,EAAI,CAAC,EAAID,KAAK,CAAC,CAC7D,MAAO,CAAA/B,GAAG,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEiC,KAAK,CAAEN,QAAQ,CAAEE,MAAM,CAAEC,gBAAiB,CAAC,CACxD,CAAC,CAAE,EAAE,CAAC,CAAE;AAER;AACA,KAAM,CAAAI,mBAAmB,CAAGlI,WAAW,CAAE6F,IAAI,EAAK,CAC9C;AACA,KAAM,CAAAsC,aAAa,CAAGtC,IAAI,CAACE,MAAM,CAAC,CAACC,GAAG,CAAER,GAAG,GAAK,CAC5C,KAAM,CAAA4C,QAAQ,CAAG5C,GAAG,CAACnB,QAAQ,CAAE;AAE/B;AACA,GAAInB,KAAK,CAACC,OAAO,CAACiF,QAAQ,CAAC,CAAE,CACzBA,QAAQ,CAACC,OAAO,CAACC,IAAI,EAAI,KAAAC,eAAA,CAAAC,cAAA,CACrB,KAAM,CAAAC,SAAS,CAAGH,IAAI,SAAJA,IAAI,kBAAAC,eAAA,CAAJD,IAAI,CAAEG,SAAS,UAAAF,eAAA,iBAAfA,eAAA,CAAiBG,IAAI,CAAC,CAAC,CAAE;AAC3C,KAAM,CAAAC,QAAQ,CAAGL,IAAI,SAAJA,IAAI,kBAAAE,cAAA,CAAJF,IAAI,CAAEK,QAAQ,UAAAH,cAAA,iBAAdA,cAAA,CAAgBE,IAAI,CAAC,CAAC,CAEvC,GAAID,SAAS,CAAE,CAAE;AACb,GAAI,CAACzC,GAAG,CAACyC,SAAS,CAAC,CAAE,CACjB;AACAzC,GAAG,CAACyC,SAAS,CAAC,CAAG,CACbA,SAAS,CAAEA,SAAS,CACpBE,QAAQ,CAAEA,QAAQ,EAAIF,SAAS,CAAE;AACjCV,KAAK,CAAE,CACX,CAAC,CACL,CACA;AACA/B,GAAG,CAACyC,SAAS,CAAC,CAACV,KAAK,EAAI,CAAC,CAC7B,CAAC,IAAM,CACF/D,OAAO,CAACwC,IAAI,CAAC,oCAAoC,CAAEhB,GAAG,CAACiB,WAAW,CAAE6B,IAAI,CAAC,CAC9E,CACJ,CAAC,CAAC,CACN,CAAC,IAAM,IAAIF,QAAQ,CAAE,CAChB;AACApE,OAAO,CAAC9B,KAAK,CAAC,mCAAmC,CAAEsD,GAAG,CAACiB,WAAW,CAAE2B,QAAQ,CAAC,CAClF,CACA;AAEA,MAAO,CAAApC,GAAG,CACd,CAAC,CAAE,CAAC,CAAC,CAAC,CAAE;AAER;AACA,KAAM,CAAA4C,gBAAgB,CAAGhC,MAAM,CAACC,IAAI,CAACsB,aAAa,CAAC,CAACnB,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAAC4B,aAAa,CAAC3B,CAAC,CAAC,CAAC,CAEtF;AACA,KAAM,CAAA4B,MAAM,CAAGF,gBAAgB,CAAE;AACjC,KAAM,CAAAG,SAAS,CAAGH,gBAAgB,CAAC9B,GAAG,CAACkC,GAAG,EAAIb,aAAa,CAACa,GAAG,CAAC,CAACL,QAAQ,CAAC,CAAE;AAC5E,KAAM,CAAAd,MAAM,CAAGe,gBAAgB,CAAC9B,GAAG,CAACkC,GAAG,EAAIb,aAAa,CAACa,GAAG,CAAC,CAACjB,KAAK,CAAC,CAAE;AAEtE/D,OAAO,CAACE,GAAG,CAAC,0BAA0B,CAAE,CAAE4E,MAAM,CAAEC,SAAS,CAAElB,MAAO,CAAC,CAAC,CAAE;AAExE,MAAO,CACHiB,MAAM,CAAEA,MAAM,CAAQ;AACtBC,SAAS,CAAEA,SAAS,CAAE;AACtBlB,MAAM,CAAEA,MAAc;AAC1B,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAAE;AAER;AACA;AACA,KAAM,CAAAoB,iBAAiB,CAAGlJ,OAAO,CAAC,IAAM6F,sBAAsB,CAACF,iBAAiB,CAAC,CAAE,CAACA,iBAAiB,CAAEE,sBAAsB,CAAC,CAAC,CAC/H,KAAM,CAAAsD,cAAc,CAAGnJ,OAAO,CAAC,IAAMmI,mBAAmB,CAACxC,iBAAiB,CAAC,CAAE,CAACA,iBAAiB,CAAEwC,mBAAmB,CAAC,CAAC,CAEtH;AACA,KAAM,CAAAiB,UAAU,CAAGnJ,WAAW,CAAE8H,gBAAgB,EAAK,CACjD,GAAI,CAAC5E,KAAK,CAACC,OAAO,CAAC2E,gBAAgB,CAAC,EAAIA,gBAAgB,CAAC3D,MAAM,CAAG,CAAC,CAAE,MAAO,EAAC,CAE7E,GAAI,CAAAiF,CAAC,CAAG,CAAC,CACT,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGvB,gBAAgB,CAAC3D,MAAM,CAAEkF,CAAC,EAAE,CAAE,CAC9C,KAAM,CAAAC,IAAI,CAAGxB,gBAAgB,CAACuB,CAAC,CAAC,CAAGvB,gBAAgB,CAACuB,CAAC,CAAC,CAAC,CAAC,CACxD,GAAIC,IAAI,CAAG,CAAC,CAAE,CACVF,CAAC,EAAIE,IAAI,CACb,CACJ,CACA,MAAO,CAAAF,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,YAAY,CAAGxJ,OAAO,CAAC,IAAM,CAC/B,MAAO,CAAAoJ,UAAU,CAACF,iBAAiB,CAACnB,gBAAgB,CAAC,CACzD,CAAC,CAAE,CAACmB,iBAAiB,CAACnB,gBAAgB,CAAEqB,UAAU,CAAC,CAAC,CAEpD;AACA,KAAM,CAAAK,UAAU,CAAGzJ,OAAO,CAAC,KAAO,CAC9B+I,MAAM,CAAEG,iBAAiB,CAAChB,KAAK,CAC/BwB,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE/G,IAAI,CAACM,IAAI,GAAK,CAAC,CAAG,0BAA0BD,aAAa,CAAC,CAAC,EAAI,UAAU,EAAE,CAAG,0BAA0B,CAC/Ge,IAAI,CAAEkF,iBAAiB,CAACpB,MAAM,CAC9B8B,eAAe,CAAE,yBAAyB,CAAE;AAC5CC,WAAW,CAAE,uBAAuB,CACpCC,WAAW,CAAE,CACjB,CAAC,CACL,CAAC,CAAC,CAAE,CAACZ,iBAAiB,CAAEtG,IAAI,CAACM,IAAI,CAAED,aAAa,CAAC,CAAC,CAAE;AAEpD,KAAM,CAAA8G,cAAc,CAAG/J,OAAO,CAAC,KAAO,CAClC+I,MAAM,CAAEG,iBAAiB,CAAChB,KAAK,CAC/BwB,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE/G,IAAI,CAACM,IAAI,GAAK,CAAC,CAAG,0BAA0BD,aAAa,CAAC,CAAC,EAAI,UAAU,EAAE,CAAG,0BAA0B,CAC/Ge,IAAI,CAAEkF,iBAAiB,CAACnB,gBAAgB,CACxC6B,eAAe,CAAE,yBAAyB,CAAE;AAC5CC,WAAW,CAAE,uBAAuB,CACpCC,WAAW,CAAE,CACjB,CAAC,CACL,CAAC,CAAC,CAAE,CAACZ,iBAAiB,CAAEtG,IAAI,CAACM,IAAI,CAAED,aAAa,CAAC,CAAC,CAAE;AAEpD,KAAM,CAAA+G,OAAO,CAAGhK,OAAO,CAAC,KAAO,CAC3B+I,MAAM,CAAEI,cAAc,CAACJ,MAAM,CAAE;AAC/BW,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE/G,IAAI,CAACM,IAAI,GAAK,CAAC,CAAG,gCAAgCD,aAAa,CAAC,CAAC,EAAI,UAAU,EAAE,CAAG,gCAAgC,CAC3He,IAAI,CAAEmF,cAAc,CAACrB,MAAM,CAC3B8B,eAAe,CAAE,yBAAyB,CAAE;AAC5CC,WAAW,CAAE,uBAAuB,CACpCC,WAAW,CAAE,CACjB,CAAC,CACL,CAAC,CAAC,CAAE,CAACX,cAAc,CAAEvG,IAAI,CAACM,IAAI,CAAED,aAAa,CAAC,CAAC,CAAE;AAEjD;AAEA;AACC,KAAM,CAAAgH,aAAa,CAAGjK,OAAO,CAAC,IAAM,CAACkK,SAAS,CAAEC,SAAS,IAAM,CAC3DC,UAAU,CAAE,IAAI,CAChBC,mBAAmB,CAAE,KAAK,CAAE;AAC5BC,OAAO,CAAE,CACLC,MAAM,CAAE,CACJC,QAAQ,CAAE,KAAO;AACrB,CAAC,CACDC,KAAK,CAAE,CACHC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAET,SAAS,CAAE;AACjBU,IAAI,CAAE,CAAEC,IAAI,CAAE,EAAG,CAAG;AACxB,CAAC,CACDC,OAAO,CAAE,CAAE;AACPvF,IAAI,CAAE,OAAO,CAAE;AACfwF,SAAS,CAAE,KAAO;AACtB,CACJ,CAAC,CACDC,MAAM,CAAE,CACJC,CAAC,CAAE,CAAE;AACDR,KAAK,CAAE,CACHC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAER,SAAW;AACrB,CAAC,CACDe,KAAK,CAAE,CACHC,QAAQ,CAAE,IAAI,CAAE;AAChBC,WAAW,CAAE,EAAE,CAAE;AACjBC,WAAW,CAAE,CAAE;AACnB,CACJ,CAAC,CACDC,CAAC,CAAE,CAAE;AACDC,WAAW,CAAE,IAAI,CAAE;AACnBd,KAAK,CAAE,CACHC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,uBAAyB;AACnC,CAAC,CACDO,KAAK,CAAE,CACF;AACDM,SAAS,CAAE,CACf,CACJ,CACJ,CACJ,CAAC,CAAC,CAAE,EAAE,CAAC,CAAE;AAEV;AACA,KAAM,CAAAC,aAAa,CAAGzL,OAAO,CAAC,IAAMiK,aAAa,CAC7CrH,IAAI,CAACM,IAAI,GAAK,CAAC,CAAG,mCAAmCD,aAAa,CAAC,CAAC,EAAI,UAAU,GAAG,CAAG,wBAAwB,CAChH,KAAM;AACV,CAAC,CAAE,CAACgH,aAAa,CAAErH,IAAI,CAACM,IAAI,CAAED,aAAa,CAAC,CAAC,CAE7C,KAAM,CAAAyI,iBAAiB,CAAG1L,OAAO,CAAC,IAAMiK,aAAa,CACjDrH,IAAI,CAACM,IAAI,GAAK,CAAC,CAAG,kCAAkCD,aAAa,CAAC,CAAC,EAAI,UAAU,GAAG,CAAG,mCAAmC,CAC1H,KAAM;AACV,CAAC,CAAE,CAACgH,aAAa,CAAErH,IAAI,CAACM,IAAI,CAAED,aAAa,CAAC,CAAC,CAE7C;AACA,KAAM,CAAA0I,UAAU,CAAG3L,OAAO,CAAC,IAAM,CAC7B,KAAM,CAAAyK,KAAK,CAAG7H,IAAI,CAACM,IAAI,GAAK,CAAC,CACvB,mCAAmCD,aAAa,CAAC,CAAC,EAAI,UAAU,GAAG,CACnE,oCAAoC,CAC1C,KAAM,CAAA2I,QAAQ,CAAG3B,aAAa,CAACQ,KAAK,CAAE,sBAAsB,CAAC,CAAE;AAE/D;AACAmB,QAAQ,CAACtB,OAAO,CAACQ,OAAO,CAAG,CACvB,GAAGc,QAAQ,CAACtB,OAAO,CAACQ,OAAO,CAAE;AAC7Be,SAAS,CAAE,CACPlC,KAAK,CAAE,QAAAA,CAASmC,OAAO,CAAE,CAAE;AACvB,GAAI,KAAAC,IAAA,CAAAC,iBAAA,CAAAC,qBAAA,CACA,KAAM,CAAAC,UAAU,CAAGJ,OAAO,CAACK,SAAS,CAAE;AACtC,KAAM,CAAAnE,KAAK,EAAA+D,IAAA,EAAAC,iBAAA,CAAGF,OAAO,CAACM,MAAM,CAACd,CAAC,UAAAU,iBAAA,UAAAA,iBAAA,CAAIF,OAAO,CAACO,OAAO,CAACrI,IAAI,CAACkI,UAAU,CAAC,UAAAH,IAAA,UAAAA,IAAA,CAAI,CAAC,CAAE;AAEzE;AACA;AACA,KAAM,CAAAnD,QAAQ,EAAAqD,qBAAA,CAAG9C,cAAc,CAACH,SAAS,UAAAiD,qBAAA,iBAAxBA,qBAAA,CAA2BC,UAAU,CAAC,CAAE;AAEzD;AACA,KAAM,CAAAI,YAAY,CAAG1D,QAAQ,EAAIkD,OAAO,CAACnC,KAAK,EAAI,EAAE,CAAE;AAEtD,MAAO,GAAG2C,YAAY,KAAKtE,KAAK,EAAE,CAAE;AACxC,CAAE,MAAOrB,CAAC,CAAE,CACR1C,OAAO,CAAC9B,KAAK,CAAC,gCAAgC,CAAEwE,CAAC,CAAC,CAClD;AACA,MAAO,GAAGmF,OAAO,CAACnC,KAAK,EAAI,QAAQ,KAAKmC,OAAO,CAACM,MAAM,CAACd,CAAC,EAAI,CAAC,EAAE,CACnE,CACJ,CACJ,CACJ,CAAC,CAED,MAAO,CAAAM,QAAQ,CAEnB,CAAC,CAAE,CAAC3B,aAAa,CAAErH,IAAI,CAACM,IAAI,CAAED,aAAa,CAAEkG,cAAc,CAACH,SAAS,CAAC,CAAC,CAAE;AAGzE;AACC,KAAM,CAAAuD,UAAU,CAAGtM,WAAW,CAAEuM,UAAU,EAAK,CAC3C,GAAI,CAACA,UAAU,CAAE,MAAO,KAAK,CAAE;AAC/B,GAAI,CACA,KAAM,CAAArG,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACoG,UAAU,CAAC,CACjC;AACA,MAAO,CAAAnG,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAAG,eAAe,CAAGH,IAAI,CAACsG,kBAAkB,CAAC,OAAO,CAAC,CAAE;AACvF,CAAE,MAAO9F,CAAC,CAAE,CACR1C,OAAO,CAAC9B,KAAK,CAAC,wBAAwB,CAAEqK,UAAU,CAAE7F,CAAC,CAAC,CACtD,MAAO,aAAa,CAAE;AAC1B,CACJ,CAAC,CAAE,EAAE,CAAC,CAAE;AAGT;AAEA;AACA,GAAI1E,OAAO,CAAE,mBAAOlB,IAAA,QAAK2L,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,0FAAkB,CAAK,CAAC,CAErE;AACA,GAAIxK,KAAK,CAAE,mBACPlB,KAAA,QAAKyL,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5B5L,IAAA,QAAK2L,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAExK,KAAK,CAAM,CAAC,cAEnCpB,IAAA,QAAK2L,SAAS,CAAC,gBAAgB,CAACE,KAAK,CAAE,CAAEC,cAAc,CAAE,QAAQ,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAH,QAAA,cACnF5L,IAAA,WAAQgM,OAAO,CAAEhI,UAAW,CAAC2H,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,gCAAK,CAAQ,CAAC,CAGlE,CAAC,EACN,CAAC,CAGV;AACA,mBACI1L,KAAA,QAAKyL,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAE/B1L,KAAA,QAAKyL,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5B5L,IAAA,OAAA4L,QAAA,CAAI,mGAAiB,CAAI,CAAC,cAC1B1L,KAAA,QAAKyL,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3B5L,IAAA,WAAQgM,OAAO,CAAEhI,UAAW,CAAC2H,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,gCAAK,CAAQ,CAAC,cACnE5L,IAAA,WAAQgM,OAAO,CAAElI,YAAa,CAAC6H,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,gCAAK,CAAQ,CAAC,EACtE,CAAC,EACL,CAAC,CAGL,CAAA/J,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEM,IAAI,IAAK,CAAC,eACbjC,KAAA,QAAKyL,SAAS,CAAC,oBAAoB,CAAAC,QAAA,EAE7B9K,OAAO,CAACuC,MAAM,CAAG,CAAC,cACfnD,KAAA,QAAKyL,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5B5L,IAAA,UAAOiM,OAAO,CAAC,eAAe,CAAAL,QAAA,CAAC,mDAAS,CAAO,CAAC,cAChD5L,IAAA,WACIkM,EAAE,CAAC,eAAe,CAClB7H,KAAK,CAAErD,cAAc,SAAdA,cAAc,UAAdA,cAAc,CAAI,EAAI;AAAA,CAC7BmL,QAAQ,CAAElI,kBAAmB,CAC7B0H,SAAS,CAAC,eAAe,CACzBS,QAAQ,CAAElL,OAAS;AAAA,CAAA0K,QAAA,CAIlB9K,OAAO,CAACkF,GAAG,CAAC1D,MAAM,eACftC,IAAA,WAA+BqE,KAAK,CAAE/B,MAAM,CAACG,SAAU,CAAAmJ,QAAA,CAElDtJ,MAAM,CAACI,YAAY,EAAI,OAAOJ,MAAM,CAACG,SAAS,EAAE,EAFxCH,MAAM,CAACG,SAGZ,CACX,CAAC,CACE,CAAC,EACR,CAAC,cAEL;AACDzC,IAAA,MAAG2L,SAAS,CAAC,oBAAoB,CAAAC,QAAA,CAAC,8MAAuC,CAAG,CAC/E,CAGD5K,cAAc,GAAK,IAAI,eACpBd,KAAA,QAAKyL,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9B5L,IAAA,WACI2L,SAAS,CAAE,oBAAoBrK,QAAQ,GAAK,UAAU,CAAG,QAAQ,CAAG,EAAE,EAAG,CACzE0K,OAAO,CAAEA,CAAA,GAAMzH,oBAAoB,CAAC,UAAU,CAAE,CAChD,eAAcjD,QAAQ,GAAK,UAAY;AAAA,CAAAsK,QAAA,CAC1C,mFAED,CAAQ,CAAC,cACT5L,IAAA,WACI2L,SAAS,CAAE,oBAAoBrK,QAAQ,GAAK,WAAW,CAAG,QAAQ,CAAG,EAAE,EAAG,CAC1E0K,OAAO,CAAEA,CAAA,GAAMzH,oBAAoB,CAAC,WAAW,CAAE,CACjD,eAAcjD,QAAQ,GAAK,WAAa;AAAA,CAAAsK,QAAA,CAC3C,+FAED,CAAQ,CAAC,EACR,CACR,CACC5K,cAAc,GAAK,IAAI,EAAIF,OAAO,CAACuC,MAAM,CAAG,CAAC,eACzCrD,IAAA,MAAG2L,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAAC,yNAAwC,CAAG,CACnF,EACD,CACR,cAGD5L,IAAA,QAAK2L,SAAS,CAAC,cAAc,CAAAC,QAAA,CACxBtK,QAAQ,GAAK,UAAU,cACpB;AACApB,KAAA,QAAKyL,SAAS,CAAC,aAAa,CAAAC,QAAA,eAExB1L,KAAA,QAAKyL,SAAS,CAAC,yBAAyB,CAAAC,QAAA,eACpC5L,IAAA,OAAA4L,QAAA,CAAI,wIAAwB,CAAI,CAAC,cACjC5L,IAAA,QAAK2L,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAEnD,YAAY,CAAM,CAAC,cAC7CzI,IAAA,QAAK2L,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,47BAG/B,CAAK,CAAC,EACL,CAAC,CAGJ,CAAC/J,IAAI,CAACM,IAAI,GAAK,CAAC,EAAInB,cAAc,GAAK,IAAI,GAAK4D,iBAAiB,CAACvB,MAAM,CAAG,CAAC,cACzEnD,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eAEI5L,IAAA,QAAK2L,SAAS,CAAC,eAAe,CAAAC,QAAA,CACxBzD,iBAAiB,CAAChB,KAAK,CAAC9D,MAAM,CAAG,CAAC,cAC/BrD,IAAA,CAACF,GAAG,EAACuM,OAAO,CAAE3B,aAAc,CAACzH,IAAI,CAAEyF,UAAW,CAAE,CAAC,cAEjD1I,IAAA,MAAG2L,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,sGAAoB,CAAG,CACzD,CACD,CAAC,cAEN5L,IAAA,QAAK2L,SAAS,CAAC,eAAe,CAAAC,QAAA,CACxBzD,iBAAiB,CAAChB,KAAK,CAAC9D,MAAM,CAAG,CAAC,cAC/BrD,IAAA,CAACF,GAAG,EAACuM,OAAO,CAAE1B,iBAAkB,CAAC1H,IAAI,CAAE+F,cAAe,CAAE,CAAC,cAEvDhJ,IAAA,MAAG2L,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,sGAAoB,CAAG,CAAE;AAC7D,CACD,CAAC,cAEN5L,IAAA,QAAK2L,SAAS,CAAC,iCAAiC,CAAAC,QAAA,CAE1CxD,cAAc,CAACJ,MAAM,CAAC3E,MAAM,CAAG,CAAC,cAC7BrD,IAAA,CAACF,GAAG,EAACuM,OAAO,CAAEzB,UAAW,CAAC3H,IAAI,CAAEgG,OAAQ,CAAE,CAAC,cAE3CjJ,IAAA,MAAG2L,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,uOAA4C,CAAG,CACjF,CACD,CAAC,EACR,CAAC,cAEH;AACA5L,IAAA,QAAK2L,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAC9C/J,IAAI,CAACM,IAAI,GAAK,CAAC,CACXnB,cAAc,GAAK,IAAI,CAAG,uDAAuD,CAAG,sDAAsDkB,aAAa,CAAC,CAAC,IAAI,CAC9J,oDAAoD,CAEvD,CACR,EACD,CAAC,cAEN;AACClC,IAAA,QAAK2L,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAEzB,CAAC/J,IAAI,CAACM,IAAI,GAAK,CAAC,EAAInB,cAAc,GAAK,IAAI,GAAK4D,iBAAiB,CAACvB,MAAM,CAAG,CAAC,cACzEnD,KAAA,UAAOyL,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9B5L,IAAA,UAAA4L,QAAA,cACI1L,KAAA,OAAA0L,QAAA,EAEK/J,IAAI,CAACM,IAAI,GAAK,CAAC,eAAInC,IAAA,OAAA4L,QAAA,CAAI,kDAAQ,CAAI,CAAC,cACrC5L,IAAA,OAAA4L,QAAA,CAAI,yGAAkB,CAAI,CAAC,cAC3B5L,IAAA,OAAA4L,QAAA,CAAI,2GAAoB,CAAI,CAAC,cAC7B5L,IAAA,OAAA4L,QAAA,CAAI,oDAAU,CAAI,CAAC,cACnB5L,IAAA,OAAA4L,QAAA,CAAI,+DAAW,CAAI,CAAC,cACpB5L,IAAA,OAAA4L,QAAA,CAAI,kDAAQ,CAAI,CAAC,EACjB,CAAC,CACF,CAAC,cACR5L,IAAA,UAAA4L,QAAA,CACKhH,iBAAiB,CAACoB,GAAG,CAAEtB,GAAG,eACvBxE,KAAA,OAAA0L,QAAA,EAEK/J,IAAI,CAACM,IAAI,GAAK,CAAC,eAAInC,IAAA,OAAA4L,QAAA,CAAKlH,GAAG,CAAC4H,UAAU,EAAIpK,aAAa,CAAC,CAAC,EAAI,KAAK,CAAK,CAAC,cAEzElC,IAAA,OAAA4L,QAAA,CAAKlH,GAAG,CAAC6H,WAAW,EAAI,KAAK,CAAK,CAAC,cACnCvM,IAAA,OAAA4L,QAAA,CAAKlH,GAAG,CAAC8H,QAAQ,EAAI9H,GAAG,CAAC+H,QAAQ,EAAI,KAAK,CAAK,CAAC,IAAC,cACjDzM,IAAA,OAAA4L,QAAA,CAAKlH,GAAG,CAACgI,SAAS,EAAI,KAAK,CAAK,CAAC,cACjC1M,IAAA,OAAA4L,QAAA,CAAKJ,UAAU,CAAC9G,GAAG,CAACS,SAAS,CAAC,CAAK,CAAC,IAAC,cACrCnF,IAAA,OAAA4L,QAAA,cAEI5L,IAAA,WACI2L,SAAS,CAAC,gBAAgB,CAC1BK,OAAO,CAAEA,CAAA,GAAMvH,SAAS,CAACC,GAAG,CAAG;AAAA,CAAAkH,QAAA,CAClC,oEAED,CAAQ,CAAC,CACT,CAAC,GAhBAlH,GAAG,CAACiB,WAiBT,CACP,CAAC,CACC,CAAC,EACL,CAAC,cAER;AACA3F,IAAA,QAAK2L,SAAS,CAAC,oCAAoC,CAAAC,QAAA,CAC9C/J,IAAI,CAACM,IAAI,GAAK,CAAC,CACXnB,cAAc,GAAK,IAAI,CAAG,iEAAiE,CAAG,0DAA0DkB,aAAa,CAAC,CAAC,IAAI,CAC5K,wCAAwC,CAE3C,CACR,CACD,CACT,CACA,CAAC,cAGNlC,IAAA,CAACX,KAAK,EACFsN,MAAM,CAAEnL,WAAY,CACpBoL,cAAc,CAAEjI,UAAW,CAC3BkI,YAAY,CAAC,6FAAmB;AAAA,CAChClB,SAAS,CAAC,eAAgB;AAAA,CAC1BmB,gBAAgB,CAAC,eAAgB;AAAA,CACjCC,WAAW,CAAE,IAAM;AAAA,CAAAnB,QAAA,CAGlBlK,wBAAwB,cACrBxB,KAAA,CAAAE,SAAA,EAAAwL,QAAA,eAEI1L,KAAA,OAAA0L,QAAA,EAAI,qGAAmB,CAAClK,wBAAwB,CAACgL,SAAS,EAAIhL,wBAAwB,CAACiE,WAAW,EAAK,CAAC,cACxG3F,IAAA,WAAQgM,OAAO,CAAErH,UAAW,CAACgH,SAAS,CAAC,oBAAoB,CAAC,aAAW,4CAAS,CAAAC,QAAA,CAAC,MAAO,CAAQ,CAAC,cAGjG1L,KAAA,QAAKyL,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eAE7B1L,KAAA,MAAA0L,QAAA,eAAG5L,IAAA,WAAA4L,QAAA,CAAQ,mDAAS,CAAQ,CAAC,IAAC,CAAClK,wBAAwB,CAAC4K,UAAU,EAAIpK,aAAa,CAAC,CAAC,EAAI,KAAK,EAAI,CAAC,cACnGhC,KAAA,MAAA0L,QAAA,eAAG5L,IAAA,WAAA4L,QAAA,CAAQ,0GAAmB,CAAQ,CAAC,IAAC,CAAClK,wBAAwB,CAAC6K,WAAW,EAAI,KAAK,EAAI,CAAC,cAC3FrM,KAAA,MAAA0L,QAAA,eAAG5L,IAAA,WAAA4L,QAAA,CAAQ,4GAAqB,CAAQ,CAAC,IAAC,CAAClK,wBAAwB,CAAC+K,QAAQ,EAAI,KAAK,EAAI,CAAC,cAC1FvM,KAAA,MAAA0L,QAAA,eAAG5L,IAAA,WAAA4L,QAAA,CAAQ,kHAAsB,CAAQ,CAAC,IAAC,CAAClK,wBAAwB,CAAC8K,QAAQ,EAAI,KAAK,EAAI,CAAC,cAC3FtM,KAAA,MAAA0L,QAAA,eAAG5L,IAAA,WAAA4L,QAAA,CAAQ,4HAAsB,CAAQ,CAAC,IAAC,CAAClK,wBAAwB,CAACgL,SAAS,EAAI,KAAK,EAAI,CAAC,cAC5FxM,KAAA,MAAA0L,QAAA,eAAG5L,IAAA,WAAA4L,QAAA,CAAQ,gEAAY,CAAQ,CAAC,IAAC,CAACJ,UAAU,CAAC9J,wBAAwB,CAACyD,SAAS,CAAC,EAAI,CAAC,cAItFjF,KAAA,MAAGyL,SAAS,CAAC,aAAa,CAAAC,QAAA,eACtB5L,IAAA,WAAA4L,QAAA,CAAQ,sEAAa,CAAQ,CAAC,CAE5BxJ,KAAK,CAACC,OAAO,CAACX,wBAAwB,CAAC6B,QAAQ,CAAC,EAAI7B,wBAAwB,CAAC6B,QAAQ,CAACF,MAAM,CAAG,CAAC,CAC3F3B,wBAAwB,CAAC6B,QAAQ,CAC5ByC,GAAG,CAACgH,CAAC,EAAIA,CAAC,CAACnF,QAAQ,EAAImF,CAAC,CAACrF,SAAS,CAAE;AAAA,CACpC9C,MAAM,CAACoI,OAAO,CAAE;AAAA,CAChBC,IAAI,CAAC,IAAI,CAAE;AAAA,CAChB,YAAY,CAAC,GAAC,EACtB,CAAC,EACJ,CAAC,EACR,CAAC,cAEF;AACDlN,IAAA,MAAA4L,QAAA,CAAG,gGAAmB,CAAG,CAC5B,CACE,CAAC,EACP,CAAC,CAEd,CAEA,cAAe,CAAAjL,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}